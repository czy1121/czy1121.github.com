<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title><![CDATA[Android 7.0-使用FileProvider在应用之间共享文件]]></title>
      <url>/p/20170822/android-7-fileprovider/</url>
      <content type="html"><![CDATA[<h3 id="FileProvider-介绍"><a href="#FileProvider-介绍" class="headerlink" title="FileProvider 介绍"></a>FileProvider 介绍</h3><p>FileProvider 是 ContentProvider 的一个特殊子类，通过以 <code>content://</code> 代替 <code>file:///</code> Uri 来安全地分享与app关联的文件。</p>
<p>”content URI“允许你给授予临时的读写访问权限。</p>
<p>当你创建一个包含”content URI“的 Intent 时，想要将它发送给另一个app你需要调用<code>Intent.setFlags()</code>添加权限。Intent被发到Activity时，这些权限在此Activity在栈中活动期间可用。Intent被发到Service时，这些权限在此Service运行期间可用。</p>
<p>作为对比，使用<code>file:///</code> Uri 控制访问，你必须修改文件的文件系统权限。你提供的权限对所有app可用并保持有效直到你改变它们。这种级别的访问从根本上是不安全的。</p>
<p>”content URI“提供的文件访问安全性使FileProvider成为Android安全基础设施的一个关键部分。</p>
<a id="more"></a>
<h3 id="指定对外暴露的目录"><a href="#指定对外暴露的目录" class="headerlink" title="指定对外暴露的目录"></a>指定对外暴露的目录</h3><p>创建一个xml文件并在其中指定对外暴露的目录。</p>
<p>路径节点包含以下两个属性：</p>
<ul>
<li><strong>name</strong>，URI路径片段。用于分享时隐藏真实路径。</li>
<li><strong>path</strong>，待分享的子目录。留空表示该类路径的根目录。</li>
</ul>
<p>有多种路径节点类型：</p>
<ul>
<li><strong>files-path</strong>，应用内部存储的files子目录，对应Context.getFilesDir()<br>例如<code>/data/user/0/${applicationId}/files</code></li>
<li><strong>cache-path</strong>，应用内部存储的cache子目录，对应Context.getCacheDir()<br>例如<code>/data/user/0/${applicationId}/cache</code></li>
<li><strong>external-files-path</strong>，应用外部存储的files子目录，对应Context.getExternalFilesDir(String)<br>例如<code>/storage/emulated/0/Android/data/${applicationId}/files</code></li>
<li><strong>external-cache-path</strong>，应用外部存储的cache子目录，对应Context.getExternalCacheDir()<br>例如<code>/storage/emulated/0/Android/data/${applicationId}/cache</code></li>
<li><strong>external-path</strong>，外部存储根目录，对应Environment.getExternalStorageDirectory()<br>例如<code>/storage/emulated/0</code></li>
<li><strong>root-path</strong>，系统根目录”/“</li>
</ul>
<p>xml/file_paths.xml<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">paths</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span>&gt;</span></div><div class="line">    <span class="comment">&lt;!-- content://$&#123;applicationId&#125;/app_internal_files/ --&gt;</span></div><div class="line">    <span class="comment">&lt;!-- file:///data/user/0/$&#123;applicationId&#125;/files/example/ --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">files-path</span> <span class="attr">name</span>=<span class="string">"app_internal_files"</span> <span class="attr">path</span>=<span class="string">"example"</span> /&gt;</span></div><div class="line">    </div><div class="line">    <span class="comment">&lt;!-- content://$&#123;applicationId&#125;/app_internal_cache/ --&gt;</span></div><div class="line">    <span class="comment">&lt;!-- file:///data/user/0/$&#123;applicationId&#125;/cache/example/ --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">cache-path</span> <span class="attr">name</span>=<span class="string">"app_internal_cache"</span> <span class="attr">path</span>=<span class="string">"example"</span> /&gt;</span></div><div class="line">    </div><div class="line">    <span class="comment">&lt;!-- content://$&#123;applicationId&#125;/app_external_files/ --&gt;</span></div><div class="line">    <span class="comment">&lt;!-- file:///storage/emulated/0/Android/data/$&#123;applicationId&#125;/files/example/ --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">external-files-path</span> <span class="attr">name</span>=<span class="string">"app_external_files"</span> <span class="attr">path</span>=<span class="string">"example"</span> /&gt;</span></div><div class="line">    </div><div class="line">    <span class="comment">&lt;!-- content://$&#123;applicationId&#125;/app_external_cache/ --&gt;</span></div><div class="line">    <span class="comment">&lt;!-- file:///storage/emulated/0/Android/data/$&#123;applicationId&#125;/cache/example/ --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">external-cache-path</span> <span class="attr">name</span>=<span class="string">"app_external_cache"</span> <span class="attr">path</span>=<span class="string">"example"</span> /&gt;</span></div><div class="line">    </div><div class="line">    <span class="comment">&lt;!-- content://$&#123;applicationId&#125;/external_root/ --&gt;</span></div><div class="line">    <span class="comment">&lt;!-- file:///storage/emulated/0/example/ --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">external-path</span> <span class="attr">name</span>=<span class="string">"external_root"</span> <span class="attr">path</span>=<span class="string">"example"</span> /&gt;</span></div><div class="line">    </div><div class="line">    <span class="comment">&lt;!-- content://$&#123;applicationId&#125;/system_root/ --&gt;</span></div><div class="line">    <span class="comment">&lt;!-- file:///example/ --&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">root-path</span> <span class="attr">name</span>=<span class="string">"system_root"</span> <span class="attr">path</span>=<span class="string">"example"</span> /&gt;</span></div><div class="line">    </div><div class="line">     </div><div class="line">    <span class="tag">&lt;<span class="name">external-cache-path</span> <span class="attr">name</span>=<span class="string">"images"</span> <span class="attr">path</span>=<span class="string">"images"</span> /&gt;</span>   </div><div class="line"><span class="tag">&lt;/<span class="name">paths</span>&gt;</span></div></pre></td></tr></table></figure></p>
<h3 id="声明FileProvider"><a href="#声明FileProvider" class="headerlink" title="声明FileProvider"></a>声明FileProvider</h3><p>在Manifest.xml中声明FileProvider并添加android:name为<code>android.support.FILE_PROVIDER_PATHS</code>的<code>&lt;meta-data/&gt;</code></p>
<ul>
<li><strong>android:name</strong>，通常用v4包提供的FileProvider，也可以用自定义的。</li>
<li><strong>android:authorities</strong>，通常格式为<code>${applicationId}.${yourprovider}</code>。</li>
<li><strong>android:exported</strong>，false，表示不需要对外开放。</li>
<li><strong>android:grantUriPermissions</strong>，设为true，表示允许授予临时共享权限。  </li>
</ul>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">manifest</span>&gt;</span></div><div class="line">    ...</div><div class="line">    <span class="tag">&lt;<span class="name">application</span>&gt;</span></div><div class="line">        ...</div><div class="line">        <span class="tag">&lt;<span class="name">provider</span></span></div><div class="line"><span class="tag">            <span class="attr">android:name</span>=<span class="string">"android.support.v4.content.FileProvider"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:authorities</span>=<span class="string">"com.mydomain.fileprovider"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:exported</span>=<span class="string">"false"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:grantUriPermissions</span>=<span class="string">"true"</span>&gt;</span></div><div class="line">            <span class="tag">&lt;<span class="name">meta-data</span></span></div><div class="line"><span class="tag">                <span class="attr">android:name</span>=<span class="string">"android.support.FILE_PROVIDER_PATHS"</span></span></div><div class="line"><span class="tag">                <span class="attr">android:resource</span>=<span class="string">"@xml/file_paths"</span> /&gt;</span></div><div class="line">        <span class="tag">&lt;/<span class="name">provider</span>&gt;</span></div><div class="line">        ...</div><div class="line">    <span class="tag">&lt;/<span class="name">application</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">manifest</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="授予文件临时权限并分享"><a href="#授予文件临时权限并分享" class="headerlink" title="授予文件临时权限并分享"></a>授予文件临时权限并分享</h3><p>分享应用files目录下images子目录的文件default_image.jpg</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">File file = <span class="keyword">new</span> File(getExternalCacheDir(), <span class="string">"images/default_image.jpg"</span>);</div><div class="line">Uri contentUri = FileProvider.getUriForFile(<span class="keyword">this</span>, <span class="string">"com.mydomain.fileprovider"</span>, file);</div></pre></td></tr></table></figure>
<p>给Uri授予临时权限，有 读/写 两个权限，可以单独或同时授予</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">Intent intent = <span class="keyword">new</span> Intent(MediaStore.ACTION_IMAGE_CAPTURE);</div><div class="line">intent.putExtra(MediaStore.EXTRA_OUTPUT, contentUri);</div><div class="line">intent.addFlags(Intent.FLAG_GRANT_READ_URI_PERMISSION | Intent.FLAG_GRANT_WRITE_URI_PERMISSION);</div></pre></td></tr></table></figure>
<p>发送Intent</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">startActivityForResult(intent, REQUEST_TAKE_PHOTO);</div></pre></td></tr></table></figure>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><blockquote>
<p><a href="https://developer.android.com/reference/android/support/v4/content/FileProvider.html" target="_blank" rel="external">https://developer.android.com/reference/android/support/v4/content/FileProvider.html</a><br><a href="https://developer.android.com/training/camera/photobasics.html" target="_blank" rel="external">https://developer.android.com/training/camera/photobasics.html</a></p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 开发 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 7 </tag>
            
            <tag> 安全 </tag>
            
            <tag> 适配 </tag>
            
            <tag> android </tag>
            
            <tag> FileProvider </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[移动应用多屏支持]]></title>
      <url>/p/20170713/mobile-app-multiple-screen-support/</url>
      <content type="html"><![CDATA[<h2 id="基础概念"><a href="#基础概念" class="headerlink" title="基础概念"></a>基础概念</h2><h3 id="常见尺寸单位"><a href="#常见尺寸单位" class="headerlink" title="常见尺寸单位"></a>常见尺寸单位</h3><ul>
<li><code>mm</code>毫米，长度单位。`</li>
<li><code>in(inch|″)</code> 英寸，长度单位，<code>1in=25.4mm</code>。</li>
<li><code>px(pixel)</code> 像素，图像显示的基本单位。</li>
</ul>
<h3 id="密度单位"><a href="#密度单位" class="headerlink" title="密度单位"></a>密度单位</h3><ul>
<li><code>ppi(pixels per inch), px/in</code> 密度单位，每英寸像素数。</li>
<li><code>dpi(dots per inch)</code> 密度单位，每英寸能印刷的点数。</li>
</ul>
<p>ppi 与 dpi 基本上等价。不过iOS一般用ppi，Android一般用dpi。 </p>
<h3 id="屏幕尺寸与分辨率"><a href="#屏幕尺寸与分辨率" class="headerlink" title="屏幕尺寸与分辨率"></a>屏幕尺寸与分辨率</h3><ul>
<li><code>对角线长度(diagonal)</code> 屏幕物理尺寸(英寸)。 </li>
<li><code>分辨率(resolution)</code> 屏幕上的像素总数，通常写作<code>width*height</code>。</li>
</ul>
<p>如分辨率1080*1920，表示设备水平方向上有1080个像素，垂直方向有1920个像素。</p>
<h3 id="屏幕方向"><a href="#屏幕方向" class="headerlink" title="屏幕方向"></a>屏幕方向</h3><p>手机(handset)与平板(tablet)通常有竖屏横屏两种使用的方向模式。</p>
<ul>
<li><code>竖屏(portrait)</code>时宽度小于高度。</li>
<li><code>横屏(landscape)</code>时宽度大于高度。</li>
</ul>
<p>一个分辨率1080*1920的设备。<br>处于竖屏模式时，屏幕宽高为 1080*1920。<br>处于横屏模式时，屏幕宽高为 1920*1080。</p>
<h3 id="逻辑像素单位-dp-sp-pt"><a href="#逻辑像素单位-dp-sp-pt" class="headerlink" title="逻辑像素单位(dp/sp/pt)"></a>逻辑像素单位(dp/sp/pt)</h3><p>开发时一般不直接使用物理像素(px)而是使用逻辑像素。</p>
<ul>
<li><code>dp(dip, density-independent pixel)</code> 密度无关像素，用于定义 Android 布局的位置和尺寸。在160dpi屏上<code>1dp = 1px</code>。</li>
<li><code>sp(sip, scale-independent pixel)</code> 缩放无关像素，用于定义文字大小，类似且默认等于 dp，使用此单位可让用户在运行时改变配置调整字体大小。</li>
<li><code>pt(point)</code> 点，iOS 开发中用的逻辑像素单位，与 dp 基本上等价。 </li>
<li><code>dp/in, pt/in</code> 逻辑密度，每英寸逻辑像素数。</li>
</ul>
<h3 id="缩放系数-设备密度"><a href="#缩放系数-设备密度" class="headerlink" title="缩放系数/设备密度"></a>缩放系数/设备密度</h3><ul>
<li><code>缩放系数(scale)</code> 逻辑像素渲染时的缩放比例因子，通过设备密度换算得到。</li>
<li><code>设备密度(device density)</code> Android厂商或ROM设置的虚拟屏幕密度，用户也能修改，用于计算缩放系数。    </li>
</ul>
<h3 id="计算公式"><a href="#计算公式" class="headerlink" title="计算公式"></a>计算公式</h3><ul>
<li><p>高宽比($r$)  </p>
<p>$r ={h \over w}$</p>
</li>
<li><p>宽($w_{px}$), 高($w_{px}$), 高宽比($r$), 对角线($d_{in}$)，密度($ppi_{px}$) 换算：</p>
<p>$ppi_{px}$ = ${d_{px} \over d_{in}}$ = $\sqrt{ w_{px}^2 + h_{px}^2 } \over d_{in}$ = $w_{px} \cdot \sqrt{ 1 + r^2 } \over d_{in}$ </p>
</li>
</ul>
<p>  以屏幕尺寸为4寸的iPhone 5为例，分辨率为1136x640，像素密度为326ppi。 而分辨率为1920x1080的家用21.5寸显示器，像素密度为103ppi。</p>
<ul>
<li><p>根据设备密度($density$)计算缩放系数($scale$)</p>
<p>$scale = {density \over 160}$</p>
</li>
<li><p>根据缩放系数($scale$)，计算对应的逻辑单位(dp/pt)值</p>
<p>$w_{dp}={w_{px} \over scale}$  </p>
<p>$h_{dp}={h_{px} \over scale}$ </p>
<p>$ppi_{dp}={ppi_{px} \over scale}$</p>
</li>
</ul>
<a id="more"></a>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">var</span> _ppi=<span class="function"><span class="keyword">function</span>(<span class="params">w,r,d</span>)</span>&#123;<span class="keyword">return</span> w*<span class="built_in">Math</span>.sqrt(<span class="number">1</span>+<span class="built_in">Math</span>.pow(r,<span class="number">2</span>))/d;&#125;;</div><div class="line"><span class="keyword">var</span> _w=<span class="function"><span class="keyword">function</span>(<span class="params">r,d,ppi</span>)</span>&#123;<span class="keyword">return</span> ppi*d/<span class="built_in">Math</span>.sqrt(<span class="number">1</span>+<span class="built_in">Math</span>.pow(r,<span class="number">2</span>));&#125;;</div><div class="line"><span class="keyword">var</span> _d=<span class="function"><span class="keyword">function</span>(<span class="params">w,r,ppi</span>)</span>&#123;<span class="keyword">return</span> w*<span class="built_in">Math</span>.sqrt(<span class="number">1</span>+<span class="built_in">Math</span>.pow(r,<span class="number">2</span>))/ppi;&#125;;</div><div class="line"><span class="keyword">var</span> _r=<span class="function"><span class="keyword">function</span>(<span class="params">w,d,ppi</span>)</span>&#123;<span class="keyword">return</span> <span class="built_in">Math</span>.sqrt(<span class="built_in">Math</span>.pow(d*ppi/w,<span class="number">2</span>)<span class="number">-1</span>);&#125;;</div><div class="line"></div><div class="line"><span class="comment">// wpx=1080, hpx=1920, d=5.5, scale=3</span></div><div class="line"><span class="keyword">var</span> _ws = <span class="function"><span class="keyword">function</span>(<span class="params">wpx, hpx, d, scale</span>) </span>&#123;</div><div class="line">    <span class="keyword">var</span> r = hpx / wpx,</div><div class="line">        wpt=<span class="built_in">Math</span>.round(wpx/scale),</div><div class="line">        hpt=<span class="built_in">Math</span>.round(hpx/scale),</div><div class="line">        ppi=_ppi(wpx, r, d),</div><div class="line">        dppi=<span class="built_in">Math</span>.round(ppi/scale);</div><div class="line">    <span class="keyword">return</span> [<span class="string">''</span>,<span class="built_in">Math</span>.round(ppi),dppi,wpx+<span class="string">'x'</span>+hpx,wpt+<span class="string">'x'</span>+hpt,<span class="string">''</span>].join(<span class="string">'|'</span>);</div><div class="line">&#125;</div><div class="line">_ws(<span class="number">1080</span>, <span class="number">1920</span>, <span class="number">5.5</span>, <span class="number">3</span>);</div></pre></td></tr></table></figure>
<h2 id="设备数据"><a href="#设备数据" class="headerlink" title="设备数据"></a>设备数据</h2><h3 id="Android-屏幕密度分级"><a href="#Android-屏幕密度分级" class="headerlink" title="Android 屏幕密度分级"></a>Android 屏幕密度分级</h3><p>Android 将物理屏幕密度归纳成六个通用密度：</p>
<table>
<thead>
<tr>
<th>屏幕密度</th>
<th>缩放系数</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td>ldpi/120dpi</td>
<td>0.75</td>
<td style="text-align:left">已绝迹，不用考虑</td>
</tr>
<tr>
<td>mdpi/160dpi</td>
<td>1</td>
<td style="text-align:left">320x480，市场份额不到1%</td>
</tr>
<tr>
<td>hdpi/240dpi</td>
<td>1.5</td>
<td style="text-align:left">480x800,480x854,540x960<br>3.5″左右各种的古董低端机</td>
</tr>
<tr>
<td>xhdpi/320dpi</td>
<td>2</td>
<td style="text-align:left">720x1280 4.7″～5.5″ 当前主流低端机，份额下滑中</td>
</tr>
<tr>
<td>xxhdpi/480dpi</td>
<td>3</td>
<td style="text-align:left">1080x1920 当前主流中高端机，一般5″以上</td>
</tr>
<tr>
<td>xxxhdpi/640dpi</td>
<td>4</td>
<td style="text-align:left">1440x2560 高端机型</td>
</tr>
<tr>
<td>tvdpi/213dpi</td>
<td>1.33</td>
<td style="text-align:left">用于电视设备</td>
</tr>
<tr>
<td>nodpi</td>
<td>n/a</td>
<td style="text-align:left">无视所有密度</td>
</tr>
</tbody>
</table>
<p>设计时需要根据需求选择目标屏幕密度，建议使用xxhdpi(scale=3)。</p>
<p>自API19后增加的几个屏幕密度级别，设计时通常不需要考虑这些密度：</p>
<table>
<thead>
<tr>
<th>屏幕密度</th>
<th>缩放系数</th>
<th>API</th>
<th>代表机型</th>
</tr>
</thead>
<tbody>
<tr>
<td>280dpi</td>
<td>1.75</td>
<td>22</td>
<td>n/a</td>
</tr>
<tr>
<td>360dpi</td>
<td>2.25</td>
<td>23</td>
<td>n/a</td>
</tr>
<tr>
<td>400dpi</td>
<td>2.5</td>
<td>19</td>
<td><code>Meizu MX3 5.1″ 1080x1800</code><br><code>Huawei Honor X2 7″ 1200x1920</code></td>
</tr>
<tr>
<td>420dpi</td>
<td>2.625</td>
<td>23</td>
<td><code>Google Nexus 5X 5.2″ 1080x1920</code> </td>
</tr>
<tr>
<td>560dpi</td>
<td>3.5</td>
<td>21</td>
<td><code>Google Nexus 6P 5.7″ 1440x2560</code></td>
</tr>
</tbody>
</table>
<h3 id="Android-主流分辨率"><a href="#Android-主流分辨率" class="headerlink" title="Android 主流分辨率"></a>Android 主流分辨率</h3><p>取 baidu(2017-02)/qqmta(2017-04)/talkingdata(2017-04) 三家的分辨率统计数据</p>
<ul>
<li>1080x1812，1080x1776… 合并到 1080x1920</li>
<li>720x1184，720x1196… 合并到 720x1280</li>
<li>480x800… 合并到 480x854</li>
</ul>
<table>
<thead>
<tr>
<th>resolution</th>
<th>qqmta</th>
<th>baidu</th>
<th>talkingdata</th>
</tr>
</thead>
<tbody>
<tr>
<td>1440x2560</td>
<td>n/a</td>
<td>2.83%</td>
<td>2.15%</td>
</tr>
<tr>
<td>1080x1920</td>
<td>46.77%</td>
<td>37.90%</td>
<td>44.81%</td>
</tr>
<tr>
<td>720x1280</td>
<td>25.55%</td>
<td>36.37%</td>
<td>31.67%</td>
</tr>
<tr>
<td>540x960</td>
<td>5.02%</td>
<td>6.64%</td>
<td>5.77%</td>
</tr>
<tr>
<td>480x854</td>
<td>5.08%</td>
<td>10.59%</td>
<td>9.55%</td>
</tr>
<tr>
<td>other</td>
<td>19.6%</td>
<td>5.67%</td>
<td>6.05%</td>
</tr>
</tbody>
</table>
<p>设计通常应该基于逻辑分辨率作图，但仍然需要选一种像素分辨率作为基准<br>1080x1920 已经是占最大份额，且向上向下适配都能保持质量<br>所以设计作图以 1080x1920 为基准比较合适</p>
<h3 id="Android-主流逻辑宽度"><a href="#Android-主流逻辑宽度" class="headerlink" title="Android 主流逻辑宽度"></a>Android 主流逻辑宽度</h3><blockquote>
<p>设备逻辑宽度(dp) = 设备宽度(px) / 缩放系数(scale)</p>
</blockquote>
<table>
<thead>
<tr>
<th>逻辑宽度</th>
<th>份额</th>
<th>代表分辨率与设备</th>
</tr>
</thead>
<tbody>
<tr>
<td>360dp</td>
<td>80+%</td>
<td>1080x1920(主流增长中), 1440x2560(高端)<br>720x1280(主流下滑中), 540x960(淘汰中)</td>
</tr>
<tr>
<td>320dp</td>
<td>10+%</td>
<td>淘汰中(480x854, 480x800)<br>已绝迹(320x480, 240x320)</td>
</tr>
<tr>
<td>384dp</td>
<td>&lt; 1%</td>
<td><code>Meizu MX4 Pro 5.5″ 1536x2560 640dpi</code><br><code>Meizu MX4 5.5″ 1152x1920 480dpi</code><br><code>Meizu M1 5.0″ 768x1280 320dpi</code> </td>
</tr>
<tr>
<td>400dp</td>
<td>&lt; 1%</td>
<td><code>Meizu MX2 4.4″ 800x1280 320dpi</code></td>
</tr>
<tr>
<td>432dp</td>
<td>&lt; 1%</td>
<td><code>Meizu MX3 5.1″ 1080x1800 400dpi</code></td>
</tr>
<tr>
<td>411dp</td>
<td>&lt; 1%</td>
<td><code>Le X820 5.7″ 1440x2560 560dpi</code><br><code>Google Nexus 5X 5.2″ 1080x1920 420dpi</code></td>
</tr>
<tr>
<td>480dp</td>
<td>&lt; 1%</td>
<td><code>Huawei Honor X2 7.0″ 1200x1920 400dpi</code></td>
</tr>
</tbody>
</table>
<p>360dp 目前占绝对主流(80+%)，320dp 算少数派(约10%)，基本上适配好这两个就能搞定大部分设备。</p>
<p>由于 Google 又搞出 560dpi,420dpi 等好几种密度，现在分辨率 1440x2560,1080x1920 中产生了 411dp 这种宽度，不知道以后还会有什么。</p>
<h3 id="Android-设备屏幕数据"><a href="#Android-设备屏幕数据" class="headerlink" title="Android 设备屏幕数据"></a>Android 设备屏幕数据</h3><ul>
<li><code>density</code> 列是设备密度，用于计算缩放系数(scale)。</li>
<li><code>ppi</code> 列是设备的物理密度。</li>
<li><code>scale</code> 列表是缩放系数。 </li>
<li><code>dp</code> 列是设备逻辑分辨率。</li>
<li><code>ratio</code> 列是屏幕比例。</li>
</ul>
<p><img src="http://ocrfm2xav.bkt.clouddn.com/16-9-6/4907311.jpg" alt="android phones"></p>
<p>参考：<a href="https://material.io/devices/" target="_blank" rel="external">https://material.io/devices/</a></p>
<h3 id="iOS-设备屏幕数据"><a href="#iOS-设备屏幕数据" class="headerlink" title="iOS 设备屏幕数据"></a>iOS 设备屏幕数据</h3><table>
<thead>
<tr>
<th style="text-align:left">device</th>
<th>resolution</th>
<th>diagonal</th>
<th>ppi</th>
<th>scale</th>
<th>pt</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">iPhone 2g/3g/3gs</td>
<td>320x480</td>
<td>3.5</td>
<td>163</td>
<td>@1x</td>
<td>320x480pt</td>
</tr>
<tr>
<td style="text-align:left">iPhone 4/4s</td>
<td>640x960</td>
<td>3.5</td>
<td>326</td>
<td>@2x</td>
<td>320x480pt</td>
</tr>
<tr>
<td style="text-align:left">iPhone 5/5s/5c/6se</td>
<td>640x1136</td>
<td>4</td>
<td>326</td>
<td>@2x</td>
<td>320x568pt</td>
</tr>
<tr>
<td style="text-align:left">iPhone 6/6s/7</td>
<td>750x1134</td>
<td>4.7</td>
<td>326</td>
<td>@2x</td>
<td>375x667pt</td>
</tr>
<tr>
<td style="text-align:left">iPhone 6+/6s+/7+</td>
<td>1242x2208</td>
<td>5.5</td>
<td>401</td>
<td>@3x</td>
<td>414x736pt </td>
</tr>
<tr>
<td style="text-align:left">iPad Mini</td>
<td>768x1024</td>
<td>7.9</td>
<td>162</td>
<td>@1x</td>
<td>768x1024pt </td>
</tr>
<tr>
<td style="text-align:left">iPad Mini Retina</td>
<td>1536x2048</td>
<td>7.9</td>
<td>324</td>
<td>@2x</td>
<td>768x1024pt </td>
</tr>
<tr>
<td style="text-align:left">iPad 1/2</td>
<td>768x1024</td>
<td>9.7</td>
<td>132</td>
<td>@1x</td>
<td>768x1024pt</td>
</tr>
<tr>
<td style="text-align:left">iPad 3/4/Air</td>
<td>1536x2048</td>
<td>9.7</td>
<td>264</td>
<td>@2x</td>
<td>768x1024pt </td>
</tr>
<tr>
<td style="text-align:left">iPad Pro</td>
<td>2048x2732</td>
<td>12.9</td>
<td>264</td>
<td>@2x</td>
<td>1024x1366pt</td>
</tr>
</tbody>
</table>
<p>结合以上数据可知</p>
<ul>
<li>屏幕密度有 @1x/@2x/@3x 三个级别  </li>
<li>iPad 只有一种逻辑宽度(768pt)</li>
<li>iPhone 有3种逻辑宽度(414pt,375pt,320pt)</li>
</ul>
<p>关于<code>iPhone 6+/6s+/7+</code></p>
<ul>
<li>它的缩放系数不再与物理密度相关，渲染缩放系数是3。</li>
<li>它的物理分辨率是 1080x1920，与渲染分辨率不一致，绘制时最终还是要进行缩放。</li>
<li>它的渲染分辨率是 1242x2208，对应的逻辑分辨率是(414x736pt)，实际缩放系数(scale)是<code>1080/414=2.608</code>。</li>
<li>它还有个放大模式(1125x2001)，对应的逻辑分辨率是(375x667pt)，实际缩放系数(scale)是<code>1080/375=2.88</code>。</li>
</ul>
<h3 id="iOS-应用图标尺寸"><a href="#iOS-应用图标尺寸" class="headerlink" title="iOS 应用图标尺寸"></a>iOS 应用图标尺寸</h3><table>
<thead>
<tr>
<th style="text-align:left">device or context</th>
<th>scale</th>
<th>app</th>
<th>spotlight</th>
<th>settings</th>
<th>notification</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">iPhone 6+/6s+/7+</td>
<td>3x</td>
<td>60pt</td>
<td>40pt</td>
<td>29pt</td>
<td>20pt</td>
</tr>
<tr>
<td style="text-align:left">iPhone 6/6s/SE/7</td>
<td>2x</td>
<td>60pt</td>
<td>40pt</td>
<td>29pt</td>
<td>20pt</td>
</tr>
<tr>
<td style="text-align:left">iPad Pro</td>
<td>2x</td>
<td>83.5pt</td>
<td>40pt</td>
<td>29pt</td>
<td>20pt</td>
</tr>
<tr>
<td style="text-align:left">iPad, iPad mini</td>
<td>2x</td>
<td>76pt</td>
<td>40pt</td>
<td>29pt</td>
<td>20pt</td>
</tr>
<tr>
<td style="text-align:left">App Store</td>
<td>/</td>
<td>1024px</td>
<td>/</td>
<td>/</td>
<td>/</td>
</tr>
</tbody>
</table>
<p>参考：<a href="https://developer.apple.com/ios/human-interface-guidelines/graphics/app-icon/" target="_blank" rel="external">iOS Human Interface Guidelines - App Icon</a> </p>
<h3 id="iOS-控件尺寸"><a href="#iOS-控件尺寸" class="headerlink" title="iOS 控件尺寸"></a>iOS 控件尺寸</h3><table>
<thead>
<tr>
<th style="text-align:left">控件</th>
<th style="text-align:left">控件高度</th>
<th style="text-align:left">控件内图标尺寸</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">状态栏(Status bar)</td>
<td style="text-align:left">20pt</td>
<td style="text-align:left">/</td>
</tr>
<tr>
<td style="text-align:left">标签栏(Tabbar)</td>
<td style="text-align:left">49pt</td>
<td style="text-align:left">约 25x25pt, 最大 48x32pt</td>
</tr>
<tr>
<td style="text-align:left">工具栏(Toolbar)</td>
<td style="text-align:left">44pt</td>
<td style="text-align:left">约 22x22pt</td>
</tr>
<tr>
<td style="text-align:left">导航栏(Navigation bar)</td>
<td style="text-align:left">44pt</td>
<td style="text-align:left">约 22x22pt</td>
</tr>
</tbody>
</table>
<h2 id="支持多屏"><a href="#支持多屏" class="headerlink" title="支持多屏"></a>支持多屏</h2><h3 id="目标"><a href="#目标" class="headerlink" title="目标"></a>目标</h3><p>使得设备上某一元素在不同屏幕密度、分辨率、尺寸、方向上都具备<strong>合适的</strong>显示与交互效果。</p>
<ul>
<li><p><strong>宽度与高度</strong><br>普通手机应用，<strong>大部分时候只需要竖屏显示</strong>，部分需要横屏显示。<br>这时只需要处理分辨率不同带来的问题。<br><strong>优先适配宽度</strong>，少数场景需要要同时适配高度。</p>
</li>
<li><p><strong>布局与交互</strong><br>当适配的尺寸跨度很大，比如平板，电视，横竖屏切换。<br>这时可能需要提供不同的布局甚至交互逻辑。</p>
</li>
</ul>
<h3 id="基于逻辑像素"><a href="#基于逻辑像素" class="headerlink" title="基于逻辑像素"></a>基于逻辑像素</h3><p>由于各种屏幕的物理像素密度都有所不同，因此相同数量的物理像素在不同设备上的实际大小也有所差异，这样使用物理像素定义布局尺寸就会产生问题。</p>
<p>因此应当使用与密度无关的逻辑像素(dp/sp/pt)作为测量单位，这本质上是支持不同的<strong>屏幕密度</strong>。</p>
<h3 id="控件自适应"><a href="#控件自适应" class="headerlink" title="控件自适应"></a>控件自适应</h3><p>就是适配屏幕的<strong>逻辑分辨率(主要是宽度)</strong>，使控件在不同的逻辑分辨率上都有适当的显示效果。</p>
<p>方法就是尽量使用<strong>相对位置和尺寸</strong>，比如内边距(padding)/外边距(margin)/对齐(align)/百分比(percent)/权重(weight)/…</p>
<p>下图中几种常用的自适应方法从上到下依次是：</p>
<ul>
<li>图片宽度根据容器自适应，高度等比缩放。</li>
<li>图片背景使用自动拉伸位图。</li>
<li>图片宽度固定，高度等比缩放，位置居中。</li>
<li>元素尺寸不变，间距自适应。 </li>
<li>中间的元素占满剩余宽度。</li>
<li>文本流式。</li>
</ul>
<p><img src="http://ocrfm2xav.bkt.clouddn.com/16-9-8/341374.jpg" alt="适配规则"></p>
<h3 id="响应式布局"><a href="#响应式布局" class="headerlink" title="响应式布局"></a>响应式布局</h3><p>当逻辑宽度不断变大到某个宽度，这时多出大量空间，原本的布局与交互流程已经不适应了。<br>这时就以这个宽度为<strong>断点</strong>提供一套新的<strong>布局与交互流程</strong>。 </p>
<p>Google Material Design 以基于逻辑宽度(dp)的<strong>断点系统</strong>来适配不同尺寸的设备：</p>
<table>
<thead>
<tr>
<th style="text-align:left">断点(dp)</th>
<th>竖屏手机(handset)/平板(tablet) </th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">360dp</td>
<td>small handset</td>
</tr>
<tr>
<td style="text-align:left">400dp</td>
<td>medium handset</td>
</tr>
<tr>
<td style="text-align:left">480dp</td>
<td>large handset</td>
</tr>
<tr>
<td style="text-align:left">600dp</td>
<td>small tablet</td>
</tr>
<tr>
<td style="text-align:left">720dp</td>
<td>large tablet</td>
</tr>
<tr>
<td style="text-align:left">840dp</td>
<td>large tablet</td>
</tr>
<tr>
<td style="text-align:left">960dp</td>
<td>n/a </td>
</tr>
</tbody>
</table>
<blockquote>
<p>断点系统<br><a href="https://material.io/guidelines/layout/responsive-ui.html#responsive-ui-breakpoints" target="_blank" rel="external">https://material.io/guidelines/layout/responsive-ui.html#responsive-ui-breakpoints</a></p>
</blockquote>
<h2 id="适配流程"><a href="#适配流程" class="headerlink" title="适配流程"></a>适配流程</h2><h3 id="设定基准"><a href="#设定基准" class="headerlink" title="设定基准"></a>设定基准</h3><p>以下为3种常用基准</p>
<ul>
<li>360x640dp, 1080x1920, scale=3</li>
<li>360x640dp, 720x1280, scale=2</li>
<li>375x667pt, 750x1134, scale=2</li>
</ul>
<p>根据实际需求选择合适的基准。<br>目前来说建议使用 <strong>360x640dp, 1080x1920, scale=3</strong>。<br>1080x1920 为目前份额最大的分辨率，向上放大到4x，向下缩小为2x都不会失去太多细节。</p>
<h3 id="设计适配"><a href="#设计适配" class="headerlink" title="设计适配"></a>设计适配</h3><p>常见设计工具</p>
<ul>
<li><code>Photoshop</code> 传统主流设计工具，辅以 cutterman/markman 等工具配合切图与标注。</li>
<li><code>Illustrator</code> 矢量设计工具。</li>
<li><code>Sketch</code> 矢量设计工具(Mac Only)，功能强大，插件丰富(导出，标注，占位图，假数据)。</li>
<li><code>Xd(Experience Design)</code> Adobe 2016年推出与Sketch竞争的产品，简单轻量易上手，生态不足。</li>
</ul>
<p>矢量图标库 </p>
<ul>
<li><a href="https://material.io/icons/" target="_blank" rel="external">Google Material Design 资源图标</a> </li>
<li><a href="http://iconfont.cn" target="_blank" rel="external">阿里巴巴矢量图标库</a></li>
<li><a href="https://icomoon.io/" target="_blank" rel="external">IcoMoon</a></li>
</ul>
<p>建议</p>
<ol>
<li>工具：优先使用<strong>矢量工具</strong> <code>Sketch</code> &gt; <code>Xd</code> &gt; <code>Illustrator</code> &gt; <code>Photoshop</code>。</li>
<li>设计：尽量使用<strong>相对位置和尺寸</strong>。</li>
<li>输出：<strong>切图以2x为主</strong>，失真过多的就输出3x甚至4x，应当<strong>输出一份矢量图标</strong>。</li>
<li>标注：使用<strong>逻辑度量单位(dp/pt)</strong>，避免换算出小数。</li>
</ol>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://material.io/" target="_blank" rel="external">https://material.io/</a><br><a href="https://material.io/devices/" target="_blank" rel="external">https://material.io/devices/</a><br><a href="https://developer.apple.com/ios/human-interface-guidelines" target="_blank" rel="external">https://developer.apple.com/ios/human-interface-guidelines</a><br><a href="https://developer.android.com/training/multiscreen/screensizes.html" target="_blank" rel="external">https://developer.android.com/training/multiscreen/screensizes.html</a></p>
]]></content>
      
        <categories>
            
            <category> 开发 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
            <tag> ios </tag>
            
            <tag> 屏幕适配 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【翻译】触摸手势-多点触摸(Handling Multi-Touch Gestures)]]></title>
      <url>/p/20170619/android-touch-gesture-multi-touch/</url>
      <content type="html"><![CDATA[<blockquote>
<p><a href="https://developer.android.com/training/gestures/multi.html" target="_blank" rel="external">https://developer.android.com/training/gestures/multi.html</a></p>
</blockquote>
<p>多点触摸手势就是多个指针（手指）同时触摸屏幕。本课介绍如何检测涉及多个指针的手势。</p>
<h2 id="跟踪多个指针-Track-Multiple-Pointers"><a href="#跟踪多个指针-Track-Multiple-Pointers" class="headerlink" title="跟踪多个指针(Track Multiple Pointers)"></a>跟踪多个指针(Track Multiple Pointers)</h2><p>当多个指针同时触摸屏幕时，系统会生成以下触摸事件：</p>
<ul>
<li><strong>ACTION_DOWN</strong> 触摸屏幕的第一个指针。启动手势，指针索引始终为0。</li>
<li><strong>ACTION_POINTER_DOWN</strong> 第一个指针之外的其它进入屏幕的指针。其指针索引由getActionIndex()返回。</li>
<li><strong>ACTION_MOVE</strong> press手势期间指针发生了更改。</li>
<li><strong>ACTION_POINTER_UP</strong> 非主指针离开屏幕。</li>
<li><strong>ACTION_UP</strong> 最后一个指针离开屏幕。</li>
</ul>
<p>您通过每个指针的索引和ID跟踪MotionEvent中的各个指针：</p>
<ul>
<li>索引(Index)：MotionEvent将有关每个指针的信息存储在数组中。指针的索引是其在此数组内的位置。用于与指针交互的大多数MotionEvent方法都将指针索引作为参数，而不是指针ID。</li>
<li>ID：每个指针还具有一个ID映射，在触摸事件中保持持续，以允许<strong>跨整个手势跟踪单个指针</strong>。</li>
</ul>
<a id="more"></a>
<p>单个指针在运动事件中出现的顺序是未定义的。因此，指针的索引可以从一个事件改变到下一个事件，但是只要指针保持活动，指针的指针ID就保持不变。<strong>使用getPointerId()方法来获取指针的ID</strong>，以便在手势中的所有后续运动事件中跟踪指针。然后对于连续的运动事件，<strong>使用findPointerIndex()方法来获取该运动事件中给定指针ID的指针索引</strong>。例如：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">private</span> <span class="keyword">int</span> mActivePointerId;</div><div class="line"></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(MotionEvent event)</span> </span>&#123;</div><div class="line">    ....</div><div class="line">    <span class="comment">// Get the pointer ID</span></div><div class="line">    mActivePointerId = event.getPointerId(<span class="number">0</span>);</div><div class="line"></div><div class="line">    <span class="comment">// ... Many touch events later...</span></div><div class="line"></div><div class="line">    <span class="comment">// Use the pointer ID to find the index of the active pointer</span></div><div class="line">    <span class="comment">// and fetch its position</span></div><div class="line">    <span class="keyword">int</span> pointerIndex = event.findPointerIndex(mActivePointerId);</div><div class="line">    <span class="comment">// Get the pointer's current position</span></div><div class="line">    <span class="keyword">float</span> x = event.getX(pointerIndex);</div><div class="line">    <span class="keyword">float</span> y = event.getY(pointerIndex);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="获取MotionEvent的动作-Get-a-MotionEvent’s-Action"><a href="#获取MotionEvent的动作-Get-a-MotionEvent’s-Action" class="headerlink" title="获取MotionEvent的动作(Get a MotionEvent’s Action)"></a>获取MotionEvent的动作(Get a MotionEvent’s Action)</h2><p>您应该始终使用<code>getActionMasked()</code>来获取MotionEvent的动作。<br>与旧的<code>getAction()</code>方法不同，它被设计成支持多个指针。<br>它返回正在执行的动作，而不包括指针索引位。<br>然后，您可以使用<code>getActionIndex()</code>返回与该操作相关联的指针的索引。 </p>
<p>这在下面的代码片段中说明。</p>
<blockquote>
<p>注意：此示例使用MotionEventCompat类。 该类在支持库中。 </p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> action = MotionEventCompat.getActionMasked(event);</div><div class="line"><span class="comment">// Get the index of the pointer associated with the action.</span></div><div class="line"><span class="keyword">int</span> index = MotionEventCompat.getActionIndex(event);</div><div class="line"><span class="keyword">int</span> xPos = -<span class="number">1</span>;</div><div class="line"><span class="keyword">int</span> yPos = -<span class="number">1</span>;</div><div class="line"></div><div class="line">Log.d(DEBUG_TAG,<span class="string">"The action is "</span> + actionToString(action));</div><div class="line"></div><div class="line"><span class="keyword">if</span> (event.getPointerCount() &gt; <span class="number">1</span>) &#123;</div><div class="line">    Log.d(DEBUG_TAG,<span class="string">"Multitouch event"</span>);</div><div class="line">    <span class="comment">// The coordinates of the current screen contact, relative to</span></div><div class="line">    <span class="comment">// the responding View or Activity.</span></div><div class="line">    xPos = (<span class="keyword">int</span>)MotionEventCompat.getX(event, index);</div><div class="line">    yPos = (<span class="keyword">int</span>)MotionEventCompat.getY(event, index);</div><div class="line"></div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="comment">// Single touch event</span></div><div class="line">    Log.d(DEBUG_TAG,<span class="string">"Single touch event"</span>);</div><div class="line">    xPos = (<span class="keyword">int</span>)MotionEventCompat.getX(event, index);</div><div class="line">    yPos = (<span class="keyword">int</span>)MotionEventCompat.getY(event, index);</div><div class="line">&#125;</div><div class="line">...</div><div class="line"></div><div class="line"><span class="comment">// Given an action int, returns a string description</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">actionToString</span><span class="params">(<span class="keyword">int</span> action)</span> </span>&#123;</div><div class="line">    <span class="keyword">switch</span> (action) &#123;</div><div class="line"></div><div class="line">        <span class="keyword">case</span> MotionEvent.ACTION_DOWN: <span class="keyword">return</span> <span class="string">"Down"</span>;</div><div class="line">        <span class="keyword">case</span> MotionEvent.ACTION_MOVE: <span class="keyword">return</span> <span class="string">"Move"</span>;</div><div class="line">        <span class="keyword">case</span> MotionEvent.ACTION_POINTER_DOWN: <span class="keyword">return</span> <span class="string">"Pointer Down"</span>;</div><div class="line">        <span class="keyword">case</span> MotionEvent.ACTION_UP: <span class="keyword">return</span> <span class="string">"Up"</span>;</div><div class="line">        <span class="keyword">case</span> MotionEvent.ACTION_POINTER_UP: <span class="keyword">return</span> <span class="string">"Pointer Up"</span>;</div><div class="line">        <span class="keyword">case</span> MotionEvent.ACTION_OUTSIDE: <span class="keyword">return</span> <span class="string">"Outside"</span>;</div><div class="line">        <span class="keyword">case</span> MotionEvent.ACTION_CANCEL: <span class="keyword">return</span> <span class="string">"Cancel"</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> <span class="string">""</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 开发 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
            <tag> 翻译 </tag>
            
            <tag> gesture </tag>
            
            <tag> multi-touch </tag>
            
            <tag> pointer </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【翻译】触摸手势-跟踪移动(Tracking Movement)]]></title>
      <url>/p/20170618/android-touch-gesture-tracking-movement/</url>
      <content type="html"><![CDATA[<blockquote>
<p><a href="https://developer.android.com/training/gestures/movement.html" target="_blank" rel="external">https://developer.android.com/training/gestures/movement.html</a></p>
</blockquote>
<h2 id="跟踪移动-Tracking-Movement"><a href="#跟踪移动-Tracking-Movement" class="headerlink" title="跟踪移动(Tracking Movement)"></a>跟踪移动(Tracking Movement)</h2><p>当触摸点位置，压力或尺寸发生变化时，会触发一个新的 MotionEvent.ACTION_MOVE 事件。 </p>
<p>因为基于手指的触摸并不总是最精确的交互形式，因此<strong>检测触摸事件通常更多地基于移动</strong>而不是简单的接触。 为了帮助应用程序区分基于移动的手势（例如swipe）和非移动手势（例如single tap），Android包括“touch slop”的概念。 <strong>“touch slop”</strong>是指用户的触摸可以在手势被解释为基于运动的手势之前漫游的距离（以像素为单位）。 有关此主题的更多讨论，请参阅管理ViewGroup中的触摸事件。</p>
<p>根据您的应用需求，有几种不同的方式来跟踪手势中的移动。 例如：</p>
<ul>
<li>指针的开始和结束位置(例如，将屏幕对象从点A移动到点B)。</li>
<li>指针正在行进的方向，由x和y坐标确定。</li>
<li>手势历史。<br>通过调用MotionEvent方法getHistorySize()可以得到手势历史的大小。<br>然后，可以使用MotionEvent的getHistorical<value>方法获取每个历史事件的位置，大小，时间和压力。 渲染用户手指的踪迹(例如触摸绘图)时，历史记录非常有用。 有关详细信息，请参阅MotionEvent参考。</value></li>
<li>指针在触摸屏上移动时的速度。</li>
</ul>
<a id="more"></a>
<h2 id="跟踪速度-Track-Velocity"><a href="#跟踪速度-Track-Velocity" class="headerlink" title="跟踪速度(Track Velocity)"></a>跟踪速度(Track Velocity)</h2><p>你可以有一个基于运动的手势，它只是基于指针行进的 距离 和/或 方向。<br>但速度通常是跟踪手势特征或甚至决定手势是否发生的决定性因素。 为了使速度计算更容易，Android在支持库中提供VelocityTracker类和VelocityTrackerCompat类。<br>VelocityTracker可以帮助您跟踪触摸事件的速度。<br>这对于速度是手势的标准的一部分的手势(例如fling)是有用的。</p>
<p>以下是一个简单的示例，说明VelocityTracker API中方法的用途：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">Activity</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String DEBUG_TAG = <span class="string">"Velocity"</span>;</div><div class="line">        ...</div><div class="line">    <span class="keyword">private</span> VelocityTracker mVelocityTracker = <span class="keyword">null</span>;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onTouchEvent</span><span class="params">(MotionEvent event)</span> </span>&#123;</div><div class="line">        <span class="keyword">int</span> index = event.getActionIndex();</div><div class="line">        <span class="keyword">int</span> action = event.getActionMasked();</div><div class="line">        <span class="keyword">int</span> pointerId = event.getPointerId(index);</div><div class="line"></div><div class="line">        <span class="keyword">switch</span>(action) &#123;</div><div class="line">            <span class="keyword">case</span> MotionEvent.ACTION_DOWN:</div><div class="line">                <span class="keyword">if</span>(mVelocityTracker == <span class="keyword">null</span>) &#123;</div><div class="line">                    <span class="comment">// Retrieve a new VelocityTracker object to watch the velocity of a motion.</span></div><div class="line">                    mVelocityTracker = VelocityTracker.obtain();</div><div class="line">                &#125;</div><div class="line">                <span class="keyword">else</span> &#123;</div><div class="line">                    <span class="comment">// Reset the velocity tracker back to its initial state.</span></div><div class="line">                    mVelocityTracker.clear();</div><div class="line">                &#125;</div><div class="line">                <span class="comment">// Add a user's movement to the tracker.</span></div><div class="line">                mVelocityTracker.addMovement(event);</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> MotionEvent.ACTION_MOVE:</div><div class="line">                mVelocityTracker.addMovement(event);</div><div class="line">                <span class="comment">// When you want to determine the velocity, call</span></div><div class="line">                <span class="comment">// computeCurrentVelocity(). Then call getXVelocity()</span></div><div class="line">                <span class="comment">// and getYVelocity() to retrieve the velocity for each pointer ID.</span></div><div class="line">                mVelocityTracker.computeCurrentVelocity(<span class="number">1000</span>);</div><div class="line">                <span class="comment">// Log velocity of pixels per second</span></div><div class="line">                <span class="comment">// Best practice to use VelocityTrackerCompat where possible.</span></div><div class="line">                Log.d(<span class="string">""</span>, <span class="string">"X velocity: "</span> + VelocityTrackerCompat.getXVelocity(mVelocityTracker,  pointerId));</div><div class="line">                Log.d(<span class="string">""</span>, <span class="string">"Y velocity: "</span> + VelocityTrackerCompat.getYVelocity(mVelocityTracker, pointerId));</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">            <span class="keyword">case</span> MotionEvent.ACTION_UP:</div><div class="line">            <span class="keyword">case</span> MotionEvent.ACTION_CANCEL:</div><div class="line">                <span class="comment">// Return a VelocityTracker object back to be re-used by others.</span></div><div class="line">                mVelocityTracker.recycle();</div><div class="line">                <span class="keyword">break</span>;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<blockquote>
<p>注意：在ACTION_UP之后，X和Y速度将为0，您应该在ACTION_MOVE事件之后计算速度。</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 开发 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
            <tag> 翻译 </tag>
            
            <tag> gesture </tag>
            
            <tag> motion </tag>
            
            <tag> slop </tag>
            
            <tag> touch </tag>
            
            <tag> track </tag>
            
            <tag> velocity </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android fitsSystemWindows与WindowInsets]]></title>
      <url>/p/20170611/android-fitsSystemWindows-WindowInsets/</url>
      <content type="html"><![CDATA[<blockquote>
<p><a href="https://developer.android.com/reference/android/view/WindowInsets.html" target="_blank" rel="external">https://developer.android.com/reference/android/view/WindowInsets.html</a></p>
</blockquote>
<h2 id="fitsSystemWindows"><a href="#fitsSystemWindows" class="headerlink" title="fitsSystemWindows"></a>fitsSystemWindows</h2><ul>
<li><p><strong>View#setFitsSystemWindows</strong><br><code>void setFitsSystemWindows(boolean fitSystemWindows)</code></p>
<p>设置此视图是否应考虑系统屏幕装饰(例如状态栏)并插入其内容，即控制<code>View#fitSystemWindows(Rect)</code>的默认实现是否执行</p>
</li>
<li><p><strong>View#dispatchApplyWindowInsets</strong><br><code>WindowInsets dispatchApplyWindowInsets(WindowInsets insets)</code></p>
<p>派发请求到这个视图或其子树中的其它视图，以应用给定的 window insets </p>
<p>此方法应该由希望应用与窗口装饰或覆盖层遮蔽的区域对应的inset的客户端来调用。<br>可以包括状态和导航栏，动作栏，输入法等等。 未来可能会添加新的inset类别。<br>该方法返回提供的 inset 减去了此视图或其子节点应用的任何值。</p>
<p>希望提供自定义行为的客户端应该覆盖onApplyWindowInsets(WindowInsets)方法，或者通过setOnApplyWindowInsetsListener方法提供一个View.OnApplyWindowInsetsListener。</p>
</li>
<li><p><strong>View#onApplyWindowInsets</strong><br><code>WindowInsets onApplyWindowInsets(WindowInsets insets)</code></p>
<p>视图根据其内部策略应用WindowInsets时调用，可以覆盖此方法来应用与默认行为不同的策略。  </p>
<p>该方法的实现应该返回<strong>未修改的insets参数</strong>，或<strong>从insets参数克隆且消耗了此视图所应用inset的新WindowInsets</strong>。这允许在不改变现有实现就可以在未来平台版本中添加的新inset类型而不会被错误地消耗。</p>
<p>默认情况下，如果设置了fitsSystemWindows属性，视图将<strong>消耗系统窗口inset并将其用作padding</strong>。</p>
</li>
<li><p><strong>View#setOnApplyWindowInsetsListener</strong><br><code>void setOnApplyWindowInsetsListener(View.OnApplyWindowInsetsListener listener)</code></p>
<p>提供以自定义方式在视图上应用窗口insets的监听器。</p>
<p><strong>如果设置了此监听器，将不会调用View#onApplyWindowInsets方法。</strong><br>如有需要可以在监听器的实现中调用View#onApplyWindowInsets。  </p>
<pre><code class="java"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OnApplyWindowInsetsListener</span> </span>{ 
    <span class="function">WindowInsetsCompat <span class="title">onApplyWindowInsets</span><span class="params">(View v, WindowInsetsCompat insets)</span></span>;
}
</code></pre>
</li>
<li><p><strong>View#fitSystemWindows</strong><br><code>boolean fitSystemWindows(Rect)</code></p>
<p>此方法已于API20废弃，改用dispatchApplyWindowInsets。 </p>
<p>该方法的默认实现方式只是<strong>将内容inset到视图的padding中，消耗该内容(修改insets为0)，并返回true</strong>。<br>此行为默认关闭，可以通过setFitsSystemWindows(boolean)启用。 </p>
</li>
</ul>
<a id="more"></a>
<h2 id="WindowInsets"><a href="#WindowInsets" class="headerlink" title="WindowInsets"></a>WindowInsets</h2><p>描述一组窗口内容的insets。</p>
<p>WindowInsets是不可变的。<br>要调整insets，请使用提供的克隆方法(<code>WindowInsets#consume*</code>)之一获取具有已调整属性的新WindowInsets实例。</p>
<p>如果调用了<code>WindowInsets#consume*</code>方法，<strong>使所有<code>inset</code>设置为零，则Insets被视为“已消费”</strong>。 这会影响<code>inset</code>通过视图层次结构的传播; <strong>未完全消费的<code>inset</code>将继续传播到子视图</strong>。</p>
<p>目前有下列几种insets类型(将来可能会添加更多)：</p>
<ul>
<li><strong>stable insets</strong><br>表示可能被系统UI元素部分或完全遮蔽的全屏窗口区域。<br>该值不会根据这些元素的可见性状态而改变。<br>例如，如果状态栏通常显示但暂时隐藏，则<code>stable inset</code>仍将提供与显示的状态栏相关联的<code>inset</code>。</li>
<li><strong>system window insets</strong><br>表示由状态栏，导航栏，IME或其他系统窗口部分或完全遮挡的全屏窗口区域。。</li>
<li><strong>window decor insets</strong><br>表示由框架提供的窗口里的装饰(动作栏，标题栏，工具栏…)部分或完全遮挡的内容窗口区域。</li>
</ul>
]]></content>
      
        <categories>
            
            <category> 开发 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
            <tag> insets </tag>
            
            <tag> window </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android MeasureSpec]]></title>
      <url>/p/20170610/android-measure-spec/</url>
      <content type="html"><![CDATA[<p><code>MeasureSpec</code> 封装了父元素对子元素宽(width)高(height)的布局需求。<br><code>MeasureSpec</code> 由尺寸(size)与模式(mode)组成。 </p>
<p>有以下三种测量模式：  </p>
<ul>
<li><strong>EXACTLY</strong><br>指定了父元素为子元素测量的尺寸。<br>宽高指定为match_parent时，模式通常为EXACTLY。</li>
<li><strong>AT_MOST</strong><br>指定了子元素能取的最大尺寸。<br>宽高指定为wrap_content时，模式通常为AT_MOST。</li>
<li><strong>UNSPECIFIED</strong><br>父元素没有对子元素施加任何限制，它可以取任意尺寸。<br>当视图的宽高值未设置或设置为0时，模式为UNSPECIFIED。</li>
</ul>
<p>子view的尺寸由 <strong>父view的MeasureSpec</strong> 与 <strong>子view的LayoutParams</strong> 共同决定。</p>
<p>下表由 <code>ViewGroup#getChildMeasureSpec</code> 方法总结得来：</p>
<ul>
<li>第一行为父view的测量模式</li>
<li>第一列为子view指定的尺寸</li>
<li>size为父view指定的尺寸减去边距后的值</li>
<li>childSize为子view指定的精确值</li>
</ul>
<a id="more"></a>
<table>
<thead>
<tr>
<th></th>
<th>EXACTLY</th>
<th>AT_MOST</th>
<th>UNSPECIFIED</th>
</tr>
</thead>
<tbody>
<tr>
<td>childSize</td>
<td>childSize+EXACTLY</td>
<td>childSize+EXACTLY</td>
<td>childSize+EXACTLY</td>
</tr>
<tr>
<td>MATCH_PARENT</td>
<td>size+EXACTLY</td>
<td>size+AT_MOST</td>
<td>(0或size)+UNSPECIFIED</td>
</tr>
<tr>
<td>WRAP_CONTENT</td>
<td>size+AT_MOST</td>
<td>size+AT_MOST</td>
<td>(0或size)+UNSPECIFIED</td>
</tr>
</tbody>
</table>
<p>附：ViewGroup#getChildMeasureSpec源码</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div></pre></td><td class="code"><pre><div class="line"><span class="comment">/**   </span></div><div class="line"><span class="comment"> * <span class="doctag">@param</span> spec 父view的测量值(MeasureSpec)</span></div><div class="line"><span class="comment"> * <span class="doctag">@param</span> padding 父view的边距(padding,margin) </span></div><div class="line"><span class="comment"> * <span class="doctag">@param</span> childDimension 子view在布局参数尺寸(LayoutParam.width/LayoutParam.height) </span></div><div class="line"><span class="comment"> */</span>  </div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getChildMeasureSpec</span><span class="params">(<span class="keyword">int</span> spec, <span class="keyword">int</span> padding, <span class="keyword">int</span> childDimension)</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> specMode = MeasureSpec.getMode(spec);</div><div class="line">    <span class="keyword">int</span> specSize = MeasureSpec.getSize(spec);</div><div class="line"></div><div class="line">    <span class="keyword">int</span> size = Math.max(<span class="number">0</span>, specSize - padding);</div><div class="line"></div><div class="line">    <span class="keyword">int</span> resultSize = <span class="number">0</span>;</div><div class="line">    <span class="keyword">int</span> resultMode = <span class="number">0</span>;</div><div class="line"></div><div class="line">    <span class="keyword">switch</span> (specMode) &#123;</div><div class="line">    <span class="comment">// Parent has imposed an exact size on us</span></div><div class="line">    <span class="keyword">case</span> MeasureSpec.EXACTLY:</div><div class="line">        <span class="keyword">if</span> (childDimension &gt;= <span class="number">0</span>) &#123;</div><div class="line">            resultSize = childDimension;</div><div class="line">            resultMode = MeasureSpec.EXACTLY;</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (childDimension == LayoutParams.MATCH_PARENT) &#123;</div><div class="line">            <span class="comment">// Child wants to be our size. So be it.</span></div><div class="line">            resultSize = size;</div><div class="line">            resultMode = MeasureSpec.EXACTLY;</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (childDimension == LayoutParams.WRAP_CONTENT) &#123;</div><div class="line">            <span class="comment">// Child wants to determine its own size. It can't be</span></div><div class="line">            <span class="comment">// bigger than us.</span></div><div class="line">            resultSize = size;</div><div class="line">            resultMode = MeasureSpec.AT_MOST;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">break</span>;</div><div class="line"></div><div class="line">    <span class="comment">// Parent has imposed a maximum size on us</span></div><div class="line">    <span class="keyword">case</span> MeasureSpec.AT_MOST:</div><div class="line">        <span class="keyword">if</span> (childDimension &gt;= <span class="number">0</span>) &#123;</div><div class="line">            <span class="comment">// Child wants a specific size... so be it</span></div><div class="line">            resultSize = childDimension;</div><div class="line">            resultMode = MeasureSpec.EXACTLY;</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (childDimension == LayoutParams.MATCH_PARENT) &#123;</div><div class="line">            <span class="comment">// Child wants to be our size, but our size is not fixed.</span></div><div class="line">            <span class="comment">// Constrain child to not be bigger than us.</span></div><div class="line">            resultSize = size;</div><div class="line">            resultMode = MeasureSpec.AT_MOST;</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (childDimension == LayoutParams.WRAP_CONTENT) &#123;</div><div class="line">            <span class="comment">// Child wants to determine its own size. It can't be</span></div><div class="line">            <span class="comment">// bigger than us.</span></div><div class="line">            resultSize = size;</div><div class="line">            resultMode = MeasureSpec.AT_MOST;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">break</span>;</div><div class="line"></div><div class="line">    <span class="comment">// Parent asked to see how big we want to be</span></div><div class="line">    <span class="keyword">case</span> MeasureSpec.UNSPECIFIED:</div><div class="line">        <span class="keyword">if</span> (childDimension &gt;= <span class="number">0</span>) &#123;</div><div class="line">            <span class="comment">// Child wants a specific size... let him have it</span></div><div class="line">            resultSize = childDimension;</div><div class="line">            resultMode = MeasureSpec.EXACTLY;</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (childDimension == LayoutParams.MATCH_PARENT) &#123;</div><div class="line">            <span class="comment">// Child wants to be our size... find out how big it should</span></div><div class="line">            <span class="comment">// be</span></div><div class="line">            </div><div class="line">            <span class="comment">// View.sUseZeroUnspecifiedMeasureSpec = targetSdkVersion &lt; M</span></div><div class="line">            resultSize = View.sUseZeroUnspecifiedMeasureSpec ? <span class="number">0</span> : size;</div><div class="line">            resultMode = MeasureSpec.UNSPECIFIED;</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (childDimension == LayoutParams.WRAP_CONTENT) &#123;</div><div class="line">            <span class="comment">// Child wants to determine its own size.... find out how</span></div><div class="line">            <span class="comment">// big it should be</span></div><div class="line">            </div><div class="line">            <span class="comment">// View.sUseZeroUnspecifiedMeasureSpec = targetSdkVersion &lt; M</span></div><div class="line">            resultSize = View.sUseZeroUnspecifiedMeasureSpec ? <span class="number">0</span> : size;</div><div class="line">            resultMode = MeasureSpec.UNSPECIFIED;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">break</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//noinspection ResourceType</span></div><div class="line">    <span class="keyword">return</span> MeasureSpec.makeMeasureSpec(resultSize, resultMode);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>附：View#getDefaultSize 源码</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 如果测量模式为UNSPECIFIED就返回指定的尺寸(size)，否则从measureSpec中获取尺寸(specSize)</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getDefaultSize</span><span class="params">(<span class="keyword">int</span> size, <span class="keyword">int</span> measureSpec)</span> </span>&#123;</div><div class="line">    <span class="keyword">int</span> result = size;</div><div class="line">    <span class="keyword">int</span> specMode = MeasureSpec.getMode(measureSpec);</div><div class="line">    <span class="keyword">int</span> specSize = MeasureSpec.getSize(measureSpec);</div><div class="line"></div><div class="line">    <span class="keyword">switch</span> (specMode) &#123;</div><div class="line">    <span class="keyword">case</span> MeasureSpec.UNSPECIFIED:</div><div class="line">        result = size;</div><div class="line">        <span class="keyword">break</span>;</div><div class="line">    <span class="keyword">case</span> MeasureSpec.AT_MOST:</div><div class="line">    <span class="keyword">case</span> MeasureSpec.EXACTLY:</div><div class="line">        result = specSize;</div><div class="line">        <span class="keyword">break</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">return</span> result;</div><div class="line">&#125;</div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 开发 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
            <tag> MeasureSpec </tag>
            
            <tag> measure </tag>
            
            <tag> view </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Java命名规范]]></title>
      <url>/p/20170517/spec-naming-java/</url>
      <content type="html"><![CDATA[<h3 id="基本原则"><a href="#基本原则" class="headerlink" title="基本原则"></a>基本原则</h3><ol>
<li>在无歧义的前提下，命名力求简洁</li>
<li>在语义明了的前提下，命名力求省力，如果可以同时不按shift，则不按</li>
<li>一个标识符最好一个单词，尽量不要超过3个单词，每个单词尽量不要超过10个字符</li>
<li>单词应当拼写正确完整</li>
</ol>
<a id="more"></a>
<h3 id="驼峰命名法"><a href="#驼峰命名法" class="headerlink" title="驼峰命名法"></a>驼峰命名法</h3><ul>
<li>大驼峰 -&gt; <code>UpperCamelCase, Camel</code></li>
<li>小驼峰 -&gt; <code>lowerCamelCase, camel</code></li>
</ul>
<h3 id="缩写"><a href="#缩写" class="headerlink" title="缩写"></a>缩写</h3><p>缩写可单独使用，可用作前缀 </p>
<p>例： </p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 正确</span></div><div class="line">btn, txt, btnSubmit, txtName </div><div class="line"></div><div class="line"><span class="comment">// 错误</span></div><div class="line">submitBtn, isTxtName</div></pre></td></tr></table></figure>
<h3 id="拼音"><a href="#拼音" class="headerlink" title="拼音"></a>拼音</h3><ul>
<li>拼音与英文单词不能混用</li>
<li>拼音单词(概念)组合使用时只有第一个字母大写</li>
<li>拼音缩写可单独作为单词使用，尽量不要与英文混用</li>
</ul>
<p>例： </p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 正确</span></div><div class="line">pinyin, mingzi </div><div class="line">btnDing, btnDuobao</div><div class="line">yyb(应用宝), rmb(人民币)</div><div class="line"></div><div class="line"><span class="comment">// 错误</span></div><div class="line">pinYin, pinyinField</div></pre></td></tr></table></figure>
<h3 id="包名-package"><a href="#包名-package" class="headerlink" title="包名(package)"></a>包名(package)</h3><p>全小写，最好一个单词  </p>
<p>例：  </p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">package</span>, examplepackage, multiwordpackage</div></pre></td></tr></table></figure>
<h3 id="类名-class"><a href="#类名-class" class="headerlink" title="类名(class)"></a>类名(class)</h3><p>采用大驼峰  </p>
<p>例：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">MyClass, YourClass</div></pre></td></tr></table></figure>
<h3 id="常量名-const"><a href="#常量名-const" class="headerlink" title="常量名(const)"></a>常量名(const)</h3><p>常量全大写，单词间用下划线(_)分隔  </p>
<p>例：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">EVENT_CLICK, HUMAN_STATUS_OK</div></pre></td></tr></table></figure>
<h3 id="参数-parameter-变量-variable-方法-method"><a href="#参数-parameter-变量-variable-方法-method" class="headerlink" title="参数(parameter) 变量(variable) 方法(method)"></a>参数(parameter) 变量(variable) 方法(method)</h3><ul>
<li>采用小驼峰，最好一个单词  </li>
<li>方法通常以动词开头</li>
</ul>
<p>例：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">isOk, data, beginTime  </div><div class="line">checkName, validatePhone</div></pre></td></tr></table></figure>
<h3 id="字段-field"><a href="#字段-field" class="headerlink" title="字段(field)"></a>字段(field)</h3><ul>
<li>采用小驼峰，最好一个单词 </li>
<li>私有(private)/保护(protected) 字段 以 m 前缀开头</li>
<li>私有(private)/保护(protected) 静态字段 以 s 前缀开头</li>
</ul>
<p>例：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// public, internal</span></div><div class="line">isOk, data, beginTime </div><div class="line"></div><div class="line"><span class="comment">// private, protected</span></div><div class="line">mIsOk, mData, mBeginTime </div><div class="line"></div><div class="line"><span class="comment">// private static, protected static</span></div><div class="line">sColor, sName</div></pre></td></tr></table></figure>
<h3 id="表判断-Boolean"><a href="#表判断-Boolean" class="headerlink" title="表判断(Boolean)"></a>表判断(Boolean)</h3><p>可用于[var,field,property,method]  </p>
<ul>
<li>情态动词(can/should/need/will)+动词  </li>
<li>系词(is)+名词  </li>
<li>系词(is)+形容词  </li>
</ul>
<p>例：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">canDelete, canEnter, shouldDie, needDecode, willRain</div><div class="line">isCard, isVip, isBoss, isMonster</div><div class="line">isBeautiful, isVestmented, isRunning</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 文档规范 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> java </tag>
            
            <tag> spec </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[常用词汇表]]></title>
      <url>/p/20170517/spec-glossary/</url>
      <content type="html"><![CDATA[<p>列举一些常用词汇<strong>以供参考</strong></p>
<h3 id="缩写"><a href="#缩写" class="headerlink" title="缩写"></a>缩写</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">ev    事件 event</div><div class="line">ex    异常 exception</div><div class="line">op    操作 operation</div><div class="line">del   删除 delete</div><div class="line">cmd   命令 command</div><div class="line">len   长度 length</div><div class="line">obj   对象 object</div><div class="line">arr   数组 array</div><div class="line">str   字符串 string</div><div class="line">init  初始化 initialize</div><div class="line">ctor  构造器 contructor  </div><div class="line">opts  选项 options</div><div class="line">args  参数 arguments</div></pre></td></tr></table></figure>
<h3 id="缩写-UI"><a href="#缩写-UI" class="headerlink" title="缩写 - UI"></a>缩写 - UI</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">lyt 	布局 layout</div><div class="line">btn 	按钮 button</div><div class="line">txt 	文本 text </div><div class="line">lbl 	标签 label</div><div class="line">fld 	字段 field </div><div class="line">img 	图片 image </div><div class="line">ctrl	控件 control</div></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="动词"><a href="#动词" class="headerlink" title="动词"></a>动词</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line">get/set         获取/设置</div><div class="line">fetch/store     获取/存储</div><div class="line">create/delete   创建/删除</div><div class="line">read/write      读/写</div><div class="line">open/close      打开/关闭</div><div class="line">confirm/cancel  确认/取消</div><div class="line"></div><div class="line">add/remove  添加/移除</div><div class="line">push/pull   推/拉</div><div class="line">push/pop    压入/弹出</div><div class="line">in/out      加入/移出</div><div class="line">on/off      开/关 </div><div class="line"> </div><div class="line">select/query          选择/查询</div><div class="line">update/modify/change  更新/修改/改变</div><div class="line">view/edit/save        查看/编辑/保存</div></pre></td></tr></table></figure>
<h3 id="名词"><a href="#名词" class="headerlink" title="名词"></a>名词</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">prev/next	上一个/下一个</div><div class="line">yes/no    是/否</div><div class="line"></div><div class="line">config    配置，不要用cfg</div><div class="line">element   元素</div><div class="line">active    当前项，活动项</div><div class="line">context   上下文</div><div class="line">target</div><div class="line">duration	持续时间</div><div class="line">interval	间隔时间</div><div class="line">timeout 	超时时间</div></pre></td></tr></table></figure>
<h3 id="名词-UI"><a href="#名词-UI" class="headerlink" title="名词 - UI"></a>名词 - UI</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line">widget    小部件</div><div class="line">panel     面板</div><div class="line">window    窗口</div><div class="line">component 组件</div><div class="line">contianer 容器</div><div class="line"></div><div class="line">button    按钮</div><div class="line">label     标签</div><div class="line">text      文本</div><div class="line">radio     单选框</div><div class="line">checkbox  复选框</div><div class="line">scalar			</div><div class="line">bar</div><div class="line">pagebar</div><div class="line">scrollbar</div><div class="line">slider</div><div class="line">tab</div><div class="line">tree</div><div class="line">bitmap</div><div class="line">list</div><div class="line">combobox</div><div class="line"></div><div class="line">overlay</div><div class="line">popup</div></pre></td></tr></table></figure>
<h3 id="键盘按键英文"><a href="#键盘按键英文" class="headerlink" title="键盘按键英文"></a>键盘按键英文</h3><pre><code>Esc       escape         
Tab       table            
Caps Lock Capital Lock          
Shift     shift
Ctrl      control    
Alt       alternative  
Enter     enter
F1~12     functions

~     tilde   
!     exclamation
@     at     
#     pound ，hash
$     dollar       
%     percent     
^     caret        
&amp;     ampersand    
*     star
(     opening parenthesis    
)     closing parenthesis             
_     underscore     
+     plus
-     minus  
=     equals     
`     backquote   
{     opening brace    
}     closing brace
[     opening bracket   
]     closing bracket   
|     pipe   
\     backslash
:     colon   
;     semicolon  
“     double quote   
‘     single quote  
&lt;     less than
,     comma    
&gt;     great than   
.     dot   
?     question mark   
/     slash 
</code></pre>]]></content>
      
        <categories>
            
            <category> 文档规范 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> spec </tag>
            
            <tag> 词汇表 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android WebView 详解 ]]></title>
      <url>/p/20170515/android-webview/</url>
      <content type="html"><![CDATA[<h2 id="相关API"><a href="#相关API" class="headerlink" title="相关API"></a>相关API</h2><h3 id="相关类介绍"><a href="#相关类介绍" class="headerlink" title="相关类介绍"></a>相关类介绍</h3><ul>
<li><a href="https://developer.android.com/reference/android/webkit/WebResourceRequest.html" target="_blank" rel="external">WebResourceRequest</a> 添加于API21，封装了一个Web资源的请求信息，包含：请求地址，请求方法，请求头，是否主框架，是否用户点击，是否重定向</li>
<li><a href="https://developer.android.com/reference/android/webkit/WebResourceResponse.html" target="_blank" rel="external">WebResourceResponse</a> 封装了一个Web资源的响应信息，包含：响应数据流，编码，MIME类型，API21后添加了响应头，状态码与状态描述</li>
<li><a href="https://developer.android.com/reference/android/webkit/WebResourceError.html" target="_blank" rel="external">WebResourceError</a> 添加于API23，封装了一个Web资源的错误信息，包含错误码和描述</li>
<li><a href="https://developer.android.com/reference/android/webkit/CookieManager.html" target="_blank" rel="external">CookieManager</a> 管理用于WebView的cookies。。</li>
<li><a href="https://developer.android.com/reference/android/webkit/WebViewDatabase.html" target="_blank" rel="external">WebViewDatabase</a> 存储与管理以下几类浏览数据：<ul>
<li>表单自动填充的的用户名与密码</li>
<li>HTTP认证的用户名与密码</li>
<li>曾经输入过的文本(比如自动完成)</li>
</ul>
</li>
<li><a href="https://developer.android.com/reference/android/webkit/WebStorage.html" target="_blank" rel="external">WebStorage</a> 用于管理WebView提供的JS存储API，比如Application Cache API，Web SQL Database API，HTML5 Web Storage API</li>
<li><a href="https://developer.android.com/reference/android/webkit/GeolocationPermissions.html" target="_blank" rel="external">GeolocationPermissions</a> 用于管理WebView的JS Geolocation API</li>
<li><a href="https://developer.android.com/reference/android/webkit/HttpAuthHandler.html" target="_blank" rel="external">HttpAuthHandler</a> 表示一个HTTP认证请求，提供了方法操作(proceed/cancel)请求 </li>
<li><a href="https://developer.android.com/reference/android/webkit/SslErrorHandler.html" target="_blank" rel="external">SslErrorHandler</a> 表示一个处理SSL错误的请求，提供了方法操作(proceed/cancel)请求 </li>
<li><a href="https://developer.android.com/reference/android/webkit/ClientCertRequest.html" target="_blank" rel="external">ClientCertRequest</a> 表示一个证书请求，提供了方法操作(proceed/cancel/ignore)请求 </li>
<li><a href="https://developer.android.com/reference/android/webkit/JsResult.html" target="_blank" rel="external">JsResult</a> 用于处理底层JS发起的请求，为客户端提供一些方法指明应进行的操作，比如确认或取消。</li>
</ul>
<a id="more"></a>
<h3 id="WebView"><a href="#WebView" class="headerlink" title="WebView"></a>WebView</h3><p>基本</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 获取当前页面的URL</span></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getUrl</span><span class="params">()</span></span>;</div><div class="line"><span class="comment">// 获取当前页面的原始URL(重定向后可能当前url不同)</span></div><div class="line"><span class="comment">// 就是http headers的Referer参数，loadUrl时为null</span></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getOriginalUrl</span><span class="params">()</span></span>;</div><div class="line"><span class="comment">// 获取当前页面的标题</span></div><div class="line"><span class="function"><span class="keyword">public</span> String <span class="title">getTitle</span><span class="params">()</span></span>;</div><div class="line"><span class="comment">// 获取当前页面的favicon</span></div><div class="line"><span class="function"><span class="keyword">public</span> Bitmap <span class="title">getFavicon</span><span class="params">()</span></span>;</div><div class="line"><span class="comment">// 获取当前页面的加载进度</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getProgress</span><span class="params">()</span></span>;</div><div class="line"></div><div class="line"><span class="comment">// 通知WebView内核网络状态</span></div><div class="line"><span class="comment">// 用于设置JS属性`window.navigator.isOnline`和产生HTML5事件`online/offline`</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setNetworkAvailable</span><span class="params">(<span class="keyword">boolean</span> networkUp)</span></span></div><div class="line"><span class="function"></span></div><div class="line"><span class="function"><span class="comment">// 设置初始缩放比例</span></span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setInitialScale</span><span class="params">(<span class="keyword">int</span> scaleInPercent)</span>；</span></div></pre></td></tr></table></figure>
<p>加载网页</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 加载URL指定的网页</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadUrl</span><span class="params">(String url)</span></span>;</div><div class="line"><span class="comment">// 携带http headers加载URL指定的网页</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadUrl</span><span class="params">(String url, Map&lt;String, String&gt; additionalHttpHeaders)</span></span>;</div><div class="line"><span class="comment">// 使用POST请求加载指定的网页</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">postUrl</span><span class="params">(String url, <span class="keyword">byte</span>[] postData)</span></span>;</div><div class="line"><span class="comment">// 重新加载当前网页</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">reload</span><span class="params">()</span></span>;</div><div class="line"></div><div class="line"><span class="comment">// 加载内容</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadData</span><span class="params">(String data, String mimeType, String encoding)</span></span>;</div><div class="line"><span class="comment">// 使用baseUrl加载内容</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">loadDataWithBaseURL</span><span class="params">(String baseUrl, String data, String mimeType, String encoding, String historyUrl)</span></span>;</div></pre></td></tr></table></figure>
<p>Javascript</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 注入Javascript对象</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">addJavascriptInterface</span><span class="params">(Object object, String name)</span></span>;</div><div class="line"><span class="comment">// 移除已注入的Javascript对象，下次加载或刷新页面时生效</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">removeJavascriptInterface</span><span class="params">(String name)</span></span>;</div><div class="line"></div><div class="line"><span class="comment">// 对传入的JS表达式求值，通过resultCallback返回结果</span></div><div class="line"><span class="comment">// 此函数添加于API19，必须在UI线程中调用，回调也将在UI线程</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">evaluateJavascript</span><span class="params">(String script, ValueCallback&lt;String&gt; resultCallback)</span></span></div></pre></td></tr></table></figure>
<p>导航(前进后退)</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 复制一份BackForwardList</span></div><div class="line"><span class="function"><span class="keyword">public</span> WebBackForwardList <span class="title">copyBackForwardList</span><span class="params">()</span></span>;</div><div class="line"><span class="comment">// 是否可后退</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">canGoBack</span><span class="params">()</span></span>;</div><div class="line"><span class="comment">// 是否可前进</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">canGoForward</span><span class="params">()</span></span>;</div><div class="line"><span class="comment">// 是否可前进/后退steps页，大于0表示前进小于0表示后退</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">canGoBackOrForward</span><span class="params">(<span class="keyword">int</span> steps)</span></span>;</div><div class="line"></div><div class="line"><span class="comment">// 后退一页</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">goBack</span><span class="params">()</span></span>;</div><div class="line"><span class="comment">// 前进一页</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">goForward</span><span class="params">()</span></span>;</div><div class="line"><span class="comment">// 前进/后退steps页，大于0表示前进小于0表示后退</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">goBackOrForward</span><span class="params">(<span class="keyword">int</span> steps)</span></span>;</div><div class="line"></div><div class="line"><span class="comment">// 清除当前webview访问的历史记录</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clearHistory</span><span class="params">()</span></span>;</div></pre></td></tr></table></figure>
<p>网页查找功能</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 设置网页查找结果回调</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setFindListener</span><span class="params">(FindListener listener)</span></span>;</div><div class="line"><span class="comment">// 异步执行查找网页内包含的字符串并设置高亮，查找结果会回调.</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">findAllAsync</span> <span class="params">(String find)</span></span>;</div><div class="line"><span class="comment">// 查找下一个匹配的字符串</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">findNext</span> <span class="params">(<span class="keyword">boolean</span> forward)</span></span>;</div><div class="line"><span class="comment">// 清除网页查找的高亮匹配字符串</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clearMatches</span><span class="params">()</span></span>;</div></pre></td></tr></table></figure>
<p>截屏/翻页/缩放</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 网页截屏并保存到指定文件</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveWebArchive</span><span class="params">(String filename)</span></span>;</div><div class="line"><span class="comment">// 网页截屏并保存到文件</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">saveWebArchive</span><span class="params">(String basename, <span class="keyword">boolean</span> autoname, ValueCallback&lt;String&gt; callback)</span>；</span></div><div class="line"><span class="function"></span></div><div class="line"><span class="function"><span class="comment">// 上翻一页，即向上滚动WebView高度的一半</span></span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pageUp</span><span class="params">(<span class="keyword">boolean</span> top)</span></span>;</div><div class="line"><span class="comment">// 下翻一页，即向下滚动WebView高度的一半</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">pageDown</span><span class="params">(<span class="keyword">boolean</span> bottom)</span></span>;</div><div class="line"></div><div class="line"><span class="comment">// 缩放</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">zoomBy</span><span class="params">(<span class="keyword">float</span> factor)</span></span>;</div><div class="line"><span class="comment">// 放大</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">zoomIn</span><span class="params">()</span></span>;</div><div class="line"><span class="comment">// 缩放</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">zoomOut</span><span class="params">()</span></span>;</div></pre></td></tr></table></figure>
<p>其它</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 清除网页缓存，由于内核缓存是全局的因此这个方法不仅仅针对webview而是针对整个应用程序</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clearCache</span><span class="params">(<span class="keyword">boolean</span> includeDiskFiles)</span></span>;</div><div class="line"><span class="comment">// 清除自动完成填充的表单数据</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clearFormData</span><span class="params">()</span></span>;</div><div class="line"><span class="comment">// 清除SSL偏好</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">clearSslPreferences</span><span class="params">()</span></span>;</div><div class="line"></div><div class="line"><span class="comment">// 查询文档中是否有图片，查询结果将被发送到msg.getTarget()</span></div><div class="line"><span class="comment">// 如果包含图片，msg.arg1 为1，否则为0</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">documentHasImages</span><span class="params">(Message msg)</span></span>;</div><div class="line"></div><div class="line"><span class="comment">// 请求最近轻叩(tapped)的 锚点/图像 元素的URL，查询结果将被发送到msg.getTarget()</span></div><div class="line"><span class="comment">// msg.getData()中的url是锚点的href属性，title是锚点的文本，src是图像的src</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">requestFocusNodeHref</span><span class="params">(Message msg)</span></span>;</div><div class="line"></div><div class="line"><span class="comment">// 请求最近触摸(touched)的 图像元素的URL，查询结果将被发送到msg.getTarget()</span></div><div class="line"><span class="comment">// msg.getData()中的url是图像链接</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">requestImageRef</span><span class="params">(Message msg)</span> </span></div><div class="line"><span class="function"></span></div><div class="line"><span class="function"></span></div><div class="line"><span class="function"><span class="comment">// 清除证书请求偏好，添加于API21</span></span></div><div class="line"><span class="function"><span class="comment">// 在WebView收到`android.security.STORAGE_CHANGED` Intent时会自动清除</span></span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">clearClientCertPreferences</span><span class="params">(Runnable onCleared)</span></span></div><div class="line"><span class="function"></span></div><div class="line"><span class="function"><span class="comment">// 开启网页内容(js,css,html...)调试模式，添加于API19</span></span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setWebContentsDebuggingEnabled</span><span class="params">(<span class="keyword">boolean</span> enabled)</span></span></div></pre></td></tr></table></figure>
<h3 id="WebSettings"><a href="#WebSettings" class="headerlink" title="WebSettings"></a>WebSettings</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div></pre></td><td class="code"><pre><div class="line">WebSettings settings = web.getSettings();</div><div class="line"></div><div class="line"><span class="comment">// 存储(storage)</span></div><div class="line"><span class="comment">// 启用HTML5 DOM storage API，默认值 false</span></div><div class="line">settings.setDomStorageEnabled(<span class="keyword">true</span>); </div><div class="line"><span class="comment">// 启用Web SQL Database API，这个设置会影响同一进程内的所有WebView，默认值 false</span></div><div class="line"><span class="comment">// 此API已不推荐使用，参考：https://www.w3.org/TR/webdatabase/</span></div><div class="line">settings.setDatabaseEnabled(<span class="keyword">true</span>);  </div><div class="line"><span class="comment">// 启用Application Caches API，必需设置有效的缓存路径才能生效，默认值 false</span></div><div class="line"><span class="comment">// 此API已废弃，参考：https://developer.mozilla.org/zh-CN/docs/Web/HTML/Using_the_application_cache</span></div><div class="line">settings.setAppCacheEnabled(<span class="keyword">true</span>); </div><div class="line">settings.setAppCachePath(context.getCacheDir().getAbsolutePath());</div><div class="line"></div><div class="line"><span class="comment">// 定位(location)</span></div><div class="line">settings.setGeolocationEnabled(<span class="keyword">true</span>);</div><div class="line"></div><div class="line"><span class="comment">// 是否保存表单数据</span></div><div class="line">settings.setSaveFormData(<span class="keyword">true</span>);</div><div class="line"><span class="comment">// 是否当webview调用requestFocus时为页面的某个元素设置焦点，默认值 true</span></div><div class="line">settings.setNeedInitialFocus(<span class="keyword">true</span>);  </div><div class="line"></div><div class="line"><span class="comment">// 是否支持viewport属性，默认值 false</span></div><div class="line"><span class="comment">// 页面通过`&lt;meta name="viewport" ... /&gt;`自适应手机屏幕</span></div><div class="line">settings.setUseWideViewPort(<span class="keyword">true</span>);</div><div class="line"><span class="comment">// 是否使用overview mode加载页面，默认值 false</span></div><div class="line"><span class="comment">// 当页面宽度大于WebView宽度时，缩小使页面宽度等于WebView宽度</span></div><div class="line">settings.setLoadWithOverviewMode(<span class="keyword">true</span>);</div><div class="line"><span class="comment">// 布局算法</span></div><div class="line">settings.setLayoutAlgorithm(WebSettings.LayoutAlgorithm.NORMAL);</div><div class="line"></div><div class="line"><span class="comment">// 是否支持Javascript，默认值false</span></div><div class="line">settings.setJavaScriptEnabled(<span class="keyword">true</span>); </div><div class="line"><span class="comment">// 是否支持多窗口，默认值false</span></div><div class="line">settings.setSupportMultipleWindows(<span class="keyword">false</span>);</div><div class="line"><span class="comment">// 是否可用Javascript(window.open)打开窗口，默认值 false</span></div><div class="line">settings.setJavaScriptCanOpenWindowsAutomatically(<span class="keyword">false</span>);</div><div class="line"></div><div class="line"><span class="comment">// 资源访问</span></div><div class="line">settings.setAllowContentAccess(<span class="keyword">true</span>); <span class="comment">// 是否可访问Content Provider的资源，默认值 true</span></div><div class="line">settings.setAllowFileAccess(<span class="keyword">true</span>);    <span class="comment">// 是否可访问本地文件，默认值 true</span></div><div class="line"><span class="comment">// 是否允许通过file url加载的Javascript读取本地文件，默认值 false</span></div><div class="line">settings.setAllowFileAccessFromFileURLs(<span class="keyword">false</span>);  </div><div class="line"><span class="comment">// 是否允许通过file url加载的Javascript读取全部资源(包括文件,http,https)，默认值 false</span></div><div class="line">settings.setAllowUniversalAccessFromFileURLs(<span class="keyword">false</span>);</div><div class="line"></div><div class="line"><span class="comment">// 资源加载</span></div><div class="line">settings.setLoadsImagesAutomatically(<span class="keyword">true</span>); <span class="comment">// 是否自动加载图片</span></div><div class="line">settings.setBlockNetworkImage(<span class="keyword">false</span>);       <span class="comment">// 禁止加载网络图片</span></div><div class="line">settings.setBlockNetworkLoads(<span class="keyword">false</span>);       <span class="comment">// 禁止加载所有网络资源</span></div><div class="line"></div><div class="line"><span class="comment">// 缩放(zoom)</span></div><div class="line">settings.setSupportZoom(<span class="keyword">true</span>);          <span class="comment">// 是否支持缩放</span></div><div class="line">settings.setBuiltInZoomControls(<span class="keyword">false</span>); <span class="comment">// 是否使用内置缩放机制</span></div><div class="line">settings.setDisplayZoomControls(<span class="keyword">true</span>);  <span class="comment">// 是否显示内置缩放控件</span></div><div class="line"></div><div class="line"><span class="comment">// 默认文本编码，默认值 "UTF-8"</span></div><div class="line">settings.setDefaultTextEncodingName(<span class="string">"UTF-8"</span>);</div><div class="line">settings.setDefaultFontSize(<span class="number">16</span>);        <span class="comment">// 默认文字尺寸，默认值16，取值范围1-72</span></div><div class="line">settings.setDefaultFixedFontSize(<span class="number">16</span>);   <span class="comment">// 默认等宽字体尺寸，默认值16</span></div><div class="line">settings.setMinimumFontSize(<span class="number">8</span>);         <span class="comment">// 最小文字尺寸，默认值 8</span></div><div class="line">settings.setMinimumLogicalFontSize(<span class="number">8</span>);  <span class="comment">// 最小文字逻辑尺寸，默认值 8</span></div><div class="line">settings.setTextZoom(<span class="number">100</span>);              <span class="comment">// 文字缩放百分比，默认值 100</span></div><div class="line"></div><div class="line"><span class="comment">// 字体</span></div><div class="line">settings.setStandardFontFamily(<span class="string">"sans-serif"</span>);   <span class="comment">// 标准字体，默认值 "sans-serif"</span></div><div class="line">settings.setSerifFontFamily(<span class="string">"serif"</span>);           <span class="comment">// 衬线字体，默认值 "serif"</span></div><div class="line">settings.setSansSerifFontFamily(<span class="string">"sans-serif"</span>);  <span class="comment">// 无衬线字体，默认值 "sans-serif"</span></div><div class="line">settings.setFixedFontFamily(<span class="string">"monospace"</span>);       <span class="comment">// 等宽字体，默认值 "monospace"</span></div><div class="line">settings.setCursiveFontFamily(<span class="string">"cursive"</span>);       <span class="comment">// 手写体(草书)，默认值 "cursive"</span></div><div class="line">settings.setFantasyFontFamily(<span class="string">"fantasy"</span>);       <span class="comment">// 幻想体，默认值 "fantasy"</span></div><div class="line"></div><div class="line"></div><div class="line"><span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.KITKAT) &#123;</div><div class="line">    <span class="comment">// 用户是否需要通过手势播放媒体(不会自动播放)，默认值 true</span></div><div class="line">    settings.setMediaPlaybackRequiresUserGesture(<span class="keyword">true</span>);</div><div class="line">&#125;</div><div class="line"><span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.LOLLIPOP) &#123;</div><div class="line">    <span class="comment">// 5.0以上允许加载http和https混合的页面(5.0以下默认允许，5.0+默认禁止)</span></div><div class="line">    settings.setMixedContentMode(WebSettings.MIXED_CONTENT_ALWAYS_ALLOW);</div><div class="line">&#125;</div><div class="line"><span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.M) &#123;</div><div class="line">    <span class="comment">// 是否在离开屏幕时光栅化(会增加内存消耗)，默认值 false</span></div><div class="line">    settings.setOffscreenPreRaster(<span class="keyword">false</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">if</span> (isNetworkConnected(context)) &#123;</div><div class="line">    <span class="comment">// 根据cache-control决定是否从网络上取数据</span></div><div class="line">    settings.setCacheMode(WebSettings.LOAD_DEFAULT);</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="comment">// 没网，离线加载，优先加载缓存(即使已经过期)</span></div><div class="line">    settings.setCacheMode(WebSettings.LOAD_CACHE_ELSE_NETWORK);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// deprecated</span></div><div class="line">settings.setRenderPriority(WebSettings.RenderPriority.HIGH);</div><div class="line">settings.setDatabasePath(context.getDir(<span class="string">"database"</span>, Context.MODE_PRIVATE).getPath());</div><div class="line">settings.setGeolocationDatabasePath(context.getFilesDir().getPath());</div></pre></td></tr></table></figure>
<p>通常大部分保持默认值就好了</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line">WebSettings settings = web.getSettings();</div><div class="line"><span class="comment">// 缓存(cache)</span></div><div class="line">settings.setAppCacheEnabled(<span class="keyword">true</span>);      <span class="comment">// 默认值 false</span></div><div class="line">settings.setAppCachePath(context.getCacheDir().getAbsolutePath());</div><div class="line"></div><div class="line"><span class="comment">// 存储(storage)</span></div><div class="line">settings.setDomStorageEnabled(<span class="keyword">true</span>);    <span class="comment">// 默认值 false</span></div><div class="line">settings.setDatabaseEnabled(<span class="keyword">true</span>);      <span class="comment">// 默认值 false </span></div><div class="line"> </div><div class="line"><span class="comment">// 是否支持viewport属性，默认值 false</span></div><div class="line"><span class="comment">// 页面通过`&lt;meta name="viewport" ... /&gt;`自适应手机屏幕</span></div><div class="line">settings.setUseWideViewPort(<span class="keyword">true</span>);</div><div class="line"><span class="comment">// 是否使用overview mode加载页面，默认值 false</span></div><div class="line"><span class="comment">// 当页面宽度大于WebView宽度时，缩小使页面宽度等于WebView宽度</span></div><div class="line">settings.setLoadWithOverviewMode(<span class="keyword">true</span>);</div><div class="line"></div><div class="line"><span class="comment">// 是否支持Javascript，默认值false</span></div><div class="line">settings.setJavaScriptEnabled(<span class="keyword">true</span>);    </div><div class="line"></div><div class="line"><span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.LOLLIPOP) &#123;</div><div class="line">    <span class="comment">// 5.0以上允许加载http和https混合的页面(5.0以下默认允许，5.0+默认禁止)</span></div><div class="line">    settings.setMixedContentMode(WebSettings.MIXED_CONTENT_ALWAYS_ALLOW);</div><div class="line">&#125; </div><div class="line"></div><div class="line"><span class="keyword">if</span> (isNetworkConnected(context)) &#123;</div><div class="line">    <span class="comment">// 根据cache-control决定是否从网络上取数据</span></div><div class="line">    settings.setCacheMode(WebSettings.LOAD_DEFAULT);</div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    <span class="comment">// 没网，离线加载，优先加载缓存(即使已经过期)</span></div><div class="line">    settings.setCacheMode(WebSettings.LOAD_CACHE_ELSE_NETWORK);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="WebViewClient"><a href="#WebViewClient" class="headerlink" title="WebViewClient"></a>WebViewClient</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 拦截页面加载，返回true表示宿主app拦截并处理了该url，否则返回false由当前WebView处理</span></div><div class="line"><span class="comment">// 此方法在API24被废弃，不处理POST请求</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">shouldOverrideUrlLoading</span><span class="params">(WebView view, String url)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 拦截页面加载，返回true表示宿主app拦截并处理了该url，否则返回false由当前WebView处理</span></div><div class="line"><span class="comment">// 此方法添加于API24，不处理POST请求，可拦截处理子frame的非http请求</span></div><div class="line"><span class="meta">@TargetApi</span>(Build.VERSION_CODES.N)</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">shouldOverrideUrlLoading</span><span class="params">(WebView view, WebResourceRequest request)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> shouldOverrideUrlLoading(view, request.getUrl().toString());</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 此方法废弃于API21，调用于非UI线程</span></div><div class="line"><span class="comment">// 拦截资源请求并返回响应数据，返回null时WebView将继续加载资源</span></div><div class="line"><span class="function"><span class="keyword">public</span> WebResourceResponse <span class="title">shouldInterceptRequest</span><span class="params">(WebView view, String url)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 此方法添加于API21，调用于非UI线程</span></div><div class="line"><span class="comment">// 拦截资源请求并返回数据，返回null时WebView将继续加载资源</span></div><div class="line"><span class="meta">@TargetApi</span>(Build.VERSION_CODES.LOLLIPOP)</div><div class="line"><span class="function"><span class="keyword">public</span> WebResourceResponse <span class="title">shouldInterceptRequest</span><span class="params">(WebView view, WebResourceRequest request)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> shouldInterceptRequest(view, request.getUrl().toString());</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 页面(url)开始加载</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageStarted</span><span class="params">(WebView view, String url, Bitmap favicon)</span> </span>&#123;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 页面(url)完成加载</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageFinished</span><span class="params">(WebView view, String url)</span> </span>&#123;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 将要加载资源(url)</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onLoadResource</span><span class="params">(WebView view, String url)</span> </span>&#123;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 这个回调添加于API23，仅用于主框架的导航</span></div><div class="line"><span class="comment">// 通知应用导航到之前页面时，其遗留的WebView内容将不再被绘制。</span></div><div class="line"><span class="comment">// 这个回调可以用来决定哪些WebView可见内容能被安全地回收，以确保不显示陈旧的内容</span></div><div class="line"><span class="comment">// 它最早被调用，以此保证WebView.onDraw不会绘制任何之前页面的内容，随后绘制背景色或需要加载的新内容。</span></div><div class="line"><span class="comment">// 当HTTP响应body已经开始加载并体现在DOM上将在随后的绘制中可见时，这个方法会被调用。</span></div><div class="line"><span class="comment">// 这个回调发生在文档加载的早期，因此它的资源(css,和图像)可能不可用。</span></div><div class="line"><span class="comment">// 如果需要更细粒度的视图更新，查看 postVisualStateCallback(long, WebView.VisualStateCallback).</span></div><div class="line"><span class="comment">// 请注意这上边的所有条件也支持 postVisualStateCallback(long ,WebView.VisualStateCallback)</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPageCommitVisible</span><span class="params">(WebView view, String url)</span> </span>&#123;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 此方法废弃于API23</span></div><div class="line"><span class="comment">// 主框架加载资源时出错</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceivedError</span><span class="params">(WebView view, <span class="keyword">int</span> errorCode, String description, String failingUrl)</span> </span>&#123;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 此方法添加于API23</span></div><div class="line"><span class="comment">// 加载资源时出错，通常意味着连接不到服务器</span></div><div class="line"><span class="comment">// 由于所有资源加载错误都会调用此方法，所以此方法应尽量逻辑简单</span></div><div class="line"><span class="meta">@TargetApi</span>(Build.VERSION_CODES.M)</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceivedError</span><span class="params">(WebView view, WebResourceRequest request, WebResourceError error)</span> </span>&#123;</div><div class="line">    <span class="keyword">if</span> (request.isForMainFrame()) &#123;</div><div class="line">        onReceivedError(view, error.getErrorCode(), error.getDescription().toString(), request.getUrl().toString());</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 此方法添加于API23</span></div><div class="line"><span class="comment">// 在加载资源(iframe,image,js,css,ajax...)时收到了 HTTP 错误(状态码&gt;=400)</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceivedHttpError</span><span class="params">(WebView view, WebResourceRequest request, WebResourceResponse errorResponse)</span> </span>&#123;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">// 是否重新提交表单，默认不重发</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFormResubmission</span><span class="params">(WebView view, Message dontResend, Message resend)</span> </span>&#123;</div><div class="line">    dontResend.sendToTarget();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 通知应用可以将当前的url存储在数据库中，意味着当前的访问url已经生效并被记录在内核当中。</span></div><div class="line"><span class="comment">// 此方法在网页加载过程中只会被调用一次，网页前进后退并不会回调这个函数。</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">doUpdateVisitedHistory</span><span class="params">(WebView view, String url, <span class="keyword">boolean</span> isReload)</span> </span>&#123;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 加载资源时发生了一个SSL错误，应用必需响应(继续请求或取消请求)</span></div><div class="line"><span class="comment">// 处理决策可能被缓存用于后续的请求，默认行为是取消请求</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceivedSslError</span><span class="params">(WebView view, SslErrorHandler handler, SslError error)</span> </span>&#123;</div><div class="line">    handler.cancel();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 此方法添加于API21，在UI线程被调用</span></div><div class="line"><span class="comment">// 处理SSL客户端证书请求，必要的话可显示一个UI来提供KEY。</span></div><div class="line"><span class="comment">// 有三种响应方式：proceed()/cancel()/ignore()，默认行为是取消请求</span></div><div class="line"><span class="comment">// 如果调用proceed()或cancel()，Webview 将在内存中保存响应结果且对相同的"host:port"不会再次调用 onReceivedClientCertRequest</span></div><div class="line"><span class="comment">// 多数情况下，可通过KeyChain.choosePrivateKeyAlias启动一个Activity供用户选择合适的私钥</span></div><div class="line"><span class="meta">@TargetApi</span>(Build.VERSION_CODES.LOLLIPOP)</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceivedClientCertRequest</span><span class="params">(WebView view, ClientCertRequest request)</span> </span>&#123;</div><div class="line">    request.cancel();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 处理HTTP认证请求，默认行为是取消请求</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceivedHttpAuthRequest</span><span class="params">(WebView view, HttpAuthHandler handler, String host, String realm)</span> </span>&#123;</div><div class="line">    handler.cancel();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 通知应用有个已授权账号自动登陆了</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceivedLoginRequest</span><span class="params">(WebView view, String realm, String account, String args)</span> </span>&#123;</div><div class="line">&#125;</div><div class="line"><span class="comment">// 给应用一个机会处理按键事件</span></div><div class="line"><span class="comment">// 如果返回true，WebView不处理该事件，否则WebView会一直处理，默认返回false</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">shouldOverrideKeyEvent</span><span class="params">(WebView view, KeyEvent event)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 处理未被WebView消费的按键事件</span></div><div class="line"><span class="comment">// WebView总是消费按键事件，除非是系统按键或shouldOverrideKeyEvent返回true</span></div><div class="line"><span class="comment">// 此方法在按键事件分派时被异步调用</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onUnhandledKeyEvent</span><span class="params">(WebView view, KeyEvent event)</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>.onUnhandledKeyEvent(view, event);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 通知应用页面缩放系数变化</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onScaleChanged</span><span class="params">(WebView view, <span class="keyword">float</span> oldScale, <span class="keyword">float</span> newScale)</span> </span>&#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="WebChromeClient"><a href="#WebChromeClient" class="headerlink" title="WebChromeClient"></a>WebChromeClient</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 获得所有访问历史项目的列表，用于链接着色。</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">getVisitedHistory</span><span class="params">(ValueCallback&lt;String[]&gt; callback)</span> </span>&#123;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// &lt;video /&gt; 控件在未播放时，会展示为一张海报图，HTML中可通过它的'poster'属性来指定。</span></div><div class="line"><span class="comment">// 如果未指定'poster'属性，则通过此方法提供一个默认的海报图。</span></div><div class="line"><span class="function"><span class="keyword">public</span> Bitmap <span class="title">getDefaultVideoPoster</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 当全屏的视频正在缓冲时，此方法返回一个占位视图(比如旋转的菊花)。</span></div><div class="line"><span class="function"><span class="keyword">public</span> View <span class="title">getVideoLoadingProgressView</span><span class="params">()</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 接收当前页面的加载进度</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onProgressChanged</span><span class="params">(WebView view, <span class="keyword">int</span> newProgress)</span> </span>&#123;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 接收文档标题</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceivedTitle</span><span class="params">(WebView view, String title)</span> </span>&#123;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 接收图标(favicon)</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceivedIcon</span><span class="params">(WebView view, Bitmap icon)</span> </span>&#123;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// Android中处理Touch Icon的方案</span></div><div class="line"><span class="comment">// http://droidyue.com/blog/2015/01/18/deal-with-touch-icon-in-android/index.html</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceivedTouchIconUrl</span><span class="params">(WebView view, String url, <span class="keyword">boolean</span> precomposed)</span> </span>&#123;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 通知应用当前页进入了全屏模式，此时应用必须显示一个包含网页内容的自定义View</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onShowCustomView</span><span class="params">(View view, CustomViewCallback callback)</span> </span>&#123;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 通知应用当前页退出了全屏模式，此时应用必须隐藏之前显示的自定义View</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onHideCustomView</span><span class="params">()</span> </span>&#123;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">// 显示一个alert对话框</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onJsAlert</span><span class="params">(WebView view, String url, String message, JsResult result)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 显示一个confirm对话框</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onJsConfirm</span><span class="params">(WebView view, String url, String message, JsResult result)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 显示一个prompt对话框</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onJsPrompt</span><span class="params">(WebView view, String url, String message, String defaultValue, JsPromptResult result)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 显示一个对话框让用户选择是否离开当前页面</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onJsBeforeUnload</span><span class="params">(WebView view, String url, String message, JsResult result)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"></div><div class="line"><span class="comment">// 指定源的网页内容在没有设置权限状态下尝试使用地理位置API。</span></div><div class="line"><span class="comment">// 从API24开始，此方法只为安全的源(https)调用，非安全的源会被自动拒绝</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onGeolocationPermissionsShowPrompt</span><span class="params">(String origin, GeolocationPermissions.Callback callback)</span> </span>&#123;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 当前一个调用 onGeolocationPermissionsShowPrompt() 取消时，隐藏相关的UI。</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onGeolocationPermissionsHidePrompt</span><span class="params">()</span> </span>&#123;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 通知应用打开新窗口</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onCreateWindow</span><span class="params">(WebView view, <span class="keyword">boolean</span> isDialog, <span class="keyword">boolean</span> isUserGesture, Message resultMsg)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 通知应用关闭窗口</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCloseWindow</span><span class="params">(WebView window)</span> </span>&#123;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 请求获取取焦点</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRequestFocus</span><span class="params">(WebView view)</span> </span>&#123;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 通知应用网页内容申请访问指定资源的权限(该权限未被授权或拒绝)</span></div><div class="line"><span class="meta">@TargetApi</span>(Build.VERSION_CODES.LOLLIPOP)</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPermissionRequest</span><span class="params">(PermissionRequest request)</span> </span>&#123;</div><div class="line">    request.deny();</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 通知应用权限的申请被取消，隐藏相关的UI。</span></div><div class="line"><span class="meta">@TargetApi</span>(Build.VERSION_CODES.LOLLIPOP)</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onPermissionRequestCanceled</span><span class="params">(PermissionRequest request)</span> </span>&#123;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 为'&lt;input type="file" /&gt;'显示文件选择器，返回false使用默认处理</span></div><div class="line"><span class="meta">@TargetApi</span>(Build.VERSION_CODES.LOLLIPOP)</div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onShowFileChooser</span><span class="params">(WebView webView, ValueCallback&lt;Uri[]&gt; filePathCallback, FileChooserParams fileChooserParams)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 接收JavaScript控制台消息</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onConsoleMessage</span><span class="params">(ConsoleMessage consoleMessage)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="回调顺序"><a href="#回调顺序" class="headerlink" title="回调顺序"></a>回调顺序</h2><p>页面加载回调顺序：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">shouldOverrideUrlLoading</div><div class="line">onProgressChanged[<span class="number">10</span>]</div><div class="line">shouldInterceptRequest </div><div class="line">onProgressChanged[...]</div><div class="line">onPageStarted</div><div class="line">onProgressChanged[...]</div><div class="line">onLoadResource </div><div class="line">onProgressChanged[...]</div><div class="line">onReceivedTitle/onPageCommitVisible </div><div class="line">onProgressChanged[<span class="number">100</span>]</div><div class="line">onPageFinished</div><div class="line">onReceivedIcon</div></pre></td></tr></table></figure>
<p>资源加载回调：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">shouldInterceptRequest() -&gt; onLoadResource()</div></pre></td></tr></table></figure>
<p>发生重定向时回调：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">onPageStarted() -&gt; shouldOverrideUrlLoading()</div></pre></td></tr></table></figure>
<p>直接loadUrl的回调：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 无重定向</span></div><div class="line">onPageStarted() -&gt; onPageFinished()</div><div class="line"><span class="comment">// 有重定向，shouldOverrideUrlLoading 返回 true 时 onPageFinished 仍会执行</span></div><div class="line">onPageStarted() -&gt; redirection -&gt; ... -&gt; onPageFinished()</div></pre></td></tr></table></figure>
<p>用户点击链接的回调：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// shouldOverrideUrlLoading 返回 true 时不执行onPageStarted/onPageFinished</span></div><div class="line">shouldOverrideUrlLoading() -&gt; ...</div><div class="line"><span class="comment">// 无重定向</span></div><div class="line">shouldOverrideUrlLoading() -&gt; onPageStarted() -&gt; onPageFinished()</div><div class="line"><span class="comment">// 有重定向</span></div><div class="line">shouldOverrideUrlLoading() -&gt; onPageStarted() -&gt; redirection -&gt; ... -&gt; onPageFinished()</div></pre></td></tr></table></figure>
<p>后退/前进/刷新 时回调：</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">onPageStarted() -&gt; onPageFinished()</div></pre></td></tr></table></figure>
<p>关于 <code>window.location</code> </p>
<p>假设从A页面跳转到B页面</p>
<ul>
<li>如果页面B中直接输出 <code>window.location=&quot;http://example.com&quot;</code>，那页面B不会被加入回退栈，回退将直接回到A页</li>
<li>如果页面B加载完成后，比如用<code>setTimeout</code>延迟了，那页面B会被加入回退栈，当回退到页面A时会再执行跳转，这会导致回退功能看起来不正常，需要快速回退两次才能回到A页面</li>
</ul>
<h2 id="视口-viewport"><a href="#视口-viewport" class="headerlink" title="视口(viewport)"></a>视口(viewport)</h2><blockquote>
<p><a href="https://developer.android.com/guide/webapps/targeting.html" target="_blank" rel="external">https://developer.android.com/guide/webapps/targeting.html</a><br><a href="https://developer.mozilla.org/en-US/docs/Mozilla/Mobile/Viewport_meta_tag" target="_blank" rel="external">https://developer.mozilla.org/en-US/docs/Mozilla/Mobile/Viewport_meta_tag</a><br><a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/@viewport" target="_blank" rel="external">https://developer.mozilla.org/zh-CN/docs/Web/CSS/@viewport</a></p>
</blockquote>
<p>视口是一个为网页提供绘图区域的矩形。   </p>
<p>你可以指定数个视口属性，比如尺寸和初始缩放系数(initial scale)。其中最重要的是<strong>视口宽度</strong>，它定义了网页水平方向的可用像素总数(可用的CSS像素数)。</p>
<p>多数 Android 上的网页浏览器(包括 Chrome)设置默认视口为一个大尺寸(被称为”<strong>wide viewport mode”</strong>，宽约 980px)。<br>也有许多浏览器默认会尽可能缩小以显示完整的视口宽度(被称为”<strong>overview mode</strong>“)。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 是否支持viewport属性，默认值 false</span></div><div class="line"><span class="comment">// 页面通过`&lt;meta name="viewport" ... /&gt;`自适应手机屏幕</span></div><div class="line"><span class="comment">// 当值为true且viewport标签不存在或未指定宽度时使用 wide viewport mode</span></div><div class="line">settings.setUseWideViewPort(<span class="keyword">true</span>);</div><div class="line"><span class="comment">// 是否使用overview mode加载页面，默认值 false</span></div><div class="line"><span class="comment">// 当页面宽度大于WebView宽度时，缩小使页面宽度等于WebView宽度</span></div><div class="line">settings.setLoadWithOverviewMode(<span class="keyword">true</span>);</div></pre></td></tr></table></figure>
<p>viewport 语法</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span></span></div><div class="line"><span class="tag">      <span class="attr">content</span>=<span class="string">"</span></span></div><div class="line"><span class="tag"><span class="string">          height = [pixel_value | "</span><span class="attr">device-height</span>"] ,</span></div><div class="line"><span class="tag">          <span class="attr">width</span> = <span class="string">[pixel_value</span> | "<span class="attr">device-width</span>"] ,</span></div><div class="line"><span class="tag">          <span class="attr">initial-scale</span> = <span class="string">float_value</span> ,</span></div><div class="line"><span class="tag">          <span class="attr">minimum-scale</span> = <span class="string">float_value</span> ,</span></div><div class="line"><span class="tag">          <span class="attr">maximum-scale</span> = <span class="string">float_value</span> ,</span></div><div class="line"><span class="tag">          <span class="attr">user-scalable</span> = <span class="string">[</span>"<span class="attr">yes</span>" | "<span class="attr">no</span>"]</span></div><div class="line"><span class="tag">          " /&gt;</span></div></pre></td></tr></table></figure>
<p>指定视口宽度精确匹配设备屏幕宽度同时禁用了缩放</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Example<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, user-scalable=no"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div></pre></td></tr></table></figure>
<p>通过WebView设置初始缩放(initial-scale)</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 设置初始缩放百分比</span></div><div class="line"><span class="comment">// 0表示依赖于setUseWideViewPort和setLoadWithOverviewMode</span></div><div class="line"><span class="comment">// 100表示不缩放</span></div><div class="line">web.setInitialScale(<span class="number">0</span>)</div></pre></td></tr></table></figure>
<h2 id="管理-Cookies"><a href="#管理-Cookies" class="headerlink" title="管理 Cookies"></a>管理 Cookies</h2><blockquote>
<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Cookies" target="_blank" rel="external">https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Cookies</a></p>
</blockquote>
<p>Cookie 是服务器发送到用户浏览器并保存在浏览器上的一块数据，它会在浏览器下一次发起请求时被携带并发送到服务器上。<br>可通过Cookie保存浏览信息来获得更轻松的在线体验，比如保持登录状态、记住偏好设置，并提供本地的相关内容。</p>
<p><strong>会话Cookie 与 持久Cookie</strong> </p>
<ul>
<li>会话cookie不需要指定Expires和Max-Age，浏览器关闭之后它会被自动删除。</li>
<li>持久cookie指定了Expires或Max-Age，会被存储到磁盘上，不会因浏览器而失效。</li>
</ul>
<p><strong>第一方Cookie 与 第三方Cookie</strong></p>
<p>每个Cookie都有与之关联的域，与页面域一样的就是第一方Cookie，不一样的就是第三方Cookie。 </p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 设置接收第三方Cookie</span></div><div class="line"><span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.LOLLIPOP) &#123;</div><div class="line">    CookieManager.getInstance().setAcceptThirdPartyCookies(vWeb, <span class="keyword">true</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>读取/写入/移除 Cookie</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 获取指定url关联的所有Cookie</span></div><div class="line"><span class="comment">// 返回值使用"Cookie"请求头格式："name=value; name2=value2; name3=value3"</span></div><div class="line">CookieManager.getInstance().getCookie(url);</div><div class="line"></div><div class="line"><span class="comment">// 为指定的url设置一个Cookie</span></div><div class="line"><span class="comment">// 参数value使用"Set-Cookie"响应头格式，参考：https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Set-Cookie</span></div><div class="line">CookieManager.getInstance().setCookie(url, value);</div><div class="line"></div><div class="line"><span class="comment">// 移除指定url下的指定Cookie</span></div><div class="line">CookieManager.getInstance().setCookie(url, cookieName + <span class="string">"="</span>);</div></pre></td></tr></table></figure>
<p><strong>webkit cookie 工具类</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebkitCookieUtil</span> </span>&#123; </div><div class="line"></div><div class="line">    <span class="comment">// 移除指定url关联的所有cookie</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">(String url)</span> </span>&#123;</div><div class="line">        CookieManager cm = CookieManager.getInstance();</div><div class="line">        <span class="keyword">for</span> (String cookie : cm.getCookie(url).split(<span class="string">"; "</span>)) &#123;</div><div class="line">            cm.setCookie(url, cookie.split(<span class="string">"="</span>)[<span class="number">0</span>] + <span class="string">"="</span>);</div><div class="line">        &#125;</div><div class="line">        flush();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// sessionOnly 为true表示移除所有会话cookie，否则移除所有cookie</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">remove</span><span class="params">(<span class="keyword">boolean</span> sessionOnly)</span> </span>&#123;</div><div class="line">        CookieManager cm = CookieManager.getInstance();</div><div class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.LOLLIPOP) &#123;</div><div class="line">            <span class="keyword">if</span> (sessionOnly) &#123;</div><div class="line">                cm.removeSessionCookies(<span class="keyword">null</span>);</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                cm.removeAllCookies(<span class="keyword">null</span>);</div><div class="line">            &#125;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">if</span> (sessionOnly) &#123;</div><div class="line">                cm.removeSessionCookie();</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                cm.removeAllCookie();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        flush();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="comment">// 写入磁盘</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">flush</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.LOLLIPOP) &#123;</div><div class="line">            CookieManager.getInstance().flush();</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            CookieSyncManager.getInstance().sync();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p><strong>同步系统Cookie 与 Webkit Cookie</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 将系统级Cookie(比如`new URL(...).openConnection()`的Cookie) 同步到 WebView</span></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">WebkitCookieHandler</span> <span class="keyword">extends</span> <span class="title">CookieHandler</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = WebkitCookieHandler.class.getSimpleName();</div><div class="line">    <span class="keyword">private</span> CookieManager wcm;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="title">WebkitCookieHandler</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">this</span>.wcm = CookieManager.getInstance();</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">put</span><span class="params">(URI uri, Map&lt;String, List&lt;String&gt;&gt; headers)</span> <span class="keyword">throws</span> IOException </span>&#123;</div><div class="line">        <span class="keyword">if</span> ((uri == <span class="keyword">null</span>) || (headers == <span class="keyword">null</span>)) &#123;</div><div class="line">            <span class="keyword">return</span>;</div><div class="line">        &#125;</div><div class="line">        String url = uri.toString();</div><div class="line"></div><div class="line">        <span class="keyword">for</span> (String headerKey : headers.keySet()) &#123;</div><div class="line">            <span class="keyword">if</span> ((headerKey == <span class="keyword">null</span>) || !(headerKey.equalsIgnoreCase(<span class="string">"set-cookie2"</span>) || headerKey.equalsIgnoreCase(<span class="string">"set-cookie"</span>))) &#123;</div><div class="line">                <span class="keyword">continue</span>;</div><div class="line">            &#125;</div><div class="line">            <span class="keyword">for</span> (String headerValue : headers.get(headerKey)) &#123;</div><div class="line">                Log.e(TAG, headerKey + <span class="string">": "</span> + headerValue);</div><div class="line">                <span class="keyword">this</span>.wcm.setCookie(url, headerValue);</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="keyword">public</span> Map&lt;String, List&lt;String&gt;&gt; get(URI uri, Map&lt;String, List&lt;String&gt;&gt; headers) <span class="keyword">throws</span> IOException &#123;</div><div class="line">        <span class="keyword">if</span> ((uri == <span class="keyword">null</span>) || (headers == <span class="keyword">null</span>)) &#123;</div><div class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> IllegalArgumentException(<span class="string">"Argument is null"</span>);</div><div class="line">        &#125;</div><div class="line">        String url = uri.toString();</div><div class="line"></div><div class="line">        String cookie = <span class="keyword">this</span>.wcm.getCookie(url);</div><div class="line">        Log.e(TAG, <span class="string">"cookie: "</span> + cookie);</div><div class="line">        <span class="keyword">if</span> (cookie != <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="keyword">return</span> Collections.singletonMap(<span class="string">"Cookie"</span>, Arrays.asList(cookie));</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            <span class="keyword">return</span> Collections.emptyMap();</div><div class="line">        &#125;</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="缓存-Cache"><a href="#缓存-Cache" class="headerlink" title="缓存(Cache)"></a>缓存(Cache)</h2><p>设置缓存模式</p>
<ul>
<li><code>WebSettings.LOAD_DEFAULT</code> 根据cache-control决定是否从网络上取数据</li>
<li><code>WebSettings.LOAD_CACHE_ELSE_NETWORK</code> 无网，离线加载，优先加载缓存(即使已经过期) </li>
<li><code>WebSettings.LOAD_NO_CACHE</code> 仅从网络加载</li>
<li><code>WebSettings.LOAD_CACHE_ONLY</code> 仅从缓存加载</li>
</ul>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 网络正常时根据cache-control决定是否从网络上取数据 </span></div><div class="line"><span class="keyword">if</span> (isNetworkConnected(mActivity)) &#123;</div><div class="line">    settings.setCacheMode(WebSettings.LOAD_DEFAULT); </div><div class="line">&#125; <span class="keyword">else</span> &#123;</div><div class="line">    settings.setCacheMode(WebSettings.LOAD_CACHE_ELSE_NETWORK); </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>清除缓存</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 传入true表示同时内存与磁盘，false表示仅清除内存</span></div><div class="line"><span class="comment">// 由于内核缓存是全局的因此这个方法不仅仅针对webview而是针对整个应用程序</span></div><div class="line">web.clearCache(<span class="keyword">true</span>);</div></pre></td></tr></table></figure>
<h2 id="预加载-Preload"><a href="#预加载-Preload" class="headerlink" title="预加载(Preload)"></a>预加载(Preload)</h2><p>一个简单的预加载示例(shouldInterceptRequest)<br>点击 <code>assets/demo.xml</code> 里的链接”hello”时会加载本地的 <code>assets/hello.html</code></p>
<p>assets/demo.xml</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://demo.com/assets/hello.html"</span>&gt;</span>hello<span class="tag">&lt;/<span class="name">a</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p>assets/hello.html</p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></div><div class="line">hello world!</div><div class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></div></pre></td></tr></table></figure>
<p>重载 shouldInterceptRequest</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> WebResourceResponse <span class="title">shouldInterceptRequest</span><span class="params">(WebView view, String url)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> preload(<span class="string">"assets/"</span>, url);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="function">WebResourceResponse <span class="title">preload</span><span class="params">(String path, String url)</span> </span>&#123; </div><div class="line">    <span class="keyword">if</span> (!url.contains(path)) &#123;</div><div class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line">    String local = url.replaceFirst(<span class="string">"^http.*"</span> + path, <span class="string">""</span>); </div><div class="line">    <span class="keyword">try</span> &#123;</div><div class="line">        InputStream is = getApplicationContext().getAssets().open(local);</div><div class="line">        String ext = MimeTypeMap.getFileExtensionFromUrl(local);</div><div class="line">        String mimeType = MimeTypeMap.getSingleton().getMimeTypeFromExtension(ext);</div><div class="line">        <span class="keyword">return</span> <span class="keyword">new</span> WebResourceResponse(mimeType, <span class="string">"UTF-8"</span>, is);</div><div class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">        e.printStackTrace();</div><div class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">    &#125; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="与Javascript交互"><a href="#与Javascript交互" class="headerlink" title="与Javascript交互"></a>与Javascript交互</h2><p>启用Javascript</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 是否支持Javascript，默认值false</span></div><div class="line">settings.setJavaScriptEnabled(<span class="keyword">true</span>);</div></pre></td></tr></table></figure>
<p>注入对象到Javascript </p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 注入对象'jsobj'，在网页中通过`jsobj.say(...)`调用</span></div><div class="line">web.addJavascriptInterface(<span class="keyword">new</span> JSObject(), <span class="string">"jsobj"</span>)</div></pre></td></tr></table></figure>
<p>在API17后支持白名单，只有添加了<code>@JavascriptInterface</code>注解的方法才会注入JS  </p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JSObject</span> </span>&#123;</div><div class="line">    <span class="meta">@JavascriptInterface</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">say</span><span class="params">(String words)</span> </span>&#123;</div><div class="line">      <span class="comment">// todo</span></div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>移除已注入Javascript的对象</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">web.removeJavascriptInterface(<span class="string">"jsobj"</span>)</div></pre></td></tr></table></figure>
<p>执行JS表达式</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 弹出提示框</span></div><div class="line">web.loadUrl(<span class="string">"javascript:alert('hello')"</span>);</div><div class="line"><span class="comment">// 调用注入的jsobj.say方法</span></div><div class="line">web.loadUrl(<span class="string">"javascript:jsobj.say('hello')"</span>);</div></pre></td></tr></table></figure>
<p>在API19后可异步执行JS表达式，并通过回调返回值</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (Build.VERSION.SDK_INT &gt;= Build.VERSION_CODES.KITKAT) &#123;</div><div class="line">    vWeb.evaluateJavascript(<span class="string">"111+222"</span>, <span class="keyword">new</span> ValueCallback&lt;String&gt;() &#123;</div><div class="line">        <span class="meta">@Override</span></div><div class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceiveValue</span><span class="params">(String value)</span> </span>&#123;</div><div class="line">            <span class="comment">// value =&gt; "333"</span></div><div class="line">        &#125;</div><div class="line">    &#125;);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="地理位置-Geolocation"><a href="#地理位置-Geolocation" class="headerlink" title="地理位置(Geolocation)"></a>地理位置(Geolocation)</h2><blockquote>
<p><a href="https://developer.mozilla.org/zh-CN/docs/Web/API/Geolocation/Using_geolocation" target="_blank" rel="external">https://developer.mozilla.org/zh-CN/docs/Web/API/Geolocation/Using_geolocation</a></p>
</blockquote>
<p>需要以下权限</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.INTERNET"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_FINE_LOCATION"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">uses-permission</span> <span class="attr">android:name</span>=<span class="string">"android.permission.ACCESS_COARSE_LOCATION"</span>/&gt;</span></div></pre></td></tr></table></figure>
<p>默认可用</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">settings.setGeolocationEnabled(<span class="keyword">true</span>);</div></pre></td></tr></table></figure>
<p>当H5调用地理位置API时，会先通过<code>WebChromeClient.onGeolocationPermissionsShowPrompt</code>申请授权</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 指定源的网页内容在没有设置权限状态下尝试使用地理位置API。 </span></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onGeolocationPermissionsShowPrompt</span><span class="params">(String origin, GeolocationPermissions.Callback callback)</span> </span>&#123;</div><div class="line">    <span class="keyword">boolean</span> allow = <span class="keyword">true</span>;   <span class="comment">// 是否允许origin使用定位API</span></div><div class="line">    <span class="keyword">boolean</span> retain = <span class="keyword">false</span>; <span class="comment">// 内核是否记住这次制授权</span></div><div class="line">    callback.invoke(origin, <span class="keyword">true</span>, <span class="keyword">false</span>);</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="comment">// 之前调用 onGeolocationPermissionsShowPrompt() 申请的授权被取消时，隐藏相关的UI。</span></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onGeolocationPermissionsHidePrompt</span><span class="params">()</span> </span>&#123;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>注：从API24开始，仅支持安全源(https)的请求，非安全源的请求将自动拒绝且不调用 onGeolocationPermissionsShowPrompt 与 onGeolocationPermissionsHidePrompt</p>
<h2 id="弹框-alert-confirm-prompt-onbeforeunload"><a href="#弹框-alert-confirm-prompt-onbeforeunload" class="headerlink" title="弹框(alert/confirm/prompt/onbeforeunload)"></a>弹框(alert/confirm/prompt/onbeforeunload)</h2><p>在javascript中使用 alert/confirm/prompt 会弹出对话框，可通过重载 WebChromeClient 的下列方法控制弹框的交互，比如替换系统默认的对话框或屏蔽这些对话框  </p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onJsAlert</span><span class="params">(WebView view, String url, String message, JsResult result)</span> </span>&#123;</div><div class="line">    <span class="comment">// 这里处理交互逻辑</span></div><div class="line">    <span class="comment">// result.cancel(); 表示用户取消了操作(点击了取消按钮)</span></div><div class="line">    <span class="comment">// result.confirm(); 表示用户确认了操作(点击了确认按钮)</span></div><div class="line">    <span class="comment">// ...</span></div><div class="line">    <span class="comment">// 返回true表示自已处理，返回false表示由系统处理</span></div><div class="line">    <span class="keyword">return</span> <span class="keyword">false</span>; </div><div class="line">&#125; </div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onJsConfirm</span><span class="params">(WebView view, String url, String message, JsResult result)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">&#125; </div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onJsPrompt</span><span class="params">(WebView view, String url, String message, String defaultValue, JsPromptResult result)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">onJsBeforeUnload</span><span class="params">(WebView view, String url, String message, JsResult result)</span> </span>&#123;</div><div class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="全屏-Fullscreen"><a href="#全屏-Fullscreen" class="headerlink" title="全屏(Fullscreen)"></a>全屏(Fullscreen)</h2><blockquote>
<p>Fullscreen API<br><a href="https://developer.mozilla.org/zh-CN/docs/DOM/Using_fullscreen_mode" target="_blank" rel="external">https://developer.mozilla.org/zh-CN/docs/DOM/Using_fullscreen_mode</a></p>
</blockquote>
<ul>
<li>当H5请求全屏时，会回调 <code>WebChromeClient.onShowCustomView</code> 方法</li>
<li>当H5退出全屏时，会回调 <code>WebChromeClient.onHideCustomView</code> 方法 </li>
</ul>
<p>1.manifest</p>
<p>自己处理屏幕尺寸方向的变化(切换屏幕方向时不重建activity)<br>WebView播放视频需要开启硬件加速</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">activity</span></span></div><div class="line"><span class="tag">    <span class="attr">android:name</span>=<span class="string">".WebViewActivity"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:configChanges</span>=<span class="string">"orientation|screenSize"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:hardwareAccelerated</span>=<span class="string">"true"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:screenOrientation</span>=<span class="string">"portrait"</span> /&gt;</span></div></pre></td></tr></table></figure>
<p>2.页面布局</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">LinearLayout</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:orientation</span>=<span class="string">"vertical"</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">android.support.v7.widget.Toolbar</span></span></div><div class="line"><span class="tag">        <span class="attr">android:id</span>=<span class="string">"@+id/toolbar"</span></span></div><div class="line"><span class="tag">        <span class="attr">style</span>=<span class="string">"@style/Toolbar.Back"</span>/&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">FrameLayout</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>&gt;</span></div><div class="line"></div><div class="line">        <span class="tag">&lt;<span class="name">WebView</span></span></div><div class="line"><span class="tag">            <span class="attr">android:id</span>=<span class="string">"@+id/web"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">            <span class="attr">android:layout_height</span>=<span class="string">"match_parent"</span>/&gt;</span></div><div class="line"></div><div class="line">        ...</div><div class="line">    <span class="tag">&lt;/<span class="name">FrameLayout</span>&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure>
<p>3.处理全屏回调 </p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div></pre></td><td class="code"><pre><div class="line">CustomViewCallback mCallback;</div><div class="line">View vCustom;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onShowCustomView</span><span class="params">(View view, CustomViewCallback callback)</span> </span>&#123;</div><div class="line">    setFullscreen(<span class="keyword">true</span>);</div><div class="line">    vCustom = view;</div><div class="line">    mCallback = callback;</div><div class="line">    <span class="keyword">if</span> (vCustom != <span class="keyword">null</span>) &#123;</div><div class="line">        ViewGroup parent = (ViewGroup) vWeb.getParent();</div><div class="line">        parent.addView(vCustom);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onHideCustomView</span><span class="params">()</span> </span>&#123;</div><div class="line">    setFullscreen(<span class="keyword">false</span>);</div><div class="line">    <span class="keyword">if</span> (vCustom != <span class="keyword">null</span>) &#123;</div><div class="line">        ViewGroup parent = (ViewGroup) vWeb.getParent();</div><div class="line">        parent.removeView(vCustom);</div><div class="line">        vCustom = <span class="keyword">null</span>;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (mCallback != <span class="keyword">null</span>) &#123;</div><div class="line">        mCallback.onCustomViewHidden();</div><div class="line">        mCallback = <span class="keyword">null</span>;</div><div class="line">    &#125; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>4.设置全屏，切换屏幕方向</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">void</span> <span class="title">setFullscreen</span><span class="params">(<span class="keyword">boolean</span> fullscreen)</span> </span>&#123; </div><div class="line">    <span class="keyword">if</span> (fullscreen) &#123;</div><div class="line">        getWindow().clearFlags(WindowManager.LayoutParams.FLAG_FORCE_NOT_FULLSCREEN);</div><div class="line">        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN, WindowManager.LayoutParams.FLAG_FULLSCREEN);</div><div class="line">        vToolbar.setVisibility(View.GONE);</div><div class="line">        vWeb.setVisibility(View.GONE);</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        getWindow().clearFlags(WindowManager.LayoutParams.FLAG_FULLSCREEN);</div><div class="line">        getWindow().setFlags(WindowManager.LayoutParams.FLAG_FORCE_NOT_FULLSCREEN, WindowManager.LayoutParams.FLAG_FORCE_NOT_FULLSCREEN);</div><div class="line">        vToolbar.setVisibility(View.VISIBLE);</div><div class="line">        vWeb.setVisibility(View.VISIBLE);</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">if</span> (getResources().getConfiguration().orientation == Configuration.ORIENTATION_PORTRAIT) &#123;</div><div class="line">        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_LANDSCAPE);</div><div class="line">    &#125; <span class="keyword">else</span> &#123;</div><div class="line">        setRequestedOrientation(ActivityInfo.SCREEN_ORIENTATION_PORTRAIT);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="内存泄漏"><a href="#内存泄漏" class="headerlink" title="内存泄漏"></a>内存泄漏</h2><p>直接 new WebView 并传入 application context 代替在 XML 里面声明以防止 activity 引用被滥用，能解决90+%的 WebView 内存泄漏。</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">vWeb =  <span class="keyword">new</span> WebView(getContext().getApplicationContext());</div><div class="line">container.addView(vWeb);</div></pre></td></tr></table></figure>
<p>销毁 WebView</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (vWeb != <span class="keyword">null</span>) &#123;</div><div class="line">    vWeb.setWebViewClient(<span class="keyword">null</span>);</div><div class="line">    vWeb.setWebChromeClient(<span class="keyword">null</span>);</div><div class="line">    vWeb.loadDataWithBaseURL(<span class="keyword">null</span>, <span class="string">""</span>, <span class="string">"text/html"</span>, <span class="string">"utf-8"</span>, <span class="keyword">null</span>);</div><div class="line">    vWeb.clearHistory();</div><div class="line"></div><div class="line">    ((ViewGroup) vWeb.getParent()).removeView(vWeb);</div><div class="line">    vWeb.destroy();</div><div class="line">    vWeb = <span class="keyword">null</span>;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p><a href="https://developer.android.com/reference/android/webkit/package-summary.html" target="_blank" rel="external">https://developer.android.com/reference/android/webkit/package-summary.html</a></p>
<p>Fullscreen API 全屏显示网页<br><a href="http://calefy.org/2012/06/03/fullscreen-web-page-width-fullscreen-api.html" target="_blank" rel="external">http://calefy.org/2012/06/03/fullscreen-web-page-width-fullscreen-api.html</a></p>
<p>WebView实现全屏播放的一种方法<br><a href="https://segmentfault.com/a/1190000007561455" target="_blank" rel="external">https://segmentfault.com/a/1190000007561455</a></p>
<p>第一方Cookie和第三方Cookie区别<br><a href="https://www.biaodianfu.com/first-party-cookie-and-third-party-cookie.html" target="_blank" rel="external">https://www.biaodianfu.com/first-party-cookie-and-third-party-cookie.html</a> </p>
<p>Android WebView的Js对象注入漏洞解决方案<br><a href="http://blog.csdn.net/leehong2005/article/details/11808557" target="_blank" rel="external">http://blog.csdn.net/leehong2005/article/details/11808557</a> </p>
<p>Android安全开发之WebView中的地雷<br><a href="http://yaq.qq.com/blog/10" target="_blank" rel="external">http://yaq.qq.com/blog/10</a></p>
<p>Android WebView：性能优化不得不说的事<br><a href="https://juejin.im/entry/57d6434067f3560057e50b20" target="_blank" rel="external">https://juejin.im/entry/57d6434067f3560057e50b20</a></p>
]]></content>
      
        <categories>
            
            <category> 开发 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
            <tag> cookie </tag>
            
            <tag> fullscreen </tag>
            
            <tag> javascript </tag>
            
            <tag> webview </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[公钥证书相关概念]]></title>
      <url>/p/20170421/pki-ca-cert/</url>
      <content type="html"><![CDATA[<h3 id="公钥基础设施-Public-Key-Infrastructure-PKI"><a href="#公钥基础设施-Public-Key-Infrastructure-PKI" class="headerlink" title="公钥基础设施(Public Key Infrastructure, PKI)"></a>公钥基础设施(Public Key Infrastructure, PKI)</h3><p><a href="https://zh.wikipedia.org/wiki/PKI" target="_blank" rel="external">PKI</a>是一组由硬件、软件、参与者、管理政策与流程组成的基础架构，其目的在于创造、管理、分配、使用、存储以及撤销数字证书。</p>
<h3 id="公钥密码学标准-Public-Key-Cryptography-Standards-PKCS"><a href="#公钥密码学标准-Public-Key-Cryptography-Standards-PKCS" class="headerlink" title="公钥密码学标准(Public Key Cryptography Standards, PKCS)"></a>公钥密码学标准(Public Key Cryptography Standards, PKCS)</h3><p><a href="https://zh.wikipedia.org/wiki/公钥密码学标准" target="_blank" rel="external">公钥密码学标准</a> 最初是为推进公钥密码系统的互操作性，由RSA实验室与工业界、学术界和政府代表合作开发的。在RSA带领下，PKCS的研究随着时间不断发展，它涉及了不断发展的PKI格式标准、算法和应用程序接口。PKCS标准提供了基本的数据格式定义和算法定义，它们实际是今天所有PKI实现的基础。</p>
<a id="more"></a>
<p><a href="https://en.wikipedia.org/wiki/PKCS" target="_blank" rel="external">PKCS</a>标准清单：</p>
<ul>
<li>PKCS#1，RSA密码标准(RSA Cryptography Standard)</li>
<li>PKCS#2，撤销，现已被纳入PKCS#1</li>
<li>PKCS#3，DH密钥协商标准(Diffie-Hellman key agreement Standard)</li>
<li>PKCS#4，撤销，现已被纳入PKCS#1</li>
<li>PKCS#5，基于口令的加密标准(Password-based Encryption Standard)</li>
<li>PKCS#6，证书扩展语法标准(Extended-Certificate Syntax Standard)</li>
<li><strong>PKCS#7，密码消息语法标准(Cryptographic Message Syntax Standard)</strong></li>
<li><strong>PCSK#8，私钥信息语法标准(Private-Key Information Syntax Standard)</strong></li>
<li>PCSK#9，选择属性类型标准(Selected Attribute Types)</li>
<li><strong>PKCS#10，证书申请标准(Certification Request Standard)</strong></li>
<li>PKCS#11，密码令牌接口标准(Cryptographic Token Interface Standard)</li>
<li><strong>PKCS#12，个人信息交换标准(Personal Information Exchange Syntax Standard)</strong></li>
<li>PKCS#13，椭圆曲线密码学标准(Elliptic curve cryptography Standard)</li>
<li>PKCS#14，伪随机数产生标准(Pseudo-random Number Generation)</li>
<li>PKCS#15，密码设备消息格式标准(Cryptographic Token Information Format Standard)</li>
</ul>
<h3 id="证书标准-X-509"><a href="#证书标准-X-509" class="headerlink" title="证书标准(X.509)"></a>证书标准(X.509)</h3><p><a href="https://zh.wikipedia.org/wiki/X.509" target="_blank" rel="external">X.509</a>是为公钥基础设施（PKI）与授权管理基础设施（PMI）提出的产业标准，规范了公钥认证、证书吊销列表、授权证书、证书路径验证算法等。</p>
<h3 id="证书认证机构-Certificate-Authority-CA"><a href="#证书认证机构-Certificate-Authority-CA" class="headerlink" title="证书认证机构(Certificate Authority, CA)"></a>证书认证机构(Certificate Authority, CA)</h3><p><a href="https://zh.wikipedia.org/wiki/数字证书认证机构" target="_blank" rel="external">CA</a> 是PKI的核心，是负责签发证书、认证证书、管理已颁发证书的机关。它要制定政策和具体步骤来验证、识别用户身份，并对用户证书进行签名，以确保证书持有者的身份和公钥的拥有权。 </p>
<p>CA 也拥有一个证书（内含公钥）和私钥。网上的公众用户通过验证 CA 的签字从而信任 CA ，任何人都可以得到 CA 的证书（含公钥），用以验证它所签发的证书。 </p>
<h3 id="证书-Certificate"><a href="#证书-Certificate" class="headerlink" title="证书(Certificate)"></a>证书(Certificate)</h3><p>证书是由CA签发的对用户的公钥的认证。</p>
<p>证书的内容包括：电子签证机关的信息、公钥用户信息、公钥、权威机构的签字和有效期等等。目前，证书的格式和验证方法普遍遵循 X.509 国际标准。</p>
<h3 id="证书签名请求-Certificate-Signing-Request-CSR"><a href="#证书签名请求-Certificate-Signing-Request-CSR" class="headerlink" title="证书签名请求(Certificate Signing Request, CSR)"></a>证书签名请求(Certificate Signing Request, CSR)</h3><p><a href="https://www.sslshopper.com/what-is-a-csr-certificate-signing-request.html" target="_blank" rel="external">CSR</a>是向证书认证机构（CA）请求签署一份证书的正式请求，它包含了请求证书的<strong>实体的公钥和信息</strong>。这些数据都将会成为证书的一部分。一个CSR总是用它所携带的公钥所对应私钥进行加密。</p>
<h3 id="证书废除列表-Certificate-Revocation-List-CRL"><a href="#证书废除列表-Certificate-Revocation-List-CRL" class="headerlink" title="证书废除列表 (Certificate Revocation List, CRL)"></a>证书废除列表 (Certificate Revocation List, CRL)</h3><p>由于实体名称的改变、私钥泄漏或业务中止等原因，需要存在一种方法将现行的证书撤消，即撤消公开密钥及相关的实体身份信息的绑定关系。在PKI中，所使用的这种方法为证书废除列表。</p>
<h3 id="证书格式-PEM-DER"><a href="#证书格式-PEM-DER" class="headerlink" title="证书格式(PEM/DER)"></a>证书格式(PEM/DER)</h3><p>X.509标准中定义了<code>PEM/DER</code>两种格式，用于密钥和证书等信息。</p>
<ul>
<li><p><strong>DER(Distinguished Encoding Rules)</strong><br>二进制格式，使用ASN.1编码。</p>
</li>
<li><p><strong>PEM(Privacy Enhanced Mail)</strong><br>文本格式，内容是DER再进行Base64编码后得到，并在开头和结尾加入标识 </p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">-----BEGIN type-----</div><div class="line">BASE64 ENCODED DATA</div><div class="line">-----END type-----</div></pre></td></tr></table></figure>
</li>
</ul>
<h3 id="证书文件扩展名"><a href="#证书文件扩展名" class="headerlink" title="证书文件扩展名"></a>证书文件扩展名</h3><ul>
<li><strong>CER/CRT</strong> X.509证书，CRT常见于*nix系统，CER常见于windows系统。 </li>
<li><strong>KEY</strong> PCSK#8，通常用来存放私钥。</li>
<li><strong>CSR/P10</strong> PKCS#10，证书签名请求，包含公钥和用户信息。 </li>
<li><strong>P7R</strong> PKCS#7，CA对证书请求的回复，只用于导入。</li>
<li><strong>SPC/P7B/P7C</strong> PKCS#7，通常包含一个或多个证书，证书废除列表(极少)，不含私钥。 </li>
<li><strong>PFX/P12</strong> PKCS#12，包含公钥证书和私钥(可使用密码保护)，也可以包含整个证书链。 </li>
<li><strong>JKS(Java Key Store)</strong> Java的密钥仓库，包括公钥证书和私钥等。通过Java工具<code>keytool</code>可以将JKS与P12互相转化。</li>
</ul>
<h3 id="获得证书"><a href="#获得证书" class="headerlink" title="获得证书"></a>获得证书</h3><p><strong>向权威证书颁发机构申请证书</strong></p>
<p>生成一个csr</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openssl req -newkey rsa:2048 -new -nodes -keyout my.key -out my.csr</div></pre></td></tr></table></figure>
<p>把csr交给CA，CA对此进行签名。当证书过期时，你还可以用同样的csr来申请新的证书。</p>
<p><strong>生成自签名的证书</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">openssl req -newkey rsa:2048 -new -nodes -x509 -days 3650 -keyout key.pem -out cert.pem</div></pre></td></tr></table></figure>
<p>生成证书时会需要填各种信息(CommonName为必填，通常填写你服务器的域名，其它可以留空)。    </p>
<h3 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h3><p>证书文件格式在线转换工具<br><a href="https://www.sslshopper.com/ssl-converter.html" target="_blank" rel="external">https://www.sslshopper.com/ssl-converter.html</a>  </p>
<p>公钥密码标准（PKCS）<br><a href="http://blog.sina.com.cn/s/blog_5420e00001015lrz.html" target="_blank" rel="external">http://blog.sina.com.cn/s/blog_5420e00001015lrz.html</a></p>
<p>证书，密钥，加密，rsa到底是啥？<br><a href="https://blog.phpgao.com/encryption_decryption.html" target="_blank" rel="external">https://blog.phpgao.com/encryption_decryption.html</a></p>
<p>“BEGIN RSA PRIVATE KEY”与”BEGIN PRIVATE KEY”的区别<br><a href="http://stackoverflow.com/questions/20065304/what-is-the-differences-between-begin-rsa-private-key-and-begin-private-key" target="_blank" rel="external">http://stackoverflow.com/questions/20065304/what-is-the-differences-between-begin-rsa-private-key-and-begin-private-key</a></p>
<p>Converting OpenSSH public keys<br><a href="http://blog.oddbit.com/2011/05/08/converting-openssh-public-keys/" target="_blank" rel="external">http://blog.oddbit.com/2011/05/08/converting-openssh-public-keys/</a></p>
<p><a href="https://security.stackexchange.com/questions/73156/whats-the-difference-between-x-509-and-pkcs7-certificate" target="_blank" rel="external">https://security.stackexchange.com/questions/73156/whats-the-difference-between-x-509-and-pkcs7-certificate</a><br><a href="http://en.wikipedia.org/wiki/X.509#Certificate_filename_extensions" target="_blank" rel="external">http://en.wikipedia.org/wiki/X.509#Certificate_filename_extensions</a><br><a href="http://forum.rebex.net/5832/how-to-load-certificates-pem-spc-pvk-net" target="_blank" rel="external">http://forum.rebex.net/5832/how-to-load-certificates-pem-spc-pvk-net</a>    </p>
]]></content>
      
        <categories>
            
            <category> 基础知识 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 证书 </tag>
            
            <tag> CA </tag>
            
            <tag> CSR </tag>
            
            <tag> DER </tag>
            
            <tag> PEM </tag>
            
            <tag> PKCS </tag>
            
            <tag> PKI </tag>
            
            <tag> X.509 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[SSL与TLS]]></title>
      <url>/p/20170421/ssl-tls/</url>
      <content type="html"><![CDATA[<p>参考：<a href="https://segmentfault.com/a/1190000002554673" target="_blank" rel="external">SSL/TLS原理详解</a></p>
<h3 id="安全套接字层-Secure-Socket-Layer-SSL"><a href="#安全套接字层-Secure-Socket-Layer-SSL" class="headerlink" title="安全套接字层(Secure Socket Layer, SSL)"></a>安全套接字层(Secure Socket Layer, SSL)</h3><p>为Netscape所研发，用以保障在Internet上数据传输之安全，利用数据加密(Encryption)技术，可确保数据在网络上之传输过程中不会被截取。当前版本为3.0。它已被广泛地用于Web浏览器与服务器之间的身份认证和加密数据传输。</p>
<p>SSL协议位于TCP/IP协议与各种应用层协议之间，为数据通讯提供安全支持。</p>
<p>SSL协议可分为两层： </p>
<ul>
<li>SSL记录协议(SSL Record Protocol)，它建立在可靠的传输协议（如TCP）之上，为高层协议提供数据封装、压缩、加密等基本功能的支持。 </li>
<li>SSL握手协议(SSL Handshake Protocol)，它建立在SSL记录协议之上，用于在实际的数据传输开始前，通讯双方进行身份认证、协商加密算法、交换加密密钥等。</li>
</ul>
<h3 id="传输层安全协议-Transport-Layer-Security-TLS"><a href="#传输层安全协议-Transport-Layer-Security-TLS" class="headerlink" title="传输层安全协议(Transport Layer Security, TLS)"></a>传输层安全协议(Transport Layer Security, TLS)</h3><p>用于两个应用程序之间提供保密性和数据完整性。</p>
<p>TLS 1.0是IETF（Internet Engineering Task Force，Internet工程任务组）制定的一种新的协议，它建立在SSL 3.0协议规范之上，是SSL 3.0的后续版本，可以理解为SSL 3.1，它是写入了 <a href="http://tools.ietf.org/html/rfc5246" target="_blank" rel="external">RFC5246</a> 的。</p>
<p>该协议由两层组成： TLS 记录协议（TLS Record）和 TLS 握手协议（TLS Handshake）。较低的层为 TLS 记录协议，位于某个可靠的传输协议（例如 TCP）上面。</p>
<h3 id="OpenSSL"><a href="#OpenSSL" class="headerlink" title="OpenSSL"></a>OpenSSL</h3><p><a href="https://zh.wikipedia.org/wiki/OpenSSL" target="_blank" rel="external">OpenSSL</a>是一个开放源代码的软件库包，实现了SSL与TLS协议。</p>
<p>应用程序可以使用这个包来进行安全通信，避免窃听，同时确认另一端连接者的身份。这个包广泛被应用在互联网的网页服务器上。</p>
<p>分支：<a href="https://zh.wikipedia.org/wiki/LibreSSL" target="_blank" rel="external">LibreSSL</a></p>
]]></content>
      
        <categories>
            
            <category> 基础知识 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> openssl </tag>
            
            <tag> ssl </tag>
            
            <tag> tls </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[编码|摘要|加密]]></title>
      <url>/p/20170420/encoding-digest-encryption/</url>
      <content type="html"><![CDATA[<h2 id="编码-encoding"><a href="#编码-encoding" class="headerlink" title="编码(encoding)"></a>编码(encoding)</h2><p>编码本质上是信息形式的转化。</p>
<p>通过解码可以还原原始信息。</p>
<p>编码的目的是将消息转化成统一的格式，方便在不同系统之中传输。</p>
<blockquote>
<p>例如最常见的ASCII字符编码。由于网络上只能传输二进制数据，任何数据如果想要经由网络传输，就必须先转化成二进制，ASCII 提供了一个将A、B、C等字母转化为二进制的规则。  </p>
</blockquote>
<p>例子：ASCII, Unicode, URL Encoding, Base64</p>
<h2 id="摘要-digest"><a href="#摘要-digest" class="headerlink" title="摘要(digest)"></a>摘要(digest)</h2><p>摘要是通过散列函数对信息运算生成的固定大小的数字“指纹”。</p>
<p>相同信息使用同一散列函数生成的摘要总是相同，信息修改后生成的摘要总是与之前不同。</p>
<p>摘要信息不能被还原成原始信息。</p>
<p>摘要的目的是为了校验信息的完整性，保证信息在传输过程中不被篡改。</p>
<blockquote>
<p>例如你在网络上需要下载一个非官方论坛软件，但又担心软件被第三方篡改，可以将该软件的md5值和官方下载的md5值进行对比，如果一致，则可放心使用。 </p>
</blockquote>
<p>例子：MD5, SHA, MAC</p>
<h2 id="加密-encryption"><a href="#加密-encryption" class="headerlink" title="加密(encryption)"></a>加密(encryption)</h2><p>加密是将明文信息改变为难以读取的密文内容，使之不可读。</p>
<p>加密信息能通过密钥被还原为原始信息。 </p>
<p>加密是为了保证信息安全，使得没有正确密钥的人不能获取信息内容。 </p>
<blockquote>
<p>例如你想给某人发送一封密信，或通过互联网给人发送密码，这些对隐秘性要求比较强的事情，就需要对信息进行加密。</p>
</blockquote>
<p>例子：DES, AES, Blowfish, RSA</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>编码、摘要、加密的区别<br><a href="http://goldenera.me/2017/02/16/编码、摘要、加密的区别/" target="_blank" rel="external">http://goldenera.me/2017/02/16/编码、摘要、加密的区别/</a></p>
]]></content>
      
        <categories>
            
            <category> 基础知识 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 加密 </tag>
            
            <tag> 编码 </tag>
            
            <tag> 摘要 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【转载】安全体系—加解密算法、消息摘要、消息认证技术、数字签名与公钥证书]]></title>
      <url>/p/20170417/security-encryption-digest-mac-signature-certificate/</url>
      <content type="html"><![CDATA[<blockquote>
<p>转载自：<a href="http://www.cnblogs.com/songwenlong/p/6517165.html" target="_blank" rel="external">http://www.cnblogs.com/songwenlong/p/6517165.html</a></p>
</blockquote>
<h2 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h2><p>当发送方A向接收方B发送数据时，需要考虑的问题有：</p>
<ol>
<li>数据的<strong>安全性</strong>。</li>
<li>数据的<strong>完整性</strong>，即数据不被篡改。</li>
<li>数据的<strong>真实性</strong>，即数据确实来自于发送方，传输过程中没有被替换。</li>
<li>数据的<strong>不可否认性</strong>，即验证发送方确实发送了数据。</li>
</ol>
<p>本文只是对整套体系做一个整体的介绍，后续文章详细讲解各个步骤和算法。</p>
<p>本文的整体结构见下图。</p>
<p><img src="http://ocrfm2xav.bkt.clouddn.com/17-4-17/37315103-file_1492429024497_1202e.png" alt="整体结构"></p>
<a id="more"></a>
<p>基本概念： </p>
<ul>
<li>密码：按特定法则编成，用以对通信双方的信息进行明密变换的符号。</li>
<li>密钥：在现代密码学中，秘钥指的是一组特定的秘密数据，在加密时，它控制密码算法按照指定的方式将明文变换为相应的密文，并将一组信源标识信息变换不可伪造的签名；在解密时，它控制密码算法按照指定的方式将密文变换为相应的明文，并将签名信息变换成不可否认的信源证据。</li>
</ul>
<h2 id="数据传输的安全"><a href="#数据传输的安全" class="headerlink" title="数据传输的安全"></a>数据传输的安全</h2><p>保证数据传输安全的方法就是对数据进行加密了，常用的加密算法有对称加密和非对称加密。</p>
<h3 id="对称加密"><a href="#对称加密" class="headerlink" title="对称加密"></a>对称加密</h3><p>又称共享加密，加解密使用相同的密钥。</p>
<p>常见算法：DES, 3DES, AES, RC5, RC6</p>
<p>例：</p>
<ol>
<li>为了安全，A将数据加密发送给B。</li>
<li>密文即使在传送过程中被截获，因为不知道密钥也无法解密。</li>
<li>B接收到密文之后，需要使用加密相同的密钥来解密。</li>
<li>需要A将密钥传给B，但保证密钥传输过程中的安全又成了问题。</li>
</ol>
<p>优点：计算速度快。</p>
<p>缺点：为了传送数据的安全，将数据加密后进行传输，但是对称加密需要发送方将密钥安全地传给接收方以便接收方解密，因此密钥如何安全传送又成了一个问题。</p>
<p>问题：如何保证密钥的安全性？</p>
<h3 id="非对称加密"><a href="#非对称加密" class="headerlink" title="非对称加密"></a>非对称加密</h3><p>也称公钥加密，这套密钥算法包含配套的密钥对，分为加密密钥和解密密钥。加密密钥时公开的，又称为公钥；解密密钥时私有的，又称为私钥。数据发送者使用公钥加密数据，数据接收者使用私钥进行数据解密。</p>
<p>常见算法：RSA</p>
<p>例：</p>
<ol>
<li>B生成密钥对，将公钥传给A，私钥自己保留。公钥即使被其他人获得也没有关系。</li>
<li>A用B传过来的密钥将要发送的明文数据加密，然后将密文发送给A。其他人即使获得密文也无法解密，因为没有配对的用来解密的私钥。</li>
<li>B接收到A传送过来的密文，用自己保留的私钥对密文解密，得到明文。</li>
</ol>
<p>优点：解决了密钥的安全性问题。</p>
<p>缺点：一是计算速度慢；二是无法保证公钥的合法性，因为接收到的公钥不能保证是B发送的，比如，攻击者截获B的消息，将公钥替换。</p>
<p>问题：如何保证公钥是合法的？</p>
<h2 id="保证数据完整性"><a href="#保证数据完整性" class="headerlink" title="保证数据完整性"></a>保证数据完整性</h2><p>消息摘要，消息摘要函数时一种用于判断数据完整性的算法，也称为散列函数或哈希函数，函数的返回值就散列值，散列值又称为消息摘要或者指纹。</p>
<p>这种算法是不可逆的，即无法通过消息摘要反向推导出消息，因此又称为单向散列函数。</p>
<p>常见算法：MD5, SHA</p>
<p>例：当我们使用某一软件时，下载完成后需要确认是否是官方提供的完整版，是否被人篡改过。通常软件提供方会提供软件的散列值，用户下载软件之后，在本地使用相同的散列算法计算散列值，并与官方提供的散列值向对比。如果相同，说明软件完整，未被修改过。</p>
<p>优点：可以保证数据的完整性。</p>
<p>缺点：无法保证数据的真实性，即不能确定数据和散列值是来自发送方的，因为攻击者完全可以将数据和散列值一起替换。</p>
<p>问题：如何验证发送的数据确实来自于发送方？</p>
<h2 id="保证数据的真实性"><a href="#保证数据的真实性" class="headerlink" title="保证数据的真实性"></a>保证数据的真实性</h2><p>　　<br>要保证数据来自发送方，即确认消息来自正确的发送者，称为消息认证。</p>
<h3 id="消息认证码"><a href="#消息认证码" class="headerlink" title="消息认证码"></a>消息认证码</h3><p>消息认证码（Message Authentication Code, MAC）是一种可以确认消息完整性并进行认证的技术。消息认证码可以简单理解为一种与密钥相关的单向散列函数。</p>
<p>例：</p>
<ol>
<li>A把消息发送给B前，先把共享密钥发送给B。</li>
<li>A把要发送的消息使用共享密钥计算出MAC值，然后将消息和MAC发送给B。</li>
<li>B接收到消息和MAC值后，使用共享密钥计算出MAC值，与接收到的MAC值对比。</li>
<li>如果MAC值相同，说明接收到的消息是完整的，而且是A发送的。</li>
</ol>
<p>这里还是存在对称加密的密钥配送问题，可以使用公钥加密方式解决。</p>
<p>优点：可以保证数据的完整性和真实性。</p>
<p>缺点：接收方虽然可以确定消息的完整性和真实性，解决篡改和伪造消息的问题，但不能防止A否认发送过消息。</p>
<p>例：加入A给B发送了消息，B接收到之后，A否认自己发送过消息给B，并抵赖说，“虽然我和B都能计算处正确的MAC值，但是可能是B的密钥被攻击者盗取了，攻击者给B发的消息。”</p>
<p>问题：如何让发送方无法否认发送过数据？</p>
<h3 id="数字签名"><a href="#数字签名" class="headerlink" title="数字签名"></a>数字签名</h3><p>数字签名（Digital Signature）可以解决发送方否认发送过消息的问题。</p>
<p>数字签名的重点在于发送方和接收方使用不同的密钥来进行验证，并且保证发送方密钥的唯一性，将公钥算法反过来使用可以达到此目的：A发送消息前，使用私钥对消息进行签名，B接收到消息后，使用配对的公钥对签名进行验证；如果验证通过，说明消息就是A发送的，因为只有A采用配对的私钥；第三方机构也是依据此来进行裁决，保证公正性。</p>
<p>例：</p>
<ol>
<li>A把消息用哈希函数处理生成消息摘要，并报摘要用私钥进行加密生成签名，把签名和消息一起发送给B。</li>
<li>数据经过网络传送给B，当然，为了安全，可以用上述的加密方法对数据进行加密。</li>
<li>B接收到数据后，提取出消息和签名进行验签。采用相同的哈希函数生成消息摘要，将其与接收的签名用配对的公钥解密的结果对比，如果相同，说明签名验证成功。消息是A发送的，如果验证失败，说明消息不是A发送的。</li>
</ol>
<p>问题：依然是，如何确保公钥的合法性？</p>
<h2 id="公钥证书"><a href="#公钥证书" class="headerlink" title="公钥证书"></a>公钥证书</h2><p>我们看到，上面的公钥加密，数字签名的问题都在于如何保证公钥的合法性。</p>
<p>解决办法是将公钥交给一个第三方权威机构——认证机构（Certification Authority）CA来管理。接收方将自己的公钥注册到CA，由CA提供数字签名生成公钥证书（Public-Key Certificate）PKC，简称证书。证书中有CA的签名，接收方可以通过验签来验证公钥的合法性。</p>
<p>例：</p>
<ol>
<li>接收方B生成密钥对，私钥自己保存，将公钥注册到CA。</li>
<li>CA通过一系列严格的检查确认公钥是B本人的。</li>
<li>CA生成自己的密钥对，并用私钥对B的公钥进行数字签名，生成数字证书。证书中包含B的公钥和CA的签名。这里进行签名并不是要保证B的公钥的安全性，而是要确定公钥确实属于B。</li>
<li>发送方A从CA获取B的证书。</li>
<li>A使用CA的公钥对从CA获取的证书进行验签，如果成功就可以确保证书中的公钥确实来自B。</li>
<li>A使用证书中B的公钥对消息进行加密，然后发送给B。</li>
<li>B接收到密文后，用自己的配对的私钥进行解密，获得消息明文。</li>
</ol>
]]></content>
      
        <categories>
            
            <category> 基础知识 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 安全 </tag>
            
            <tag> 证书 </tag>
            
            <tag> 转载 </tag>
            
            <tag> 加密 </tag>
            
            <tag> 解密 </tag>
            
            <tag> 数据签名 </tag>
            
            <tag> 数字摘要 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【转载】PKI体系（公钥基础设施）]]></title>
      <url>/p/20170415/pki-public-key-infrastructure/</url>
      <content type="html"><![CDATA[<blockquote>
<p>转载自：<a href="http://blog.sina.com.cn/s/blog_afd4c4ef0102w20n.html" target="_blank" rel="external">http://blog.sina.com.cn/s/blog_afd4c4ef0102w20n.html</a></p>
</blockquote>
<h2 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h2><h3 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h3><p>公钥基础设施PKI（Public Key Infrastructure），是一种遵循既定标准的密钥管理平台，它能够为所有网络应用提供加密和数字签名等密码服务及所必需的密钥和证书管理体系，简单来说，PKI就是利用公钥理论和技术建立的提供安全服务的基础设施。PKI技术是信息安全技术的核心，也是电子商务的关键和基础技术。</p>
<h3 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h3><p>PKI技术能够为网络通信和网络交易，特别是电子政务和电子商务业务，透明地提供一整套安全服务，主要包括身份认证、保密、数据完整性和不可否认性。<br>作为一种基础设施，PKI的应用范围非常广泛，并且在不断发展之中，下面给出几个常见的应用场景。</p>
<ul>
<li><strong>虚拟专用网络VPN（Virtual Private Network）</strong><br>VPN是一种构建在公用通信基础设施上的专用数据通信网络，利用网络层安全协议（如IPSec）和建立在PKI上的加密与数字签名技术来获得机密性保护。</li>
<li><strong>安全电子邮件</strong><br>电子邮件的安全也要求机密、完整、认证和不可否认，而这些都可以利用PKI技术来实现。目前发展很快的安全/多用途Internet邮件扩充协议S/MIME(Secure/Multipurpose Internet Mail Extensions)，是一个允许发送加密和有签名邮件的协议，该协议的实现需要依赖于PKI技术。</li>
<li><strong>Web安全</strong><br>为了透明地解决Web的安全问题，在两个实体进行通信之前，先要建立SSL（Secure Sockets Layer，安全套接层）连接，以此实现对应用层透明的安全通信。利用PKI技术，SSL协议允许在浏览器和服务器之间进行加密通信。此外，服务器端和浏览器端通信时双方可以通过数字证书确认对方的身份。</li>
</ul>
<a id="more"></a>
<h3 id="受益"><a href="#受益" class="headerlink" title="受益"></a>受益</h3><p><strong>用户受益</strong></p>
<p>通过PKI证书认证技术，用户可以验证接入设备的合法性，从而可以保证用户接入安全、合法的网络中。<br>通过PKI加密技术，可以保证网络中传输的数据的安全性，数据不会被篡改和窥探。<br>通过PKI签名技术，可以保证数据的私密性，未授权的设备和用户无法查看该数据。</p>
<p><strong>企业受益</strong></p>
<p>企业可以防止非法用户接入企业网络中。<br>企业分支之间可以建立安全通道，保证企业数据的安全性。</p>
<h2 id="PKI基本概念"><a href="#PKI基本概念" class="headerlink" title="PKI基本概念"></a>PKI基本概念</h2><h3 id="公钥加密算法"><a href="#公钥加密算法" class="headerlink" title="公钥加密算法"></a>公钥加密算法</h3><p>公钥加密算法，又叫非对称加密算法或双钥加密算法，是指加密密钥和解密密钥为两个不同密钥的密码算法。</p>
<p>公钥加密算法使用了一对密钥：一个用于加密信息，另一个则用于解密信息，其中加密密钥公之于众，称为公钥；解密密钥由解密人私密保存，称为私钥。用其中任一个密钥加密的信息只能用另一个密钥进行解密。</p>
<h3 id="RSA密钥对"><a href="#RSA密钥对" class="headerlink" title="RSA密钥对"></a>RSA密钥对</h3><p>数字证书机制依赖于公共密钥体制，PKI系统中应用最广泛的公共密钥体制为RSA加密系统。</p>
<p>RSA加密系统使用一个非对称的RSA密钥对，包括一个RSA公钥和一个RSA私钥。当实体申请数字证书时，证书请求中必须包含RSA公钥信息。</p>
<p>RSA密钥对的模数，即RSA密钥的长度（单位bit）。模数越大，密钥越安全，同时设备生成密钥、加密、解密花费的时间也越长。</p>
<h3 id="数字指纹"><a href="#数字指纹" class="headerlink" title="数字指纹"></a>数字指纹</h3><p>数字指纹是指通过某种算法对数据信息进行综合计算得到的一个固定长度的数字序列，这个序列有时也称信息摘要，常采用单向哈希算法对原始数据进行散列计算得出数字指纹。</p>
<h3 id="数字签名"><a href="#数字签名" class="headerlink" title="数字签名"></a>数字签名</h3><p>数字签名是指信息发送方用自己的私钥对原始数据的数字指纹进行加密后所得的数据。</p>
<p>信息接收者使用信息发送者的公钥对附在原始信息后的数字签名进行解密后，获得数字指纹，然后与自己用同样算法对原始数据计算生成的数据指纹进行匹配，根据匹配结果，便可确定原始信息是否被篡改。</p>
<h3 id="数字证书"><a href="#数字证书" class="headerlink" title="数字证书"></a>数字证书</h3><p>数字证书是一个经认证机构CA（Certificate Authority）签名的，包含实体公开密钥及相关身份信息的文件，它建立了实体身份信息与其公钥的关联，是使用PKI系统的用户建立安全通信的信任基础。CA对数字证书的签名保证了证书的合法性和权威性。</p>
<p>数字证书中包含多个字段，包括证书签发者的名称、主体的公钥信息、CA对证书的数字签名、证书的有效期等。</p>
<p><strong>本地（local）证书和CA（Certificate Authority）证书</strong></p>
<p>本地证书是CA签发给实体的数字证书；CA证书是CA自身的证书。若PKI系统中存在多个CA，则会形成一个CA层次结构，最上层的CA是根CA，它拥有一个CA“自签名”的证书。</p>
<p><strong>证书废除列表CRL</strong></p>
<p>由于实体名称的改变、私钥泄漏或业务中止等原因，需要存在一种方法将现行的证书撤消，即撤消公开密钥及相关的实体身份信息的绑定关系。在PKI中，所使用的这种方法为证书废除列表CRL（Certificate Revocation List）。</p>
<p>任何一个证书被废除以后，CA就要发布CRL来声明该证书是无效的，并列出所有被废除的证书的序列号。CRL提供了一种检验证书有效性的方式。</p>
<p>当一个CRL的撤消信息过多时会导致CRL的发布规模变得非常庞大，且随着CRL大小的增加，网络资源的使用性能也会随之下降。为了避免这种情况，允许一个CA的撤消信息通过多个CRL发布出来，并且使用CRL发布点CDP（CRL Distribution Point）来指出这些CRL的位置。</p>
<p><strong>CRL发布点</strong></p>
<p>CRL发布点CDP，是数字证书中的信息，它描述了如何获取证书的CRL列表。<br>最常用的CDP是HTTP URL和LDAP URL，也可以是其他类型的URL或LDAP目录说明。<br>一个CDP包含一个URL或目录说明。</p>
<h2 id="PKI体系架构"><a href="#PKI体系架构" class="headerlink" title="PKI体系架构"></a>PKI体系架构</h2><h3 id="PKI架构"><a href="#PKI架构" class="headerlink" title="PKI架构"></a>PKI架构</h3><p><img src="http://ocrfm2xav.bkt.clouddn.com/17-4-15/33988542-file_1492239813030_17662.png" alt="图1 PKI体系架构"></p>
<p>如图1所示，一个PKI体系由终端实体、认证机构、注册机构和证书/CRL存储库四部分共同组成。 </p>
<ul>
<li><strong>终端实体</strong><br>终端实体是PKI产品或服务的最终使用者，可以是个人、组织、设备（如路由器、交换机）或计算机中运行的进程。</li>
<li><strong>认证机构CA（Certificate Authority）</strong><br>CA是PKI的信任基础，是一个用于签发并管理数字证书的可信实体。其作用包括：发放证书、规定证书的有效期和通过发布CRL确保必要时可以废除证书。</li>
<li><strong>注册机构RA（Registration Authority）</strong><br>RA是CA的延伸，可作为CA的一部分，也可以独立。RA功能包括个人身份审核、CRL管理、密钥对产生和密钥对备份等。PKI国际标准推荐由一个独立的RA来完成注册管理的任务，这样可以增强应用系统的安全性。</li>
<li><strong>证书/CRL存储库</strong><br>证书/CRL存储库负责证书和CRL的存储、管理、查询等。</li>
</ul>
<h3 id="认证机构"><a href="#认证机构" class="headerlink" title="认证机构"></a>认证机构</h3><p><strong>认证机构层次</strong></p>
<p>认证机构是PKI体系的核心，通常采用多层次的分级结构，根据证书颁发机构的层次，可以划分为根CA和从属CA。上级认证机构负责签发和管理下级认证机构的证书，最下一级的认证机构直接面向用户。每一份数字证书都与上一级的数字签名证书相关联，最终通过证书链追溯到一个根认证机构，根CA通常持有一个自签名证书。</p>
<ul>
<li>根CA是公钥体系中第一个证书颁发机构，它是信任的起源。根CA可以为其它CA颁发证书，也可以为其它计算机、用户、服务颁发证书。对大多数基于证书的应用程序来说，使用证书的认证都可以通过证书链追溯到根。</li>
<li>从属CA必须从根CA或者从一个已由根CA授权可颁发从属CA证书的从属CA处获取证书。</li>
</ul>
<p>在建立CA时，从属CA要通过上级CA获得自己的CA证书，而根CA则是创建自签名的证书。</p>
<p><strong>认证机构类型</strong></p>
<p>认证机构CA的类型包括以下三种：</p>
<ul>
<li>自签名CA：在自签名CA中，证书中的公钥和用于验证证书签名的公钥是相同的。</li>
<li>从属CA：在从属CA中，证书中的公钥和用于验证证书签名的公钥是不同的。</li>
<li>根CA：根CA是一种特殊的CA，它受到客户无条件地信任，位于证书层次结构的最高层。所有证书链均终止于根CA。根CA必须对它自己的证书签名，因为在证书层次结构中再也没有更高的认证机构。</li>
</ul>
<p><strong>认证机构功能</strong></p>
<p>CA的核心功能就是发放和管理数字证书，包括：证书的颁发、证书的更新、证书的撤销、证书的查询、证书的归档、CRL的发布等。具体描述如下：</p>
<ul>
<li>证书申请处理：接收、验证用户数字证书的申请。</li>
<li>证书审批处理：确定是否接受用户数字证书的申请。</li>
<li>证书颁发处理：向申请者颁发或拒绝颁发数字证书。</li>
<li>证书更新处理：接收、处理用户的数字证书更新请求。</li>
<li>证书查询和撤销处理：接收用户数字证书的查询、撤销。</li>
<li>发布CRL：产生和发布证书废除列表（CRL）。</li>
<li>证书的归档：数字证书的归档。</li>
<li>密钥的备份和恢复。</li>
<li>历史数据归档。</li>
</ul>
<h3 id="注册机构"><a href="#注册机构" class="headerlink" title="注册机构"></a>注册机构</h3><p>RA是数字证书注册审批机构，RA是CA面对用户的窗口，是CA的证书发放、管理功能的延伸，它负责接受用户的证书注册和撤销申请，对用户的身份信息进行审查，并决定是否向CA提交签发或撤销数字证书的申请。<br>RA作为CA功能的一部分，实际应用中，通常RA并不一定独立存在，而是和CA合并在一起。RA也可以独立出来，分担CA的一部分功能，减轻CA的压力，增强CA系统的安全性。</p>
<h2 id="PKI工作机制"><a href="#PKI工作机制" class="headerlink" title="PKI工作机制"></a>PKI工作机制</h2><h3 id="工作过程"><a href="#工作过程" class="headerlink" title="工作过程"></a>工作过程</h3><p>针对一个使用PKI的网络，配置PKI的目的就是为指定的实体向CA申请一个本地证书，并由设备对证书的有效性进行验证。PKI的工作过程如下：</p>
<ol>
<li>实体向注册机构RA提出证书申请。</li>
<li>RA审核实体身份，将实体身份信息和公开密钥以数字签名的方式发送给CA。</li>
<li>CA验证数字签名，同意实体的申请，颁发证书。</li>
<li>RA接收CA返回的证书，通知实体证书发行成功。</li>
<li>实体获取证书，利用该证书可以与其它实体使用加密、数字签名进行安全通信。</li>
<li>实体希望撤消自己的证书时，向CA提交申请。CA批准实体撤消证书，并更新CRL。</li>
</ol>
<h3 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h3><p>PKI的目标就是要充分利用公钥密码学的理论基础，建立起一种普遍适用的基础设施，为各种网络应用提供全面的安全服务。</p>
<p>对于公钥加密算法，由于公钥是公开的，需要在网上传送，故公钥的管理问题就是公钥加密体制所需要解决的关键问题。目前，PKI系统中引出的数字证书机制就是一个很好的解决方案。PKI的核心技术就围绕着数字证书的申请、颁发、使用与撤销等整个生命周期进行展开。</p>
<h3 id="证书注册"><a href="#证书注册" class="headerlink" title="证书注册"></a>证书注册</h3><p>证书注册即证书申请，就是一个实体向CA自我介绍并获取数字证书的过程。实体向CA提供身份信息，以及相应的公钥，这些信息将成为颁发给该实体证书的主要组成部分。</p>
<p>实体向CA提出证书申请，有离线和在线两种方式。离线申请方式下，CA允许申请者通过带外方式（如电话、磁盘、电子邮件等）向CA提供申请信息。在线证书申请有手工发起和自动发起两种方式。以下是常用的证书注册方式：</p>
<ul>
<li><strong>PKCS#10方式（离线注册方式）</strong><br>当无法通过SCEP协议向CA在线申请证书时，可以使用PKCS#10格式打印出本地的证书申请信息。用户以PKCS#10格式保存证书申请信息到文件中，并通过带外方式发送给CA进行证书申请。</li>
<li><strong>SCEP方式（在线注册/下载方式）</strong><br>通过简单证书注册协议SCEP（Simple Certification Enrollment Protocol），利用HTTP协议与CA或RA通信，发送证书注册请求或证书下载请求消息，下载CA/RA证书、本地证书，或者申请本地证书。SCEP方式是最常用的证书自动注册方式。</li>
<li><strong>自签名证书</strong><br>PKI设备为自己颁发一个自签名证书，即证书签发者和证书主题相同。</li>
</ul>
<h3 id="证书更新"><a href="#证书更新" class="headerlink" title="证书更新"></a>证书更新</h3><p>设备在证书即将过期前，先申请一个证书作为“影子证书”，在当前证书过期后，影子证书成为当前证书，完成证书更新功能。</p>
<p>申请“影子证书”的过程，实质上是一个新的证书注册的过程。</p>
<p>证书更新功能需要CA服务器的支持，即CA服务器必须支持证书更新功能。</p>
<h3 id="证书下载"><a href="#证书下载" class="headerlink" title="证书下载"></a>证书下载</h3><p>证书下载是指终端实体通过SCEP协议，向CA服务器查询并下载已颁发的证书，或者通过CDP指定机制和地址，下载已颁发的证书。该证书可以是自己的证书，也可以是CA证书，或其他终端实体的证书。</p>
<h3 id="证书撤销"><a href="#证书撤销" class="headerlink" title="证书撤销"></a>证书撤销</h3><p>由于用户身份、用户信息或者用户公钥的改变、用户业务中止等原因，用户需要将自己的数字证书撤消，即撤消公钥与用户身份信息的绑定关系。在PKI中，CA撤销证书使用的方法为证书废除列表CRL，终端实体撤销自己的证书是通过带外方式申请的。</p>
<p>为了撤销自己的证书，终端实体必须采用带外方式通知CA服务器管理员。</p>
<p>管理员要求终端实体提供自己的Challenge Password（Challenge Password在证书注册时已作为PKCS10证书请求的属性发给了CA）。</p>
<p>如果终端实体提供的Challenge Password与CA服务器保存的一致，CA发布CRL来撤销证书。</p>
<h3 id="CRL下载"><a href="#CRL下载" class="headerlink" title="CRL下载"></a>CRL下载</h3><p>CA/RA不会主动把CRL发布给终端实体，而是由终端实体主动发起CRL查询。有两种下载CRL的方法：CDP方式、SCEP方式。</p>
<p>CA如果支持CDP，在为终端实体颁发证书时，把CRL发布点的URL地址编码成CDP属性封装在证书中，终端实体根据CDP来下载CRL。</p>
<p>如果证书中未携带CDP信息，并且设备本地也没有配置CDP的URL地址，则设备通过SCEP协议向CA服务器请求CRL。终端实体通过SCEP协议获取证书时，以证书签发者名字和证书序列号作为查询关键字。</p>
<h3 id="证书状态检查方式"><a href="#证书状态检查方式" class="headerlink" title="证书状态检查方式"></a>证书状态检查方式</h3><p>当终端实体验证对端证书时，经常需要检查对端证书是否有效，例如对端证书是否过期、是否被加入证书黑名单中，即检查证书的状态。通常终端实体检查证书状态的方式有三种：CRL方式、OCSP方式、None方式。</p>
<ul>
<li><p><strong>CRL方式</strong><br>如果CA支持CDP，那么当CA签发证书时，在证书中会包含CDP信息，描述了获取该证书CRL的途径和方式。终端实体利用CDP中指定的机制和地址来定位和下载CRL。</p>
<p>如果PKI域下配置了CDP的URL地址，该地址将覆盖证书中携带的CDP信息，终端实体使用配置的URL来获取CRL。</p>
</li>
<li><p><strong>在线证书状态协议OCSP（Online Certificate Status Protocol）方式</strong><br>如果CA不支持CDP，即证书中没有指定CDP，并且PKI域下也没有配置CRL的URL地址，终端实体可以使用OCSP协议检查证书状态。</p>
</li>
<li><p><strong>None方式</strong><br>如果终端实体没有可用的CRL和OCSP服务器，或者不需要检查对端证书状态，可以采用None方式，即不检查证书是否被撤销。</p>
</li>
</ul>
<h3 id="证书合法性验证"><a href="#证书合法性验证" class="headerlink" title="证书合法性验证"></a>证书合法性验证</h3><p>终端实体获取对端证书后，当需要对对端进行证书认证时，例如需要与对端建立安全隧道或安全连接，通常需要验证对端证书和证书签发者的合法性。如果证书签发者的证书无效或过期，则由该CA签发的所有证书都不再有效。但在CA证书过期前，设备会自动更新CA/RA证书，异常情况下才会出现CA证书过期现象。</p>
<p>为完成证书验证，除了需要对端证书外，本地设备需要下面的信息：信任的CA证书、CRL、本端数字证书及其私钥、证书认证相关配置信息。</p>
<p>证书验证的主要过程如下：</p>
<ol>
<li>使用CA证书的公钥验证认证机构的签名是否正确。</li>
<li>根据证书的有效期，验证证书是否过期。</li>
<li>检查证书的状态，即通过CRL、OCSP、None等方式检查证书是否被撤销。</li>
</ol>
<h3 id="证书链验证"><a href="#证书链验证" class="headerlink" title="证书链验证"></a>证书链验证</h3><p>为验证一个数字证书的合法性，首先需要获得签发这个证书的CA的公钥（即获得CA证书），以便检查该证书上CA的签名。一个CA可以让另一个更高层次的CA来证明其数字证书的合法性，这样顺着证书链，验证数字证书就变成了一个叠代过程，最终这个链必须在某个“信任点”（一般是持有自签名证书的根CA或者是实体信任的中间CA）处结束。</p>
<p>所谓的证书链，是指从终端实体证书到根证书的一系列可信任证书构成的证书序列。任何终端实体，如果它们共享相同的根CA或子CA，并且已获取CA证书，都可以验证对端证书。一般情况下，当验证对端证书链时，验证过程在碰到第一个可信任的证书或CA机构时结束。</p>
<p>证书链的验证过程是一个从目标证书（待验证的实体证书）到信任点证书逐层验证的过程。</p>
]]></content>
      
        <categories>
            
            <category> 基础知识 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 公钥基础设施 </tag>
            
            <tag> 证书 </tag>
            
            <tag> 转载 </tag>
            
            <tag> pki </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[使用 brew 和 brew-cask 安装常用程序]]></title>
      <url>/p/20170403/install-apps-by-brew-cask/</url>
      <content type="html"><![CDATA[<p>Mac平台的包管理工具 <a href="http://brew.sh/" target="_blank" rel="external">homebrew</a> 和 <a href="https://caskroom.github.io/" target="_blank" rel="external">homebrew-cask</a> </p>
<h3 id="安装-brew"><a href="#安装-brew" class="headerlink" title="安装 brew"></a>安装 brew</h3><p>将以下命令粘贴至终端运行</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">/usr/bin/ruby -e <span class="string">"<span class="variable">$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)</span>"</span></div></pre></td></tr></table></figure>
<h3 id="安装-brew-cask"><a href="#安装-brew-cask" class="headerlink" title="安装 brew-cask"></a>安装 brew-cask</h3><p>homevbrew 已集成 homebrew-cask，不需要额外安装了 </p>
<a id="more"></a>
<h3 id="安装-quicklook"><a href="#安装-quicklook" class="headerlink" title="安装 quicklook"></a>安装 quicklook</h3><p>常用 quicklook 列表<br><a href="https://github.com/sindresorhus/quick-look-plugins" target="_blank" rel="external">https://github.com/sindresorhus/quick-look-plugins</a></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">brew cask install qlcolorcode qlstephen qlmarkdown quicklook-json qlprettypatch quicklook-csv betterzipql webp-quicklook suspicious-package</div></pre></td></tr></table></figure>
<h3 id="安装日常应用"><a href="#安装日常应用" class="headerlink" title="安装日常应用"></a>安装日常应用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line"> </div><div class="line">brew cask install qq</div><div class="line">brew cask install qqinput   <span class="comment"># qq输入法</span></div><div class="line">brew cask install qqmacmgr  <span class="comment"># 腾讯电脑管家</span></div><div class="line">brew cask install qqmusic   <span class="comment"># qq音乐</span></div><div class="line">brew cask install rtx       <span class="comment"># 腾讯RTX</span></div><div class="line"></div><div class="line">brew cask install aliwangwang</div><div class="line">brew cask install thunder </div><div class="line">brew cask install baiducloud  <span class="comment"># 百度网盘</span></div><div class="line">brew cask install youdao      <span class="comment"># 有道词典  </span></div><div class="line"></div><div class="line">brew cask install mplayerx    <span class="comment"># 视频播放器</span></div><div class="line">brew cask install batterzip   <span class="comment"># zip，付费</span></div><div class="line">brew cask install daisydisk</div></pre></td></tr></table></figure>
<h3 id="安装开发与效率工具"><a href="#安装开发与效率工具" class="headerlink" title="安装开发与效率工具"></a>安装开发与效率工具</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment"># markdown</span></div><div class="line">brew cask install typora</div><div class="line">brew cask install macdown </div><div class="line">   </div><div class="line"><span class="comment"># 效率</span></div><div class="line">brew cask install alfred	  </div><div class="line">brew cask install xmind     <span class="comment"># 思维导图</span></div><div class="line">brew cask install calibre   <span class="comment"># 电子书管理</span></div><div class="line"></div><div class="line"><span class="comment"># 虚拟机</span></div><div class="line">brew cask install genymotion</div><div class="line">brew cask install virtualbox</div><div class="line">brew cask install vagrant</div><div class="line"></div><div class="line"><span class="comment"># 版本管理</span></div><div class="line">brew cask install sourcetree    <span class="comment"># git</span></div><div class="line">brew cask install versions      <span class="comment"># svn，付费</span></div><div class="line">brew cask install kaleidoscope  <span class="comment"># 文件比较，付费</span></div><div class="line">  </div><div class="line"><span class="comment"># 开发</span></div><div class="line">brew cask install iterm2</div><div class="line">brew cask install gas-mask        <span class="comment"># host 管理 </span></div><div class="line">brew cask install sqlitebrowser</div><div class="line">brew cask install shadowsocksx </div><div class="line"></div><div class="line"><span class="comment"># 请求/抓包</span></div><div class="line">brew cask install cocoapacketanalyzer <span class="comment"># tcp/ip 抓包</span></div><div class="line">brew cask install charles <span class="comment"># http 抓包，付费 </span></div><div class="line">brew cask install postman <span class="comment"># api工具，http 请求模拟 </span></div><div class="line">brew cask install paw     <span class="comment"># api工具，http 请求模拟，付费</span></div></pre></td></tr></table></figure>]]></content>
      
        <categories>
            
            <category> 工具 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 工具 </tag>
            
            <tag> brew </tag>
            
            <tag> brew-cask </tag>
            
            <tag> homebrew </tag>
            
            <tag> mac </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[第三方SDK集成库(授权|分享|支付)]]></title>
      <url>/p/20170331/sdk3rd-authorize-share-payment/</url>
      <content type="html"><![CDATA[<blockquote>
<p><a href="https://github.com/czy1121/sdk3rd" target="_blank" rel="external">https://github.com/czy1121/sdk3rd</a></p>
</blockquote>
<p>第三方SDK集成库，支持 授权/分享/支付 等功能</p>
<ul>
<li>授权 目前支持 微信/QQ/新浪微博，客户端只需要配置APPID(新浪微博)</li>
<li>分享 目前支持 微信(会话/朋友圈/收藏)，QQ/QZone，新浪微博</li>
<li>支付 目前支持 支付宝/微信支付</li>
<li>对于授权与分享，客户端不用配置APPSECRET，只需要要APPID(新浪微博授权需要redirectUrl)</li>
<li>对于支付，APPID包含在由后端动态返回的paydata里</li>
<li>可注册自定义平台实现，满足特殊需求</li>
<li>分享并未实现ui，需要自己提供ui</li>
</ul>
<a id="more"></a>
<p><img src="https://raw.githubusercontent.com/czy1121/sdk3rd/master/screenshot.png" alt="screenshot"></p>
<p>目前这个库还不稳定，有些细节并未仔细考虑，有些功能也并未进行测试，支持的平台也不多，欢迎大家 star/issue/pr，共同完善这个库</p>
<h3 id="关于授权"><a href="#关于授权" class="headerlink" title="关于授权"></a>关于授权</h3><p>成功后的结果为 “code|{code}”, “token|{openId}|{token}” 两种形式</p>
<ul>
<li>微信授权是OAuth2.0返回的授权码(code)</li>
<li>QQ授权是SSO返回的是token</li>
<li>微博授权其文档说是支持SSO与OAuth2.0，根据情况可能返回code与token</li>
</ul>
<p>但客户端其实不需要关心是code还是token，直接把result发结服务端就好了</p>
<h3 id="关于支付"><a href="#关于支付" class="headerlink" title="关于支付"></a>关于支付</h3><p>很多支付类库会在客户端处理商品支付信息，其实这是不必要的，直接由服务端返回数据并交给支付SDK，然后处理支付结果就好了</p>
<h3 id="关于分享"><a href="#关于分享" class="headerlink" title="关于分享"></a>关于分享</h3><p>支持 纯文本/纯图片/图文/网页/音乐/视频 等分享类型</p>
<ul>
<li>网页/音乐/视频 是卡片形式，可添加 标题(title)/描述(description)/缩略图(thumb)</li>
<li>微信朋友圈的网页链接不显示 description</li>
<li>新浪微博文本包含的网址会转成链接</li>
<li>QZone 的 纯文本/纯图片/图文/视频 以“说说”的形式发布</li>
</ul>
<table>
<thead>
<tr>
<th>平台</th>
<th>纯文本</th>
<th>纯图片</th>
<th>图文</th>
<th>网页</th>
<th>音乐</th>
<th>视频</th>
</tr>
</thead>
<tbody>
<tr>
<td>QQ</td>
<td>x</td>
<td>o</td>
<td>x</td>
<td>o</td>
<td>o</td>
<td>x</td>
</tr>
<tr>
<td>QZone</td>
<td>o</td>
<td>o</td>
<td>o</td>
<td>o</td>
<td>x</td>
<td>o</td>
</tr>
<tr>
<td>WXSession</td>
<td>o</td>
<td>o</td>
<td>x</td>
<td>o</td>
<td>o</td>
<td>o</td>
</tr>
<tr>
<td>WXTimeline</td>
<td>o</td>
<td>o</td>
<td>x</td>
<td>o</td>
<td>o</td>
<td>o</td>
</tr>
<tr>
<td>Weibo</td>
<td>o</td>
<td>o</td>
<td>o</td>
<td>x</td>
<td>x</td>
<td>x</td>
</tr>
<tr>
<td>SendToQQ</td>
<td>o</td>
<td>o</td>
<td>x</td>
<td>x</td>
<td>x</td>
<td>x</td>
</tr>
<tr>
<td>SendToWXS</td>
<td>o</td>
<td>o</td>
<td>x</td>
<td>x</td>
<td>x</td>
<td>x</td>
</tr>
<tr>
<td>SendToWXT</td>
<td>o</td>
<td>o</td>
<td>x</td>
<td>x</td>
<td>x</td>
<td>x</td>
</tr>
</tbody>
</table>
<h2 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h2><h3 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h3><p>运行demo需要在<code>gradle.properties</code>中修改app的<strong>包名，签名和为app申请的APPID</strong></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">APPLICATION_ID=ezy.demo.sdk3rd</div><div class="line"></div><div class="line">APPID_QQ=YOUR_APPID</div><div class="line">APPID_WEIXIN=YOUR_APPID</div><div class="line">APPID_WEIBO=YOUR_APPID</div><div class="line"></div><div class="line">SINGING_ALIAS=androiddebugkey</div><div class="line">SINGING_PASSWORD=android</div><div class="line">SINGING_FILE=debug.keystore</div></pre></td></tr></table></figure>
<h3 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h3><figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line">repositories &#123;</div><div class="line">    maven &#123; url <span class="string">"https://jitpack.io"</span> &#125;</div><div class="line">&#125;</div><div class="line">dependencies &#123;</div><div class="line">    compile <span class="string">'com.github.czy1121.sdk3rd:sdk3rd:0.1.2'</span></div><div class="line">    compile <span class="string">'com.github.czy1121.sdk3rd:sdk3rd-alipay:0.1.1'</span></div><div class="line">    compile <span class="string">'com.github.czy1121.sdk3rd:sdk3rd-qq:0.1.0'</span></div><div class="line"></div><div class="line">    compile <span class="string">'com.sina.weibo.sdk:core:1.0.0:openDefaultRelease@aar'</span></div><div class="line">    compile <span class="string">'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:1.0.2'</span></div><div class="line"></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="使用配置"><a href="#使用配置" class="headerlink" title="使用配置"></a>使用配置</h3><p>配置APPID</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">PlatformConfig.useQQ(BuildConfig.APPID_QQ);</div><div class="line">PlatformConfig.useWeixin(BuildConfig.APPID_WEIXIN);</div><div class="line">PlatformConfig.useWeibo(BuildConfig.APPID_WEIBO, <span class="string">"http://www.sina.com/"</span>);</div><div class="line">PlatformConfig.usePayments();</div></pre></td></tr></table></figure>
<h3 id="使用授权SDK"><a href="#使用授权SDK" class="headerlink" title="使用授权SDK"></a>使用授权SDK</h3><p>设置全局事件回调(非必要)</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div></pre></td><td class="code"><pre><div class="line">AuthorizeSDK.setDefaultCallback(<span class="keyword">new</span> OnCallback() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onStarted</span><span class="params">(Activity activity)</span> </span>&#123;</div><div class="line">        Log.e(<span class="string">"ezy"</span>, <span class="string">"authorize started"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCompleted</span><span class="params">(Activity activity)</span> </span>&#123;</div><div class="line">        Log.e(<span class="string">"ezy"</span>, <span class="string">"authorize completed"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSucceed</span><span class="params">(Activity activity, Object result)</span> </span>&#123;</div><div class="line">        Log.e(<span class="string">"ezy"</span>, <span class="string">"authorize succeed"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailed</span><span class="params">(Activity activity, <span class="keyword">int</span> code, String message)</span> </span>&#123;</div><div class="line">        Log.e(<span class="string">"ezy"</span>, <span class="string">"authorize failed ["</span> + code + <span class="string">"]"</span> + message);</div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>接收授权结果(新浪微博/QQ)</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onActivityResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="keyword">int</span> resultCode, Intent data)</span> </span>&#123;</div><div class="line">    <span class="keyword">super</span>.onActivityResult(requestCode, resultCode, data);</div><div class="line">    AuthorizeSDK.onHandleResult(<span class="keyword">this</span>, requestCode, resultCode, data);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>调用授权</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">AuthorizeSDK.authorize(MainActivity.<span class="keyword">this</span>, platform, <span class="keyword">new</span> OnSucceed&lt;String&gt;() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSucceed</span><span class="params">(String result)</span> </span>&#123;</div><div class="line">        Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"登陆成功 - "</span> + result, Toast.LENGTH_LONG).show();</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>注册自定义平台，需要实现 IAuthorize 与相应的 IFactory</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">AuthorizeSDK.register(IFactory&lt;IAuthorize&gt; factory);</div><div class="line">AuthorizeSDK.register(String platformName, String appId, Class&lt;IAuthorize&gt; clazz);</div></pre></td></tr></table></figure>
<h3 id="使用支付SDK"><a href="#使用支付SDK" class="headerlink" title="使用支付SDK"></a>使用支付SDK</h3><p>全局事件回调的设置与授权SDK类似</p>
<p>调用支付</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">PaymentSDK.pay(MainActivity.<span class="keyword">this</span>, platform, paydata, <span class="keyword">new</span> OnSucceed&lt;String&gt;() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSucceed</span><span class="params">(String result)</span> </span>&#123;</div><div class="line">        <span class="comment">// todo</span></div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>注册自定义平台，需要实现 IPayable 与相应的 IFactory</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">PaymentSDK.register(IFactory&lt;IPayable&gt; factory);</div><div class="line">PaymentSDK.register(String platformName, Class&lt;IPayable&gt; clazz);</div></pre></td></tr></table></figure>
<h3 id="使用分享SDK"><a href="#使用分享SDK" class="headerlink" title="使用分享SDK"></a>使用分享SDK</h3><p>全局事件回调的设置与授权SDK类似</p>
<p>…</p>
<p>分享结果的接收也与授权SDK类似(QQ)</p>
<p>…</p>
<p>注册自定义平台，需要实现 IShareable 与相应的 IFactory</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">ShareSDK.register(IFactory&lt;IShareable&gt; factory);</div><div class="line">ShareSDK.register(String platformName, Class&lt;IShareable&gt; clazz);</div></pre></td></tr></table></figure>
<p>分享</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 分享纯文本</span></div><div class="line">ShareSDK.make(<span class="keyword">this</span>, text).share(platform);</div><div class="line"><span class="comment">// 分享纯图片</span></div><div class="line">ShareSDK.make(<span class="keyword">this</span>, <span class="keyword">new</span> MoImage(image)).share(platform);</div><div class="line"><span class="comment">// 分享图文</span></div><div class="line">ShareSDK.make(<span class="keyword">this</span>, text, <span class="keyword">new</span> MoImage(image)).share(platform);</div><div class="line"></div><div class="line"><span class="comment">// 分享网页链接</span></div><div class="line">ShareSDK.make(<span class="keyword">this</span>, <span class="keyword">new</span> MoWeb(url))</div><div class="line">        .withTitle(<span class="string">"这是标题"</span>)</div><div class="line">        .withDescription(<span class="string">"这是摘要"</span>)</div><div class="line">        .withThumb(thumb)</div><div class="line">        .share(platform, <span class="keyword">new</span> OnSucceed&lt;String&gt;() &#123;</div><div class="line">           <span class="meta">@Override</span></div><div class="line">           <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSucceed</span><span class="params">(String result)</span> </span>&#123;</div><div class="line">               Toast.makeText(MainActivity.<span class="keyword">this</span>, <span class="string">"分享成功"</span>, Toast.LENGTH_LONG).show();</div><div class="line">           &#125;</div><div class="line">        &#125;);</div><div class="line"></div><div class="line"><span class="comment">// 分享音乐</span></div><div class="line">ShareSDK.make(<span class="keyword">this</span>, <span class="keyword">new</span> MoMusic(url))</div><div class="line">        .withTitle(<span class="string">"这是标题"</span>)</div><div class="line">        .withDescription(<span class="string">"这是摘要"</span>)</div><div class="line">        .withThumb(thumb)</div><div class="line">        .share(platform);</div></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>友盟+分享组件90%常见问题汇总<br><a href="http://bbs.umeng.com/thread-17764-1-1.html" target="_blank" rel="external">http://bbs.umeng.com/thread-17764-1-1.html</a></p>
<p>友盟各平台可分享内容预览<br><a href="http://dev.umeng.com/social/android/share-detail#5" target="_blank" rel="external">http://dev.umeng.com/social/android/share-detail#5</a></p>
<p>Android 不同平台分享内容的详细说明<br><a href="http://wiki.mob.com/不同平台分享内容的详细说明" target="_blank" rel="external">http://wiki.mob.com/不同平台分享内容的详细说明</a></p>
<p>新浪微博SDK<br><a href="https://github.com/sinaweibosdk/weibo_android_sdk" target="_blank" rel="external">https://github.com/sinaweibosdk/weibo_android_sdk</a></p>
]]></content>
      
        <categories>
            
            <category> 开发 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
            <tag> 分享 </tag>
            
            <tag> 授权 </tag>
            
            <tag> 支付 </tag>
            
            <tag> sdk </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[一些 android sdk 的资源 xml 文件]]></title>
      <url>/p/20170110/android-sdk-xml/</url>
      <content type="html"><![CDATA[<blockquote>
<p>取自 <a href="https://developer.android.com/reference/android/R.layout.html" target="_blank" rel="external">https://developer.android.com/reference/android/R.layout.html</a> </p>
</blockquote>
<h2 id="android-R-layout"><a href="#android-R-layout" class="headerlink" title="android.R.layout"></a>android.R.layout</h2><h3 id="activity-list-item"><a href="#activity-list-item" class="headerlink" title="activity_list_item"></a>activity_list_item</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt; </div><div class="line"><span class="tag">&lt;<span class="name">LinearLayout</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:paddingTop</span>=<span class="string">"1dip"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:paddingBottom</span>=<span class="string">"1dip"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:paddingStart</span>=<span class="string">"8dip"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:paddingEnd</span>=<span class="string">"8dip"</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">ImageView</span> <span class="attr">android:id</span>=<span class="string">"@+id/icon"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"24dip"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"24dip"</span>/&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">TextView</span> <span class="attr">android:id</span>=<span class="string">"@android:id/text1"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_gravity</span>=<span class="string">"center_horizontal"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:paddingStart</span>=<span class="string">"?android:attr/listPreferredItemPaddingStart"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">LinearLayout</span>&gt;</span></div></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="select-dialog-item"><a href="#select-dialog-item" class="headerlink" title="select_dialog_item"></a>select_dialog_item</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt; </div><div class="line"><span class="tag">&lt;<span class="name">TextView</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@android:id/text1"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:minHeight</span>=<span class="string">"?android:attr/listPreferredItemHeight"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:textAppearance</span>=<span class="string">"?android:attr/textAppearanceLarge"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:textColor</span>=<span class="string">"?android:attr/textColorAlertDialogListItem"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">"center_vertical"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:paddingStart</span>=<span class="string">"14dip"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:paddingEnd</span>=<span class="string">"15dip"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:ellipsize</span>=<span class="string">"marquee"</span></span></div><div class="line"><span class="tag">/&gt;</span></div></pre></td></tr></table></figure>
<h3 id="select-dialog-singlechoice"><a href="#select-dialog-singlechoice" class="headerlink" title="select_dialog_singlechoice"></a>select_dialog_singlechoice</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt; </div><div class="line"><span class="tag">&lt;<span class="name">CheckedTextView</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@android:id/text1"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:minHeight</span>=<span class="string">"?android:attr/listPreferredItemHeight"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:textAppearance</span>=<span class="string">"?android:attr/textAppearanceLarge"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:textColor</span>=<span class="string">"?android:attr/textColorAlertDialogListItem"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">"center_vertical"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:paddingStart</span>=<span class="string">"12dip"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:paddingEnd</span>=<span class="string">"7dip"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:checkMark</span>=<span class="string">"?android:attr/listChoiceIndicatorSingle"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:ellipsize</span>=<span class="string">"marquee"</span></span></div><div class="line"><span class="tag">/&gt;</span></div></pre></td></tr></table></figure>
<h3 id="select-dialog-multichoice"><a href="#select-dialog-multichoice" class="headerlink" title="select_dialog_multichoice"></a>select_dialog_multichoice</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt; </div><div class="line"><span class="tag">&lt;<span class="name">CheckedTextView</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@android:id/text1"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:minHeight</span>=<span class="string">"?android:attr/listPreferredItemHeight"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:textAppearance</span>=<span class="string">"?android:attr/textAppearanceLarge"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:textColor</span>=<span class="string">"?android:attr/textColorAlertDialogListItem"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">"center_vertical"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:paddingStart</span>=<span class="string">"12dip"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:paddingEnd</span>=<span class="string">"7dip"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:checkMark</span>=<span class="string">"?android:attr/listChoiceIndicatorMultiple"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:ellipsize</span>=<span class="string">"marquee"</span></span></div><div class="line"><span class="tag">/&gt;</span></div></pre></td></tr></table></figure>
<h3 id="simple-gallery-item"><a href="#simple-gallery-item" class="headerlink" title="simple_gallery_item"></a>simple_gallery_item</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt; </div><div class="line"><span class="tag">&lt;<span class="name">TextView</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span> </span></div><div class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@android:id/text1"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:textAppearance</span>=<span class="string">"?android:attr/textAppearanceMedium"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:textColor</span>=<span class="string">"?android:attr/textColorPrimaryDisableOnly"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:maxLines</span>=<span class="string">"1"</span> /&gt;</span></div></pre></td></tr></table></figure>
<h3 id="simple-dropdown-item-1line"><a href="#simple-dropdown-item-1line" class="headerlink" title="simple_dropdown_item_1line"></a>simple_dropdown_item_1line</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt; </div><div class="line"><span class="tag">&lt;<span class="name">TextView</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span> </span></div><div class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@android:id/text1"</span></span></div><div class="line"><span class="tag">    <span class="attr">style</span>=<span class="string">"?android:attr/dropDownItemStyle"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:textAppearance</span>=<span class="string">"?android:attr/textAppearanceLargePopupMenu"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:singleLine</span>=<span class="string">"true"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"?android:attr/listPreferredItemHeight"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:ellipsize</span>=<span class="string">"marquee"</span> /&gt;</span></div></pre></td></tr></table></figure>
<h3 id="simple-expandable-list-item-1"><a href="#simple-expandable-list-item-1" class="headerlink" title="simple_expandable_list_item_1"></a>simple_expandable_list_item_1</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt; </div><div class="line"><span class="tag">&lt;<span class="name">TextView</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@android:id/text1"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"?android:attr/listPreferredItemHeight"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:paddingStart</span>=<span class="string">"?android:attr/expandableListPreferredItemPaddingLeft"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:textAppearance</span>=<span class="string">"?android:attr/textAppearanceListItem"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">"center_vertical"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:textAlignment</span>=<span class="string">"viewStart"</span></span></div><div class="line"><span class="tag">/&gt;</span></div><div class="line">``` </div><div class="line"></div><div class="line">### simple_expandable_list_item_2</div><div class="line"></div><div class="line">``` xml</div><div class="line">&lt;?xml version="1.0" encoding="utf-8"?&gt; </div><div class="line"><span class="tag">&lt;<span class="name">TwoLineListItem</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span> </span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"?android:attr/listPreferredItemHeight"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:paddingTop</span>=<span class="string">"2dip"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:paddingBottom</span>=<span class="string">"2dip"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:paddingStart</span>=<span class="string">"?android:attr/expandableListPreferredItemPaddingLeft"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:mode</span>=<span class="string">"twoLine"</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">TextView</span> <span class="attr">android:id</span>=<span class="string">"@android:id/text1"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">"6dip"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:textAppearance</span>=<span class="string">"?android:attr/textAppearanceListItem"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:textAlignment</span>=<span class="string">"viewStart"</span></span></div><div class="line"><span class="tag">    /&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">TextView</span> <span class="attr">android:id</span>=<span class="string">"@android:id/text2"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_below</span>=<span class="string">"@android:id/text1"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_alignStart</span>=<span class="string">"@android:id/text1"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:textAppearance</span>=<span class="string">"?android:attr/textAppearanceSmall"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:textAlignment</span>=<span class="string">"viewStart"</span></span></div><div class="line"><span class="tag">    /&gt;</span> </div><div class="line"><span class="tag">&lt;/<span class="name">TwoLineListItem</span>&gt;</span></div><div class="line">```  </div><div class="line"></div><div class="line">###	simple_list_item_1</div><div class="line"></div><div class="line">``` xml</div><div class="line"><span class="tag">&lt;<span class="name">TextView</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@android:id/text1"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:textAppearance</span>=<span class="string">"?android:attr/textAppearanceListItemSmall"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">"center_vertical"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:paddingStart</span>=<span class="string">"?android:attr/listPreferredItemPaddingStart"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:paddingEnd</span>=<span class="string">"?android:attr/listPreferredItemPaddingEnd"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:minHeight</span>=<span class="string">"?android:attr/listPreferredItemHeightSmall"</span> /&gt;</span></div></pre></td></tr></table></figure>
<h3 id="simple-list-item-2"><a href="#simple-list-item-2" class="headerlink" title="simple_list_item_2"></a>simple_list_item_2</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">TwoLineListItem</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span> </span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:minHeight</span>=<span class="string">"?attr/listPreferredItemHeight"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:mode</span>=<span class="string">"twoLine"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:paddingStart</span>=<span class="string">"?attr/listPreferredItemPaddingStart"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:paddingEnd</span>=<span class="string">"?attr/listPreferredItemPaddingEnd"</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">TextView</span> <span class="attr">android:id</span>=<span class="string">"@id/text1"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">"8dp"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:textAppearance</span>=<span class="string">"?attr/textAppearanceListItem"</span> /&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">TextView</span> <span class="attr">android:id</span>=<span class="string">"@id/text2"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_below</span>=<span class="string">"@id/text1"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_alignStart</span>=<span class="string">"@id/text1"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:textAppearance</span>=<span class="string">"?attr/textAppearanceListItemSecondary"</span> /&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">TwoLineListItem</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="simple-list-item-activated-1"><a href="#simple-list-item-activated-1" class="headerlink" title="simple_list_item_activated_1"></a>simple_list_item_activated_1</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">TextView</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@android:id/text1"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:textAppearance</span>=<span class="string">"?android:attr/textAppearanceListItemSmall"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">"center_vertical"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:paddingStart</span>=<span class="string">"?android:attr/listPreferredItemPaddingStart"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:paddingEnd</span>=<span class="string">"?android:attr/listPreferredItemPaddingEnd"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">"?android:attr/activatedBackgroundIndicator"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:minHeight</span>=<span class="string">"?android:attr/listPreferredItemHeightSmall"</span> /&gt;</span></div></pre></td></tr></table></figure>
<h3 id="simple-list-item-activated-2"><a href="#simple-list-item-activated-2" class="headerlink" title="simple_list_item_activated_2"></a>simple_list_item_activated_2</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">TwoLineListItem</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:paddingTop</span>=<span class="string">"2dip"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:paddingBottom</span>=<span class="string">"2dip"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">"?android:attr/activatedBackgroundIndicator"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:minHeight</span>=<span class="string">"?android:attr/listPreferredItemHeight"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:mode</span>=<span class="string">"twoLine"</span>&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">TextView</span> <span class="attr">android:id</span>=<span class="string">"@android:id/text1"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_marginStart</span>=<span class="string">"?android:attr/listPreferredItemPaddingStart"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_marginTop</span>=<span class="string">"6dip"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:textAppearance</span>=<span class="string">"?android:attr/textAppearanceListItem"</span> /&gt;</span></div><div class="line"></div><div class="line">    <span class="tag">&lt;<span class="name">TextView</span> <span class="attr">android:id</span>=<span class="string">"@android:id/text2"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_below</span>=<span class="string">"@android:id/text1"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:layout_alignStart</span>=<span class="string">"@android:id/text1"</span></span></div><div class="line"><span class="tag">        <span class="attr">android:textAppearance</span>=<span class="string">"?android:attr/textAppearanceListItemSecondary"</span> /&gt;</span></div><div class="line"></div><div class="line"><span class="tag">&lt;/<span class="name">TwoLineListItem</span>&gt;</span></div></pre></td></tr></table></figure>
<h3 id="simple-list-item-checked"><a href="#simple-list-item-checked" class="headerlink" title="simple_list_item_checked"></a>simple_list_item_checked</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">CheckedTextView</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@android:id/text1"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"?android:attr/listPreferredItemHeightSmall"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:textAppearance</span>=<span class="string">"?android:attr/textAppearanceListItemSmall"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">"center_vertical"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:checkMark</span>=<span class="string">"?android:attr/textCheckMark"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:paddingStart</span>=<span class="string">"?android:attr/listPreferredItemPaddingStart"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:paddingEnd</span>=<span class="string">"?android:attr/listPreferredItemPaddingEnd"</span> /&gt;</span></div></pre></td></tr></table></figure>
<h3 id="simple-list-item-single-choice"><a href="#simple-list-item-single-choice" class="headerlink" title="simple_list_item_single_choice"></a>simple_list_item_single_choice</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">CheckedTextView</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@android:id/text1"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"?android:attr/listPreferredItemHeightSmall"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:textAppearance</span>=<span class="string">"?android:attr/textAppearanceListItemSmall"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">"center_vertical"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:checkMark</span>=<span class="string">"?android:attr/listChoiceIndicatorSingle"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:paddingStart</span>=<span class="string">"?android:attr/listPreferredItemPaddingStart"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:paddingEnd</span>=<span class="string">"?android:attr/listPreferredItemPaddingEnd"</span> /&gt;</span></div></pre></td></tr></table></figure>
<h3 id="simple-list-item-multiple-choice"><a href="#simple-list-item-multiple-choice" class="headerlink" title="simple_list_item_multiple_choice"></a>simple_list_item_multiple_choice</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">CheckedTextView</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@android:id/text1"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"?android:attr/listPreferredItemHeightSmall"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:textAppearance</span>=<span class="string">"?android:attr/textAppearanceListItemSmall"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">"center_vertical"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:checkMark</span>=<span class="string">"?android:attr/listChoiceIndicatorMultiple"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:paddingStart</span>=<span class="string">"?android:attr/listPreferredItemPaddingStart"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:paddingEnd</span>=<span class="string">"?android:attr/listPreferredItemPaddingEnd"</span> /&gt;</span></div></pre></td></tr></table></figure>
<h3 id="simple-selectable-list-item"><a href="#simple-selectable-list-item" class="headerlink" title="simple_selectable_list_item"></a>simple_selectable_list_item</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">CheckedTextView</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@android:id/text1"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"?android:attr/listPreferredItemHeight"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:textAppearance</span>=<span class="string">"?android:attr/textAppearanceListItem"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:gravity</span>=<span class="string">"center_vertical"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:background</span>=<span class="string">"?android:attr/listChoiceBackgroundIndicator"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:paddingStart</span>=<span class="string">"8dip"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:paddingEnd</span>=<span class="string">"8dip"</span></span></div><div class="line"><span class="tag">/&gt;</span></div></pre></td></tr></table></figure>
<h3 id="simple-spinner-dropdown-item"><a href="#simple-spinner-dropdown-item" class="headerlink" title="simple_spinner_dropdown_item"></a>simple_spinner_dropdown_item</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">CheckedTextView</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@android:id/text1"</span></span></div><div class="line"><span class="tag">    <span class="attr">style</span>=<span class="string">"?android:attr/spinnerDropDownItemStyle"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:singleLine</span>=<span class="string">"true"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"?android:attr/dropdownListPreferredItemHeight"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:ellipsize</span>=<span class="string">"marquee"</span>/&gt;</span></div></pre></td></tr></table></figure>
<h3 id="simple-spinner-item"><a href="#simple-spinner-item" class="headerlink" title="simple_spinner_item"></a>simple_spinner_item</h3><figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">TextView</span> <span class="attr">xmlns:android</span>=<span class="string">"http://schemas.android.com/apk/res/android"</span> </span></div><div class="line"><span class="tag">    <span class="attr">android:id</span>=<span class="string">"@android:id/text1"</span></span></div><div class="line"><span class="tag">    <span class="attr">style</span>=<span class="string">"?android:attr/spinnerItemStyle"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:singleLine</span>=<span class="string">"true"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_width</span>=<span class="string">"match_parent"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:layout_height</span>=<span class="string">"wrap_content"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:ellipsize</span>=<span class="string">"marquee"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:textAlignment</span>=<span class="string">"inherit"</span>/&gt;</span></div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 开发 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
            <tag> xml </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Android Notification 详解]]></title>
      <url>/p/20161228/android-notification/</url>
      <content type="html"><![CDATA[<h2 id="1-简单用法"><a href="#1-简单用法" class="headerlink" title="1. 简单用法"></a>1. 简单用法</h2><p><strong>创建通知</strong></p>
<p>创建通知至少包含 <strong>小图标、标题、内容</strong> 才能显示</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">NotificationCompat.Builder builder = <span class="keyword">new</span> NotificationCompat.Builder(<span class="keyword">this</span>)</div><div class="line">        .setSmallIcon(R.drawable.notification_icon)</div><div class="line">        .setContentTitle(<span class="string">"My notification"</span>)</div><div class="line">        .setContentText(<span class="string">"Hello World!"</span>);</div></pre></td></tr></table></figure>
<p><strong>发送通知</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">NotificationManager manager = (NotificationManager) mContext.getSystemService(Context.NOTIFICATION_SERVICE);</div><div class="line">manager.notify(notifyId, builder.build());</div></pre></td></tr></table></figure>
<p><strong>取消通知</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">NotificationManager manager = (NotificationManager) mContext.getSystemService(Context.NOTIFICATION_SERVICE);</div><div class="line"></div><div class="line"><span class="comment">// 取消notifyId关联的通知</span></div><div class="line">manager.cancel(notifyId);</div><div class="line"></div><div class="line"><span class="comment">// 取消所有通知</span></div><div class="line">manager.cancelAll();</div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="2-基本信息"><a href="#2-基本信息" class="headerlink" title="2. 基本信息"></a>2. 基本信息</h2><p><strong>标题/内容/小图标</strong></p>
<p>必要信息</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 标题</span></div><div class="line">builder.setContentTitle(<span class="string">"这是通知标题"</span>);</div><div class="line"><span class="comment">// 内容</span></div><div class="line">builder.setContentText(<span class="string">"这是通知内容"</span>);</div><div class="line"><span class="comment">// 小图标</span></div><div class="line">builder.setSmallIcon(R.mipmap.ic_small_icon);</div></pre></td></tr></table></figure>
<p><strong>大图标</strong></p>
<p>大图标，未设置时使用小图标代替</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 大图标 </span></div><div class="line">Bitmap bitmap = BitmapFactory.decodeResource(context.getResources(), R.mipmap.ic_large_icon);</div><div class="line">builder.setLargeIcon(bitmap);</div></pre></td></tr></table></figure>
<p><strong>次要内容</strong>   </p>
<p>setContentInfo 在 api 24 被废弃，不再显示，用 setSubText 代替<br>setNumber 在 api 24 被废弃，不再显示</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 次要内容</span></div><div class="line">builder.setSubText(<span class="string">"这是通知的次要内容"</span>);</div><div class="line"><span class="comment">// 附加文本</span></div><div class="line">builder.setContentInfo(<span class="string">"INFO"</span>);</div><div class="line"><span class="comment">// 附加数字，等价于 setContentInfo, 为了显示效果用一个不同的字体尺寸显示数字</span></div><div class="line">builder.setNumber(<span class="number">123</span>);</div><div class="line">``` </div><div class="line"></div><div class="line">**时间** </div><div class="line"></div><div class="line">setShowWhen 在 api <span class="number">17</span> 被添加</div><div class="line">setChronometerCountDown 在 api <span class="number">24</span> 添加</div><div class="line"></div><div class="line">``` java  </div><div class="line"><span class="comment">// 设置时间</span></div><div class="line">builder.setWhen(System.currentTimeMillis())</div><div class="line"><span class="comment">// 设置是否显示时间</span></div><div class="line">builder.setShowWhen(<span class="keyword">false</span>);</div><div class="line"><span class="comment">// 设置是否显示时钟表示时间(count up)</span></div><div class="line">builder.setUsesChronometer(<span class="keyword">false</span>););</div><div class="line"><span class="comment">// 设置时钟是否为倒计时(count down)</span></div><div class="line">builder.setChronometerCountDown(<span class="keyword">false</span>);</div><div class="line">``` </div><div class="line"></div><div class="line"></div><div class="line">**进度条**</div><div class="line"> </div><div class="line">当使用了 setSubText() 后，进度条将不显示   </div><div class="line">api <span class="number">24</span> 之后，setSubText() 不再影响进度条</div><div class="line"></div><div class="line">``` java </div><div class="line"><span class="keyword">int</span> max = <span class="number">100</span>; <span class="comment">// 进度最大值</span></div><div class="line"><span class="keyword">int</span> progress = <span class="number">50</span>;  <span class="comment">// 当前进度</span></div><div class="line"><span class="keyword">int</span> indeterminate = <span class="keyword">false</span>; <span class="comment">// 是否是不明确的进度条</span></div><div class="line">builder.setProgress(max, progress, indeterminate);</div><div class="line">``` </div><div class="line"></div><div class="line">**状态栏摘要(ticker)** </div><div class="line"></div><div class="line">在 api <span class="number">21</span> 后不再显示，仅用于辅助服务。 </div><div class="line"></div><div class="line">``` java   </div><div class="line">builder.setTicker(<span class="string">"this is ticker"</span>); </div><div class="line">``` </div><div class="line"></div><div class="line">## 3. 标志符(Flags)</div><div class="line"></div><div class="line">|Flag|描述| </div><div class="line">|:---|:---| </div><div class="line">|Notification.FLAG_SHOW_LIGHTS|是否使用呼吸灯提醒|</div><div class="line">|Notification.FLAG_INSISTENT|持续提醒(声音/振动)直到用户响应(点击/取消)|</div><div class="line">|Notification.FLAG_ONLY_ALERT_ONCE|提醒(铃声/震动/滚动通知摘要)只执行一次|</div><div class="line">|Notification.FLAG_ONGOING_EVENT|正在进行中通知|</div><div class="line">|Notification.FLAG_AUTO_CANCEL|用户点击通知后自动取消|</div><div class="line">|Notification.FLAG_NO_CLEAR|用户无法取消|</div><div class="line">|Notification.FLAG_FOREGROUND_SERVICE|表示正在运行的服务| </div><div class="line"></div><div class="line"></div><div class="line">**设置是否使用呼吸灯提醒(FLAG_SHOW_LIGHTS)**</div><div class="line"></div><div class="line">通过 `builder.setLights` 或 `builder.setDefaults` 设置使用呼吸灯时会自动添加 `FLAG_SHOW_LIGHTS`</div><div class="line"></div><div class="line">**设置提醒只执行一次(FLAG_ONLY_ALERT_ONCE)**</div><div class="line"></div><div class="line">设置提醒只执行一次</div><div class="line"></div><div class="line">``` java </div><div class="line">builder.setOnlyAlertOnce(<span class="keyword">true</span>);</div></pre></td></tr></table></figure>
<p><strong>设置自动取消(FLAG_AUTO_CANCEL)</strong></p>
<p>需要同时设置了 setContentIntent() 才有效</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">builder.setAutoCancel(<span class="keyword">true</span>);</div><div class="line">builder.setContentIntent(pendingIntent);</div></pre></td></tr></table></figure>
<p><strong>设置通知为进行中(FLAG_ONGOING_EVENT)</strong></p>
<p>通常表示一个用户积极参与的后台任务，比如电话，下载，播放音乐等   </p>
<p>用户不能取消，效果类似<code>FLAG_NO_CLEAR</code><br>用户点击通知且设置了自动取消时会被删除</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">builder.setOngoing(<span class="keyword">true</span>);</div></pre></td></tr></table></figure>
<p><strong>设置 <code>FLAG_INSISTENT/FLAG_NO_CLEAR</code></strong></p>
<p>NotificationCompat.Builder 未提供设置方法，只能通过 Notification</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">Notification n = builder.build();</div><div class="line"><span class="comment">// 持续提醒直到用户响应</span></div><div class="line">n.flags |= Notification.FLAG_INSISTENT;</div><div class="line"><span class="comment">// 用户无法取消</span></div><div class="line">n.flags |= Notification.FLAG_NO_CLEAR;</div><div class="line">manager.notify(notifyId, n);</div></pre></td></tr></table></figure>
<h2 id="4-优先级"><a href="#4-优先级" class="headerlink" title="4. 优先级"></a>4. 优先级</h2><table>
<thead>
<tr>
<th style="text-align:left">优先级</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Notification.PRIORITY_MAX</td>
<td style="text-align:left">重要而紧急的通知，通知用户这个事件是时间上紧迫的或者需要立即处理的。</td>
</tr>
<tr>
<td style="text-align:left">Notification.PRIORITY_HIGH</td>
<td style="text-align:left">高优先级用于重要的通信内容，例如短消息或者聊天，这些都是对用户来说比较有兴趣的</td>
</tr>
<tr>
<td style="text-align:left">Notification.PRIORITY_DEFAULT</td>
<td style="text-align:left">默认优先级用于没有特殊优先级分类的通知</td>
</tr>
<tr>
<td style="text-align:left">Notification.PRIORITY_LOW</td>
<td style="text-align:left">低优先级可以通知用户但又不是很紧急的事件。只显示状态栏图标</td>
</tr>
<tr>
<td style="text-align:left">Notification.PRIORITY_MIN</td>
<td style="text-align:left">用于后台消息 (例如天气或者位置信息)。只有用户下拉通知抽屉才能看到内容</td>
</tr>
</tbody>
</table>
<p>设置优先级</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">builder.setPriority(Notification.PRIORITY_HIGH);</div></pre></td></tr></table></figure>
<h2 id="5-提醒通知到达"><a href="#5-提醒通知到达" class="headerlink" title="5. 提醒通知到达"></a>5. 提醒通知到达</h2><p>提供了 <strong>铃声/振动/呼吸灯</strong> 三种提醒方式，可以使用一种或同时使用多种</p>
<p><strong>使用默认提醒</strong></p>
<table>
<thead>
<tr>
<th style="text-align:left">FLAG</th>
<th style="text-align:left">描述</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:left">Notification.DEFAULT_SOUND</td>
<td style="text-align:left">添加默认声音提醒</td>
</tr>
<tr>
<td style="text-align:left">Notification.DEFAULT_VIBRATE</td>
<td style="text-align:left">添加默认震动提醒</td>
</tr>
<tr>
<td style="text-align:left">Notification.DEFAULT_LIGHTS</td>
<td style="text-align:left">添加默认呼吸灯提醒</td>
</tr>
<tr>
<td style="text-align:left">Notification.DEFAULT_ALL</td>
<td style="text-align:left">同时添加以上三种默认提醒</td>
</tr>
</tbody>
</table>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 添加默认声音提醒</span></div><div class="line">builder.setDefaults(Notification.DEFAULT_SOUND);</div><div class="line"></div><div class="line"><span class="comment">// 添加默认呼吸灯提醒，自动添加FLAG_SHOW_LIGHTS</span></div><div class="line">builder.setDefaults(Notification.DEFAULT_LIGHTS);</div></pre></td></tr></table></figure>
<p><strong>添加自定义提醒</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 添加自定义声音提醒</span></div><div class="line">builder.setSound(Uri.parse(<span class="string">"path/to/sound"</span>));</div><div class="line"></div><div class="line"><span class="comment">// 添加自定义震动提醒</span></div><div class="line"><span class="comment">// 延迟200ms后震动300ms，再延迟400ms后震动500ms</span></div><div class="line"><span class="keyword">long</span>[] pattern = <span class="keyword">new</span> <span class="keyword">long</span>[]&#123;<span class="number">200</span>,<span class="number">300</span>,<span class="number">400</span>,<span class="number">500</span>&#125;; </div><div class="line">builder.setVibrate(pattern);</div><div class="line"></div><div class="line"><span class="comment">// 添加自定义呼吸灯提醒，自动添加FLAG_SHOW_LIGHTS</span></div><div class="line"><span class="keyword">int</span> argb = <span class="number">0xffff0000</span>;  <span class="comment">// led灯光颜色</span></div><div class="line"><span class="keyword">int</span> onMs = <span class="number">300</span>;         <span class="comment">// led亮灯持续时间</span></div><div class="line"><span class="keyword">int</span> offMs = <span class="number">100</span>;        <span class="comment">// led熄灯持续时间</span></div><div class="line">builder.setLights(argb, onMs, offMs);</div></pre></td></tr></table></figure>
<h2 id="6-事件"><a href="#6-事件" class="headerlink" title="6. 事件"></a>6. 事件</h2><p><strong>点击内容事件</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">int</span> flags = PendingIntent.FLAG_UPDATE_CURRENT;</div><div class="line">Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, ResultActivity.class);</div><div class="line">PendingIntent pi = PendingIntent.getActivity(<span class="keyword">this</span>, <span class="number">0</span>, intent, flags);</div><div class="line">builder.setContentIntent(pi);</div></pre></td></tr></table></figure>
<p><strong>取消通知事件</strong></p>
<p>通知被用户取消时发送(清除所有，右滑删除)<br>“自动取消(<code>FLAG_AUTO_CANCEL</code>)”不会产生该事件</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Intent intent = <span class="keyword">new</span> Intent(ACTION);</div><div class="line">intent.putExtra(<span class="string">"op"</span>, op);</div><div class="line">PendingIntent pi = PendingIntent.getBroadcast(<span class="keyword">this</span>, <span class="number">0</span>, intent, <span class="number">0</span>);</div><div class="line">builder.setDeleteIntent(pi);</div></pre></td></tr></table></figure>
<p><strong>全屏通知事件</strong></p>
<p>响应紧急事件(比如来电)</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Intent intent = <span class="keyword">new</span> Intent(ACTION);</div><div class="line">intent.putExtra(<span class="string">"op"</span>, op);</div><div class="line">PendingIntent pi = PendingIntent.getBroadcast(<span class="keyword">this</span>, <span class="number">0</span>, intent, <span class="number">0</span>);</div><div class="line">builder.setFullScreenIntent(pi, <span class="keyword">true</span>);</div></pre></td></tr></table></figure>
<h2 id="7-浮动通知"><a href="#7-浮动通知" class="headerlink" title="7. 浮动通知"></a>7. 浮动通知</h2><p>Android 5.0(API 21)开始支持浮动通知</p>
<p>设备处于<strong>活动状态(设备未锁定且其屏幕已打开)</strong>时，可显示浮动通知</p>
<p>满足下列条件之一可触发浮动通知：</p>
<ul>
<li>用户的 Activity 处于全屏模式中（应用使用 fullScreenIntent）</li>
<li>通知具有<strong>较高的优先级</strong>(PRIORITY_MAX 或 PRIORITY_HIGH)并<strong>使用铃声或振动</strong></li>
</ul>
<p>注：国内各种ROM可能由于各种原因导致浮动通知不能显示</p>
<h2 id="8-锁定屏幕通知"><a href="#8-锁定屏幕通知" class="headerlink" title="8. 锁定屏幕通知"></a>8. 锁定屏幕通知</h2><p>Android 5.0(API 21)开始，通知可显示在锁定屏幕上。<br>可使用此功能提供媒体播放控件以及其他常用操作。<br>用户可以通过“设置”选择是否将通知显示在锁定屏幕上。  </p>
<p><strong>设置可见性</strong></p>
<ul>
<li><code>VISIBILITY_PUBLIC</code> 显示通知的完整内容。</li>
<li><code>VISIBILITY_SECRET</code> 不会在锁定屏幕上显示此通知的任何部分。</li>
<li><code>VISIBILITY_PRIVATE</code> 显示通知图标和内容标题等基本信息，但是隐藏通知的完整内容。</li>
</ul>
<p>设置 <code>VISIBILITY_PRIVATE</code> 后，还可以通过 <code>setPublicVersion()</code> 提供其中隐藏了某些详细信息的替换版本通知内容。</p>
<h2 id="9-扩展布局"><a href="#9-扩展布局" class="headerlink" title="9. 扩展布局"></a>9. 扩展布局</h2><p>Android 4.1(API 16) 开始支持扩展布局，下拉抽屉中最顶部的一条通知的扩展布局自动展开<br>Android 7.0(API 24) 开始每条通知都可以单独展开</p>
<h3 id="操作按钮"><a href="#操作按钮" class="headerlink" title="操作按钮"></a>操作按钮</h3><p>api 19 开始支持添加操作按钮，每个展开的通知可包含最多3个操作按钮</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 添加操作按钮</span></div><div class="line">builder.addAction(icon1, title1, pendingIntent1);</div><div class="line">builder.addAction(icon2, title2, pendingIntent2);</div></pre></td></tr></table></figure>
<h3 id="样式"><a href="#样式" class="headerlink" title="样式"></a>样式</h3><p>使用<code>Builder.setStyle()</code>设置扩展布局样式</p>
<p><strong>多行文本通知</strong></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Notification notif = <span class="keyword">new</span> Notification.Builder(mContext)</div><div class="line">     .setContentTitle(<span class="string">"New mail from "</span> + sender.toString())</div><div class="line">     .setContentText(subject)</div><div class="line">     .setSmallIcon(R.drawable.new_mail)</div><div class="line">     .setLargeIcon(aBitmap)</div><div class="line">     .setStyle(<span class="keyword">new</span> Notification.BigTextStyle().bigText(aVeryLongString))</div><div class="line">     .build();</div></pre></td></tr></table></figure>
<p><strong>大图通知</strong> </p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div></pre></td><td class="code"><pre><div class="line">Notification notif = <span class="keyword">new</span> Notification.Builder(mContext)</div><div class="line">     .setContentTitle(<span class="string">"New photo from "</span> + sender.toString())</div><div class="line">     .setContentText(subject)</div><div class="line">     .setSmallIcon(R.drawable.new_post)</div><div class="line">     .setLargeIcon(aBitmap)</div><div class="line">     .setStyle(<span class="keyword">new</span> Notification.BigPictureStyle().bigPicture(aBigBitmap))</div><div class="line">     .build();</div></pre></td></tr></table></figure>
<p><strong>收件箱通知</strong></p>
<p>最多显示5行消息</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">Notification notif = <span class="keyword">new</span> Notification.Builder(mContext)</div><div class="line">    .setContentTitle(<span class="string">"5 New mails from "</span> + sender.toString())</div><div class="line">    .setContentText(subject)</div><div class="line">    .setSmallIcon(R.drawable.new_mail)</div><div class="line">    .setLargeIcon(aBitmap)</div><div class="line">    .setStyle(<span class="keyword">new</span> Notification.InboxStyle()</div><div class="line">        .addLine(str1)</div><div class="line">        .addLine(str2)</div><div class="line">        .setContentTitle(<span class="string">""</span>)</div><div class="line">        .setSummaryText(<span class="string">"+3 more"</span>))</div><div class="line">    .build();</div></pre></td></tr></table></figure>
<h2 id="10-保留-Activity-返回栈"><a href="#10-保留-Activity-返回栈" class="headerlink" title="10. 保留 Activity 返回栈"></a>10. 保留 Activity 返回栈</h2><h3 id="常规-Activity"><a href="#常规-Activity" class="headerlink" title="常规 Activity"></a>常规 Activity</h3><p>默认情况下，从通知启动一个Activity，按返回键会回到主屏幕。</p>
<p>但某些时候有按返回键仍然留在当前应用的需求，这就要用到TaskStackBuilder了。</p>
<p>1、在manifest中定义Activity的关系</p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">activity</span></span></div><div class="line"><span class="tag">    <span class="attr">android:name</span>=<span class="string">".ResultActivity"</span></span></div><div class="line"><span class="tag">    <span class="attr">android:parentActivityName</span>=<span class="string">".MainActivity"</span>&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">activity</span>&gt;</span></div></pre></td></tr></table></figure>
<p>2、构建带返回栈的PendingIntent并发送通知</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 构建返回栈</span></div><div class="line">TaskStackBuilder tsb = TaskStackBuilder.create(<span class="keyword">this</span>);</div><div class="line">tsb.addParentStack(ResultActivity.class); </div><div class="line">tsb.addNextIntent(<span class="keyword">new</span> Intent(<span class="keyword">this</span>, ResultActivity.class));</div><div class="line"></div><div class="line"><span class="comment">// 构建包含返回栈的 PendingIntent</span></div><div class="line">PendingIntent pi = tsb.getPendingIntent(<span class="number">0</span>, PendingIntent.FLAG_UPDATE_CURRENT);</div><div class="line"></div><div class="line"><span class="comment">// 构建通知</span></div><div class="line">NotificationCompat.Builder builder = <span class="keyword">new</span> NotificationCompat.Builder(<span class="keyword">this</span>);</div><div class="line">...</div><div class="line">builder.setContentIntent(pi);</div><div class="line"></div><div class="line"><span class="comment">// 发送通知</span></div><div class="line">NotificationManager manager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);</div><div class="line">manager.notify(notifyId, builder.build());</div><div class="line">``` </div><div class="line"></div><div class="line">### 特殊Activity</div><div class="line"></div><div class="line">默认情况下，从通知启动的Activity会在近期任务列表里出现。</div><div class="line"></div><div class="line">如果不需要在近期任务里显示，则需要做以下操作:</div><div class="line"></div><div class="line"><span class="number">1</span>、在manifest中定义Activity</div><div class="line"></div><div class="line">``` xml</div><div class="line">&lt;activity</div><div class="line">    android:name=<span class="string">".ResultActivity"</span></div><div class="line">    android:launchMode=<span class="string">"singleTask"</span></div><div class="line">    android:taskAffinity=<span class="string">""</span></div><div class="line">    android:excludeFromRecents=<span class="string">"true"</span>&gt;</div><div class="line">&lt;/activity&gt;</div></pre></td></tr></table></figure>
<p>2、构建PendingIntent并发送通知</p>
<pre><code class="java"><span class="comment">// 创建 Intent</span>
Intent intent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, ResultActivity.class);
intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK | Intent.FLAG_ACTIVITY_CLEAR_TASK);

<span class="comment">// 创建 PendingIntent</span>
PendingIntent pi = PendingIntent.getActivity(<span class="keyword">this</span>, <span class="number">0</span>, intent, PendingIntent.FLAG_UPDATE_CURRENT);

<span class="comment">// 构建通知</span>
NotificationCompat.Builder builder = <span class="keyword">new</span> NotificationCompat.Builder(<span class="keyword">this</span>);
...
builder.setContentIntent(pi);

<span class="comment">// 发送通知</span>
NotificationManager manager = (NotificationManager) getSystemService(Context.NOTIFICATION_SERVICE);
manager.notify(notifyId, builder.build());
</code></pre>
<h2 id="Demo"><a href="#Demo" class="headerlink" title="Demo"></a>Demo</h2><p><a href="https://github.com/czy1121/NotificationDemo" target="_blank" rel="external">https://github.com/czy1121/NotificationDemo</a> </p>
<p><img src="https://github.com/czy1121/NotificationDemo/raw/master/screenshots/screenshot.png" alt="notify"></p>
<p>api 19 (android 4.4)</p>
<p><img src="https://github.com/czy1121/NotificationDemo/raw/master/screenshots/api19_big_text.png" alt="api19_big_text"> <img src="https://github.com/czy1121/NotificationDemo/raw/master/screenshots/api19_big_picture.png" alt="api19_big_picture"></p>
<p>api 21 (android 5.0)</p>
<p><img src="https://github.com/czy1121/NotificationDemo/raw/master/screenshots/api21_big_text.png" alt="api21_big_text"> <img src="https://github.com/czy1121/NotificationDemo/raw/master/screenshots/api21_big_picture.png" alt="api19_big_picture"><br><img src="https://github.com/czy1121/NotificationDemo/raw/master/screenshots/api21_progress_bar.png" alt="api21_progress_bar"> <img src="https://github.com/czy1121/NotificationDemo/raw/master/screenshots/api21_heads_up.png" alt="api21_heads_up"></p>
<p>api 24 (android 7.0)</p>
<p><img src="https://github.com/czy1121/NotificationDemo/raw/master/screenshots/api24_basic.png" alt="api24_basic"> <img src="https://github.com/czy1121/NotificationDemo/raw/master/screenshots/api24_progress_bar.png" alt="api24_progress_bar"><br><img src="https://github.com/czy1121/NotificationDemo/raw/master/screenshots/api24_heads_up.png" alt="api24_heads_up"></p>
<p>##参考</p>
<p><a href="https://developer.android.com/reference/android/app/Notification.Builder.html" target="_blank" rel="external">https://developer.android.com/reference/android/app/Notification.Builder.html</a><br><a href="https://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html" target="_blank" rel="external">https://developer.android.com/reference/android/support/v4/app/NotificationCompat.Builder.html</a><br><a href="https://developer.android.com/guide/topics/ui/notifiers/notifications.html" target="_blank" rel="external">https://developer.android.com/guide/topics/ui/notifiers/notifications.html</a></p>
<p>全面了解Android Notification<br><a href="http://www.jianshu.com/p/22e27a639787" target="_blank" rel="external">http://www.jianshu.com/p/22e27a639787</a></p>
]]></content>
      
        <categories>
            
            <category> 开发 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
            <tag> notification </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[适配悬浮窗权限与系统设置修改权限]]></title>
      <url>/p/20161225/android-special-permission/</url>
      <content type="html"><![CDATA[<p>Android 6.0的特殊权限(Special Permissions)包括</p>
<ul>
<li>悬浮窗权限(SYSTEM_ALERT_WINDOW)</li>
<li>系统设置修改权限(WRITE_SETTINGS)</li>
</ul>
<p>Android 6.0以前只要在manifest中申请了权限就是默认开启的<br>Android 6.0+需要在manifest中申请并且通过发送Intent让用户在设置界面进行勾选  </p>
<a id="more"></a>
<h2 id="适配"><a href="#适配" class="headerlink" title="适配"></a>适配</h2><p><strong>检测</strong></p>
<ul>
<li>API 23+(Android 6.0+/M) 使用 <code>Settings.canDrawOverlays</code>, <code>Settings.System.canWrite</code></li>
<li>API 18+(Android 4.3+/JellyBean MR2) 通过反射使用 <code>AppOpsManager.checkOp</code></li>
<li>API &lt; 18 默认权限开启，时始终返回 true</li>
</ul>
<p><strong>授权</strong> </p>
<ul>
<li><p>API 23+(Android 6.0+/M) 去系统设置面板就好 </p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">new</span> Intent(Settings.ACTION_MANAGE_OVERLAY_PERMISSION);</div><div class="line"><span class="keyword">new</span> Intent(Settings.ACTION_MANAGE_WRITE_SETTINGS);</div></pre></td></tr></table></figure>
</li>
<li><p>API 18+(Android 4.3+/JellyBean MR2) 默认权限开启 </p>
</li>
<li>API &lt; 18 默认权限开启，不做任何处理</li>
</ul>
<p><strong>切换授权状态</strong></p>
<p><code>AppOpsManager.setMode</code> 可用于<code>Android 4.3/4.4</code>修改授权状态</p>
<p>API 18 添加AppOpsManager(被隐藏，在Android 4.4公开)<br>API 21 后需要签名验证的权限<code>android.Manifest.permission.UPDATE_APP_OPS_STATS</code>，第三方应用用不了了。</p>
<p><strong>ROM</strong></p>
<p>有些Rom会默认禁用权限，通常都有自带的权限管理</p>
<p>API 18+ 有些Rom会默认禁用权限，通常都有自带的权限管理，这时就需要检测Rom类型然后跳转到对应的设置页面</p>
<p>API 23+ 本来去系统设置面板就好了，但有些Rom会用自带的权限管理替代系统设置面板，这时仍然需要检测Rom类型然后跳转到对应的设置页面</p>
<p>实际上是跳转到手机上的安全中心里对应的权限设置页，当安全中心版本不同时相应的权限设置页也有可能不一样</p>
<p>还有部分ROM的应用详细信息页可以设置权限</p>
<h2 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h2><p>主要是测了悬浮窗权限    </p>
<table>
<thead>
<tr>
<th>设备</th>
<th>系统版本</th>
<th>ROM版本</th>
<th>状态</th>
<th>跳转</th>
</tr>
</thead>
<tbody>
<tr>
<td>华为 荣耀7i</td>
<td>6.0.1</td>
<td>4.0</td>
<td>默认禁用</td>
<td>ok</td>
</tr>
<tr>
<td>华为 荣耀畅玩5X</td>
<td>5.1.1</td>
<td>4.0.1</td>
<td>默认禁用</td>
<td>ok</td>
</tr>
<tr>
<td>华为 Ascend P7</td>
<td>5.1.1</td>
<td>3.1</td>
<td>默认禁用</td>
<td>ok</td>
</tr>
<tr>
<td>华为 荣耀6</td>
<td>5.1.1</td>
<td>3.1</td>
<td>默认禁用</td>
<td>ok</td>
</tr>
<tr>
<td>华为 荣耀6Plus</td>
<td>4.4.4</td>
<td>3.0</td>
<td>默认禁用</td>
<td>ok</td>
</tr>
<tr>
<td>华为 畅享5S</td>
<td>5.1</td>
<td>3.0</td>
<td>默认禁用</td>
<td>ok</td>
</tr>
<tr>
<td>华为 P8</td>
<td>5.0.1</td>
<td>3.1</td>
<td>默认可用</td>
<td>ok,无<code>安全中心</code></td>
</tr>
<tr>
<td>小米 MI 5</td>
<td>6.0</td>
<td>V7</td>
<td>默认禁用</td>
<td>ok</td>
</tr>
<tr>
<td>小米 Note Pro</td>
<td>5.1.1</td>
<td>V8</td>
<td>默认禁用</td>
<td>ok</td>
</tr>
<tr>
<td>小米 红米 Pro</td>
<td>6.0</td>
<td>V8</td>
<td>默认禁用</td>
<td>ok</td>
</tr>
<tr>
<td>小米 红米1S</td>
<td>4.4.2</td>
<td>V7</td>
<td>默认禁用</td>
<td>ok</td>
</tr>
<tr>
<td>魅族 Pro5</td>
<td>5.1</td>
<td>5.1.11</td>
<td>默认禁用</td>
<td>ok</td>
</tr>
<tr>
<td>魅族 MX4</td>
<td>5.1</td>
<td>5.1.5</td>
<td>默认禁用</td>
<td>ok</td>
</tr>
<tr>
<td>魅族 魅蓝Note2</td>
<td>5.1</td>
<td>5.1.5</td>
<td>默认禁用</td>
<td>ok</td>
</tr>
<tr>
<td>魅族 M1</td>
<td>4.4.4</td>
<td>4.2.1</td>
<td>默认可用</td>
<td>ok<br>悬浮窗不能覆盖到其它应用上<br>详情页有悬浮窗权限设置，禁用后无影响</td>
</tr>
<tr>
<td>锤子 坚果</td>
<td>5.1.1</td>
<td>2.5.3</td>
<td>默认禁用</td>
<td>ok</td>
</tr>
<tr>
<td>锤子 坚果</td>
<td>4.4.4</td>
<td>2.1.2</td>
<td>默认禁用</td>
<td>ok</td>
</tr>
<tr>
<td>OPPO A53</td>
<td>5.1.1</td>
<td>2.1</td>
<td>默认可用</td>
<td>ok</td>
</tr>
<tr>
<td>OPPO R7s</td>
<td>4.4.4</td>
<td>2.1</td>
<td>默认可用</td>
<td>ok</td>
</tr>
<tr>
<td>VIVO X6S Plus</td>
<td>5.1.1</td>
<td>2.5</td>
<td>默认可用</td>
<td>到达<code>i管家</code>主页，未到悬浮窗管理页</td>
</tr>
<tr>
<td>VIVO X6</td>
<td>5.1</td>
<td>2.5</td>
<td>默认可用</td>
<td>到达<code>i管家</code>主页，未到悬浮窗管理页</td>
</tr>
<tr>
<td>VIVO X5</td>
<td>5.0</td>
<td>2.5</td>
<td>默认可用</td>
<td>到达<code>i管家</code>主页，未到悬浮窗管理页</td>
</tr>
<tr>
<td>VIVO X5M</td>
<td>5.0.2</td>
<td>2.0</td>
<td>默认可用</td>
<td>ok, <code>i管家</code>没有悬浮窗管理功能</td>
</tr>
<tr>
<td>VIVO Y23L</td>
<td>4.4.4</td>
<td>1.5</td>
<td>默认可用</td>
<td>ok, <code>i管家</code>没有悬浮窗管理功能</td>
</tr>
<tr>
<td>奇酷 青春版</td>
<td>5.1</td>
<td>/</td>
<td>默认禁用</td>
<td>ok</td>
</tr>
<tr>
<td>奇酷 F4</td>
<td>5.1</td>
<td>/</td>
<td>默认禁用</td>
<td>ok</td>
</tr>
<tr>
<td>奇酷 N4</td>
<td>6.0</td>
<td>/</td>
<td>默认禁用</td>
<td>ok</td>
</tr>
<tr>
<td>奇酷 N4S</td>
<td>6.0.1</td>
<td>/</td>
<td>默认禁用</td>
<td>ok</td>
</tr>
<tr>
<td>三星 Galaxy S6</td>
<td>6.0.1</td>
<td>/</td>
<td>默认可用</td>
<td>ok</td>
</tr>
<tr>
<td>三星 Galaxy Note4</td>
<td>6.0.1</td>
<td>/</td>
<td>默认可用</td>
<td>ok</td>
</tr>
<tr>
<td>摩托罗拉 X Style</td>
<td>5.1.1</td>
<td>/</td>
<td>默认可用</td>
<td>ok</td>
</tr>
<tr>
<td>联想 乐檬3</td>
<td>5.1.1</td>
<td>/</td>
<td>默认可用</td>
<td>ok</td>
</tr>
<tr>
<td>酷派 锋尚 pro</td>
<td>4.4.4</td>
<td>/</td>
<td>默认可用</td>
<td>ok</td>
</tr>
<tr>
<td>金立 F103</td>
<td>5.0</td>
<td>/</td>
<td>默认可用</td>
<td>ok</td>
</tr>
<tr>
<td>乐视 乐 Max</td>
<td>6.0.1</td>
<td>/</td>
<td>默认可用</td>
<td>ok</td>
</tr>
</tbody>
</table>
<p>百度云真机<br><a href="http://mtc.baidu.com/tinypace/main#/?from=DaoHang" target="_blank" rel="external">http://mtc.baidu.com/tinypace/main#/?from=DaoHang</a></p>
<p>腾讯优测真机<br><a href="http://remote.utest.qq.com/deviceSearch?type=remote" target="_blank" rel="external">http://remote.utest.qq.com/deviceSearch?type=remote</a></p>
<h2 id="兼容库"><a href="#兼容库" class="headerlink" title="兼容库"></a>兼容库</h2><p><a href="https://github.com/czy1121/settingscompat" target="_blank" rel="external">https://github.com/czy1121/settingscompat</a></p>
<p>欢迎star,fork,issue</p>
<p><img src="https://github.com/czy1121/settingscompat/raw/master/screenshot.png" alt="screenshot.png"> </p>
<h2 id="API"><a href="#API" class="headerlink" title="API"></a>API</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 检测是否授权</span></div><div class="line">SettingsCompat.canDrawOverlays(Context)</div><div class="line">SettingsCompat.canWriteSettings(Context)</div><div class="line"></div><div class="line"><span class="comment">// 设置授权状态，仅在未深度定制的 Android 4.3/4.4 上可用</span></div><div class="line">SettingsCompat.setDrawOverlays(Context, <span class="keyword">boolean</span>)</div><div class="line">SettingsCompat.setWriteSettings(Context, <span class="keyword">boolean</span>)</div><div class="line"></div><div class="line"><span class="comment">// 跳转到悬浮窗权限设置页</span></div><div class="line">SettingsCompat.manageDrawOverlays(Context)</div><div class="line"><span class="comment">// 跳转到系统设置修改权限设置页，暂时只支持 Android 6.0+</span></div><div class="line">SettingsCompat.manageWriteSettings(Context)</div></pre></td></tr></table></figure>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>Android 悬浮窗权限各机型各系统适配大全<br><a href="http://blog.csdn.net/self_study/article/details/52859790" target="_blank" rel="external">http://blog.csdn.net/self_study/article/details/52859790</a><br><a href="https://github.com/zhaozepeng/FloatWindowPermission" target="_blank" rel="external">https://github.com/zhaozepeng/FloatWindowPermission</a></p>
<p>Android M 权限最佳实践<br><a href="http://chen-wei.me/2016/11/10/android-permission-best-practice/" target="_blank" rel="external">http://chen-wei.me/2016/11/10/android-permission-best-practice/</a></p>
<p>Android 权限管理 —— AppOps<br><a href="http://3dobe.com/archives/51/" target="_blank" rel="external">http://3dobe.com/archives/51/</a></p>
<p>Android 4.3 隐藏功能 App Ops 分析<br><a href="https://mssun.me/blog/android-4-3-app-ops-analysis.html" target="_blank" rel="external">https://mssun.me/blog/android-4-3-app-ops-analysis.html</a></p>
<p><a href="http://androidxref.com/4.3_r2.1/xref/frameworks/base/core/java/android/app/AppOpsManager.java" target="_blank" rel="external">http://androidxref.com/4.3_r2.1/xref/frameworks/base/core/java/android/app/AppOpsManager.java</a></p>
]]></content>
      
        <categories>
            
            <category> 开发 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
            <tag> permission </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[常见APK反编译工具安装与使用]]></title>
      <url>/p/20161222/android-apk-decompilers/</url>
      <content type="html"><![CDATA[<h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><p>一些常见工具都可以通过 <a href="http://brew.sh/" target="_blank" rel="external">homebrew</a> 或 <a href="https://caskroom.github.io/" target="_blank" rel="external">homebrew-cask</a> 安装</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">brew install apktool</div><div class="line">brew install smali</div><div class="line">brew install dex2jar</div><div class="line">brew install jadx</div><div class="line">brew cask install jd-gui</div></pre></td></tr></table></figure>
<a id="more"></a>
<h2 id="APK-Analyzer"><a href="#APK-Analyzer" class="headerlink" title="APK Analyzer"></a>APK Analyzer</h2><p>Android Studio 自带的 APK Analyzer 可直接查看APK内的 图片，xml内容，dex结构，文件尺寸等，还可以比较两个apk的差异。</p>
<p>虽然不能导出资源有点可惜，但已经很强大方便了。</p>
<p>用法：将 apk 拖入 AndroidStudio 就好了</p>
<p>参考：<a href="https://developer.android.com/studio/build/apk-analyzer.html" target="_blank" rel="external">https://developer.android.com/studio/build/apk-analyzer.html</a></p>
<h2 id="apktool"><a href="#apktool" class="headerlink" title="apktool"></a>apktool</h2><p>apk 虽然实际上是个 zip 可以直接 unzip，但里边的 xml 都是 <code>Binaray XML</code> 形式，需要再次转化成 xml 才能查看。</p>
<p>apktool 可以将 apk 内的资源全部提取出来，同时 xml 也转化好可直接查看内容。</p>
<p>apktool 也可以用于在修改资源后重新打包 apk</p>
<p>用法：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">// 提取资源</div><div class="line">apktool d test.apk</div><div class="line"></div><div class="line">// 提取资源并指定输出目录</div><div class="line">apktool d test.apk -o <span class="built_in">test</span></div><div class="line"></div><div class="line">// 重新打包apk</div><div class="line">apktool b <span class="built_in">test</span></div></pre></td></tr></table></figure>
<p>参考：<a href="https://ibotpeaches.github.io/Apktool/" target="_blank" rel="external">https://ibotpeaches.github.io/Apktool/</a></p>
<h2 id="smali-baksmali"><a href="#smali-baksmali" class="headerlink" title="smali/baksmali"></a>smali/baksmali</h2><p>baksmali 可将 dex/odex 转成 .smali 文件集<br>smali 可将 .smali 文件集 转成 dex/odex</p>
<p>注：odex 转 smali 需要相应系统的 framework，<code>adb pull /system/framework</code></p>
<p>用法：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">// 将 test.dex 分解到 <span class="built_in">test</span> 目录</div><div class="line">baksmali test.dex -o <span class="built_in">test</span> </div><div class="line"></div><div class="line">// 将 <span class="built_in">test</span> 目录里的 smali 文件组装到 haha.dex</div><div class="line">smali <span class="built_in">test</span> -o haha.dex</div><div class="line"></div><div class="line">// 获取系统 framework</div><div class="line">adb pull /system/framework</div><div class="line">// 将 test.odex 分解到 <span class="built_in">test</span> 目录</div><div class="line">baksmali test.odex b framework -o <span class="built_in">test</span></div></pre></td></tr></table></figure>
<p>参考: <a href="https://github.com/JesusFreke/smali/wiki" target="_blank" rel="external">https://github.com/JesusFreke/smali/wiki</a><br>下载：<a href="https://bitbucket.org/JesusFreke/smali/downloads" target="_blank" rel="external">https://bitbucket.org/JesusFreke/smali/downloads</a></p>
<h2 id="dex2jar"><a href="#dex2jar" class="headerlink" title="dex2jar"></a>dex2jar</h2><p>dex2jar 可将 .dex 转换成 .jar</p>
<p>用法：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">// 将 test.dex 转成 test.jar 文件</div><div class="line">d2j-dex2jar test.dex -o test.jar</div></pre></td></tr></table></figure>
<p>参考: <a href="https://github.com/pxb1988/dex2jar" target="_blank" rel="external">https://github.com/pxb1988/dex2jar</a><br>下载：<a href="https://bitbucket.org/pxb1988/dex2jar/downloads" target="_blank" rel="external">https://bitbucket.org/pxb1988/dex2jar/downloads</a></p>
<h2 id="jadx"><a href="#jadx" class="headerlink" title="jadx"></a>jadx</h2><p>jadx 可以将 <code>.dex/.jar/.class</code> 文件反编译成 .java 源码<br>jadx 也可以直接反编译 .apk 并处理好资源(Banary xml -&gt; xml)</p>
<p>jadx-gui 可视化查看工具</p>
<p>用法：</p>
<figure class="highlight bash"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">// 反编译 test.dex 并输出到 <span class="built_in">test</span> 目录</div><div class="line">jadx test.dex -d <span class="built_in">test</span></div><div class="line"></div><div class="line">// 反编译 test.apk</div><div class="line">jadx test.apk -d <span class="built_in">test</span></div><div class="line"></div><div class="line">// 反编译 test.jar</div><div class="line">jadx test.jar -d <span class="built_in">test</span></div><div class="line"></div><div class="line">// 反编译 test.class</div><div class="line">jadx test.class -d <span class="built_in">test</span></div></pre></td></tr></table></figure>
<p>参考：<a href="https://github.com/skylot/jadx" target="_blank" rel="external">https://github.com/skylot/jadx</a></p>
<h2 id="jd-gui"><a href="#jd-gui" class="headerlink" title="jd-gui"></a>jd-gui</h2><p>jd-gui 可视化反编译查看 .jar 文件</p>
<p>参考：<a href="http://jd.benow.ca/" target="_blank" rel="external">http://jd.benow.ca/</a></p>
<h2 id="其它资源"><a href="#其它资源" class="headerlink" title="其它资源"></a>其它资源</h2><p>APK 在线反编译<br><a href="http://www.javadecompilers.com/apk" target="_blank" rel="external">http://www.javadecompilers.com/apk</a></p>
<p>反编译apk的步骤<br><a href="https://segmentfault.com/a/1190000007359713" target="_blank" rel="external">https://segmentfault.com/a/1190000007359713</a></p>
<p>手把手教你逆向分析 Android 程序<br><a href="https://segmentfault.com/a/1190000005133219" target="_blank" rel="external">https://segmentfault.com/a/1190000005133219</a></p>
<p>Android逆向之旅—反编译利器Apktool和Jadx源码分析以及错误纠正<br><a href="http://blog.csdn.net/jiangwei0910410003/article/details/51671019" target="_blank" rel="external">http://blog.csdn.net/jiangwei0910410003/article/details/51671019</a></p>
]]></content>
      
        <categories>
            
            <category> 工具 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
            <tag> 工具 </tag>
            
            <tag> homebrew </tag>
            
            <tag> apk </tag>
            
            <tag> decompile </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[阿里百川电商SDK(3.1)接入与使用]]></title>
      <url>/p/20161220/alibc-31-usage/</url>
      <content type="html"><![CDATA[<h2 id="接入"><a href="#接入" class="headerlink" title="接入"></a>接入</h2><h3 id="接入准备"><a href="#接入准备" class="headerlink" title="接入准备"></a>接入准备</h3><p>参考<br><a href="http://baichuan.taobao.com/docs/doc.htm?spm=a3c0d.7629140.0.0.L4aY7V&amp;treeId=129&amp;articleId=105645&amp;docType=1" target="_blank" rel="external">http://baichuan.taobao.com/docs/doc.htm?spm=a3c0d.7629140.0.0.L4aY7V&amp;treeId=129&amp;articleId=105645&amp;docType=1</a></p>
<ol>
<li>申请百川无线应用</li>
<li>下载安全图片</li>
<li>开通业务产品的使用权限</li>
<li>使用优惠券组件</li>
</ol>
<h3 id="添加安全图片"><a href="#添加安全图片" class="headerlink" title="添加安全图片"></a>添加安全图片</h3><p>将安全图片放在/res/drawable目录下，如果已经有安全图片，就替换。</p>
<h3 id="Gradle配置"><a href="#Gradle配置" class="headerlink" title="Gradle配置"></a>Gradle配置</h3><figure class="highlight gradle"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">repositories</span> &#123; </div><div class="line">    maven &#123; url <span class="string">"http://repo.baichuan-android.taobao.com/content/groups/BaichuanRepositories/"</span> &#125;</div><div class="line">&#125; </div><div class="line"><span class="keyword">dependencies</span> &#123;</div><div class="line">    <span class="comment">// 授权登陆 (MemberSDK)</span></div><div class="line">    <span class="keyword">compile</span> <span class="string">'com.ali.auth.sdk:alibabauth_core:1.2.4@jar'</span></div><div class="line">    <span class="keyword">compile</span> <span class="string">'com.ali.auth.sdk:alibabauth_ui:1.2.4@aar'</span></div><div class="line">    <span class="keyword">compile</span> <span class="string">'com.ali.auth.sdk:alibabauth_ext:1.2.4@jar'</span></div><div class="line">    </div><div class="line">    <span class="comment">// fastjson</span></div><div class="line">    <span class="keyword">compile</span> <span class="string">'com.alibaba:fastjson:1.2.9'</span></div><div class="line">    <span class="comment">// 基础电商组件(AlibcTradeSDK, AlibcTrade, AlibcLogin)</span></div><div class="line">    <span class="comment">// 包含打开detail,淘客分润,jsbridge注入等功能</span></div><div class="line">    <span class="keyword">compile</span> <span class="string">'com.alibaba.sdk.android:alibc_trade_sdk:3.1.1.20@aar'</span></div><div class="line">    <span class="comment">// 集成支付宝(可选)</span></div><div class="line">    <span class="keyword">compile</span> <span class="string">'com.alibaba.alipay:alipaySingle:20160825@jar'</span></div><div class="line">    <span class="comment">// 组件可用性统计</span></div><div class="line">    <span class="keyword">compile</span> <span class="string">'com.alibaba.mtl:app-monitor-sdk:2.5.1_for_bc'</span></div><div class="line">    </div><div class="line">    <span class="comment">// 基础安全组件</span></div><div class="line">    <span class="keyword">compile</span> <span class="string">'com.taobao.android:securityguardaar3:5.1.96@aar'</span></div><div class="line">    <span class="comment">// 网关</span></div><div class="line">    <span class="keyword">compile</span> <span class="string">'com.taobao.android:mtopsdk_allinone_open:1.3.0@jar'</span></div><div class="line">    <span class="comment">// 手机淘宝与三方app之间的往返跳转</span></div><div class="line">    <span class="keyword">compile</span> <span class="string">'com.taobao.android:alibc_applink:2.0.0.9@jar'</span></div><div class="line">    <span class="comment">// deviceID，主要用于计算设备的uttid， 设备唯一标识</span></div><div class="line">    <span class="keyword">compile</span> <span class="string">'com.taobao.android:utdid4all:1.1.5'</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<a id="more"></a>
<h3 id="Proguard-规则"><a href="#Proguard-规则" class="headerlink" title="Proguard 规则"></a>Proguard 规则</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div></pre></td><td class="code"><pre><div class="line">-keepattributes Signature</div><div class="line">-keep class sun.misc.Unsafe &#123; ; &#125;</div><div class="line">-keep class com.taobao.* &#123;*;&#125;</div><div class="line">-keep class com.alibaba.** &#123;*;&#125;</div><div class="line">-keep class com.alipay.** &#123;*;&#125;</div><div class="line">-dontwarn com.taobao.**</div><div class="line">-dontwarn com.alibaba.**</div><div class="line">-dontwarn com.alipay.**</div><div class="line">-keep class com.ut.** &#123;*;&#125;</div><div class="line">-dontwarn com.ut.**</div><div class="line">-keep class com.ta.** &#123;*;&#125;</div><div class="line">-dontwarn com.ta.**</div><div class="line">-keep class org.json.** &#123;*;&#125;</div><div class="line">-keep class com.ali.auth.** &#123;*;&#125;</div></pre></td></tr></table></figure>
<h2 id="使用电商SDK-3-1"><a href="#使用电商SDK-3-1" class="headerlink" title="使用电商SDK(3.1)"></a>使用电商SDK(3.1)</h2><h3 id="初始化"><a href="#初始化" class="headerlink" title="初始化"></a>初始化</h3><p>在应用的入口方法（比如Application的onCreate）中初始化百川SDK</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div></pre></td><td class="code"><pre><div class="line">AlibcTradeSDK.asyncInit(<span class="keyword">this</span>, <span class="keyword">new</span> AlibcTradeInitCallback() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="comment">// 初始化成功，设置相关的全局配置参数</span></div><div class="line">        </div><div class="line">        <span class="comment">// 是否使用支付宝</span></div><div class="line">        AlibcTradeSDK.setShouldUseAlipay(<span class="keyword">true</span>);</div><div class="line">        </div><div class="line">        <span class="comment">// 设置是否使用同步淘客打点</span></div><div class="line">        AlibcTradeSDK.setSyncForTaoke(<span class="keyword">true</span>);</div><div class="line">        </div><div class="line">        <span class="comment">// 是否走强制H5的逻辑，为true时全部页面均为H5打开</span></div><div class="line">        AlibcTradeSDK.setForceH5(<span class="keyword">true</span>);</div><div class="line">        </div><div class="line">        <span class="comment">// 设置全局淘客参数，方便开发者用同一个淘客参数，不需要在show接口重复传入</span></div><div class="line">        AlibcTradeSDK.setTaokeParams(taokeParams)</div><div class="line">        </div><div class="line">        <span class="comment">// 设置渠道信息(如果有渠道专享价，需要设置)</span></div><div class="line">        AlibcTradeSDK.setChannel(typeName, channelName)</div><div class="line"></div><div class="line">        <span class="comment">// ...</span></div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(<span class="keyword">int</span> code, String msg)</span> </span>&#123;</div><div class="line">        <span class="comment">//初始化失败，可以根据code和msg判断失败原因，详情参见错误说明</span></div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="资源销毁"><a href="#资源销毁" class="headerlink" title="资源销毁"></a>资源销毁</h3><p>在使用完成后，可以调用destroy方法，释放百川相应的资源引用</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">AlibcTradeSDK.destroy();</div></pre></td></tr></table></figure>
<h3 id="显示电商页面"><a href="#显示电商页面" class="headerlink" title="显示电商页面"></a>显示电商页面</h3><p>实例化页面参数(必填)</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div></pre></td><td class="code"><pre><div class="line"><span class="comment">// 商品详情，支持itemId和openItemId的商品，必填，不允许为null</span></div><div class="line">AlibcBasePage page = <span class="keyword">new</span> AlibcDetailPage(itemId);</div><div class="line"> </div><div class="line"><span class="comment">// 店铺，店铺id，支持明文id</span></div><div class="line">AlibcBasePage page = <span class="keyword">new</span> AlibcShopPage(shopId);</div><div class="line"> </div><div class="line"><span class="comment">// 添加购物车，支持itemId和openItemId的商品，必填，不允许为null；</span></div><div class="line">AlibcBasePage page = <span class="keyword">new</span> AlibcAddCartPage(itemId)</div><div class="line"> </div><div class="line"><span class="comment">// 我的订单</span></div><div class="line"><span class="comment">// status   默认跳转页面(0:全部, 1:待付款, 2:待发货, 3:待收货, 4:待评价)</span></div><div class="line"><span class="comment">// allOrder 为 true 显示所有订单，为false只显示通过当前app下单的订单 </span></div><div class="line">AlibcBasePage page = <span class="keyword">new</span> AlibcMyOrdersPage(status, allOrder);</div><div class="line"> </div><div class="line"><span class="comment">// 我的购物车</span></div><div class="line">AlibcBasePage page = <span class="keyword">new</span> AlibcMyCartsPage();</div><div class="line">     </div><div class="line"><span class="comment">// URL</span></div><div class="line">AlibcBasePage page = <span class="keyword">new</span> AlibcPage(taokeUrl);</div></pre></td></tr></table></figure>
<p>设置参数并并使用自定义webview打开页面</p>
<blockquote>
<p>[注意]：当传入webviewClient，并重载shouldOverrideUrlLoading方法时，遇到淘系链接情况下(即访问淘宝、天猫、登录、购物车等页面时)，该方法返回值要为false，否则可能会出现业务流程错误问题。</p>
</blockquote>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div></pre></td><td class="code"><pre><div class="line"></div><div class="line"><span class="comment">// 页面打开方式</span></div><div class="line">AlibcShowParams params = <span class="keyword">new</span> AlibcShowParams(OpenType.Native, isNeedPush);</div><div class="line"><span class="comment">// 淘宝客参数</span></div><div class="line">AlibcTaokeParams taoke = <span class="keyword">new</span> AlibcTaokeParams(pid, unionId, subId);</div><div class="line"><span class="comment">// 提供给三方传递配置参数</span></div><div class="line">Map&lt;String, String&gt; extras = <span class="keyword">new</span> HashMap&lt;&gt;(); </div><div class="line"></div><div class="line"><span class="comment">// activity, page, callback 为必填</span></div><div class="line">AlibcTrade.show(activity, webView, webViewClient, webChromeClient, page, params, taoke, extras, <span class="keyword">new</span> AlibcTradeCallback() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onTradeSuccess</span><span class="params">(TradeResult tradeResult)</span> </span>&#123;</div><div class="line">        <span class="comment">//打开电商组件，用户操作中成功信息回调。tradeResult：成功信息（结果类型：加购，支付；支付结果）</span></div><div class="line">    &#125;</div><div class="line"> </div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(<span class="keyword">int</span> code, String msg)</span> </span>&#123;</div><div class="line">        <span class="comment">//打开电商组件，用户操作中错误信息回调。code：错误码；msg：错误信息</span></div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<p>使用默认webview打开页面</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">AlibcTrade.show(context, page, params, taoke, extras, callback);</div></pre></td></tr></table></figure>
<h2 id="登陆授权-1-2-5"><a href="#登陆授权-1-2-5" class="headerlink" title="登陆授权(1.2.5)"></a>登陆授权(1.2.5)</h2><p>电商SDK已经集成登陆授权<br>在电商SDK初始化时，会自动初始化登陆授权 </p>
<h3 id="自动触发登陆"><a href="#自动触发登陆" class="headerlink" title="自动触发登陆"></a>自动触发登陆</h3><p>在电商SDK打开的页面中，在需要时会自动触发调用登陆授权SDK  </p>
<h3 id="手动触发登陆"><a href="#手动触发登陆" class="headerlink" title="手动触发登陆"></a>手动触发登陆</h3><p>通过 <code>AlibcLogin.showLogin</code> 方法可以手动调起登陆</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">AlibcLogin.getInstance().showLogin(activity, <span class="keyword">new</span> AlibcLoginCallback() &#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">()</span> </span>&#123; </div><div class="line">        <span class="comment">// </span></div><div class="line">    &#125;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(<span class="keyword">int</span> code, String message)</span> </span>&#123;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;);</div></pre></td></tr></table></figure>
<h3 id="接收登陆-登出结果"><a href="#接收登陆-登出结果" class="headerlink" title="接收登陆/登出结果"></a>接收登陆/登出结果</h3><p>为了正常接收登陆/登出的结果，需要重写传入的 activity 的 onActivityResult 方法</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="meta">@Override</span></div><div class="line"><span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onActivityResult</span><span class="params">(<span class="keyword">int</span> requestCode, <span class="keyword">int</span> resultCode, Intent data)</span> </span>&#123;   </div><div class="line">    CallbackContext.onActivityResult(<span class="keyword">this</span>, requestCode, resultCode, data);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="设置全局登陆回调"><a href="#设置全局登陆回调" class="headerlink" title="设置全局登陆回调"></a>设置全局登陆回调</h3><p>目前电商SDK里的 AlibcLogin 还未提供该功能<br>只能通过 MemberSDK 获取 LoginService 可以设置全局登陆回调</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">LoginService service = (LoginService)MemberSDK.getService(LoginService.class)</div><div class="line">service.setLoginCallback(<span class="keyword">new</span> LoginCallback()&#123;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onSuccess</span><span class="params">(Session session)</span> </span>&#123; </div><div class="line">        <span class="comment">// </span></div><div class="line">    &#125;</div><div class="line">    <span class="meta">@Override</span></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onFailure</span><span class="params">(<span class="keyword">int</span> code, String message)</span> </span>&#123;</div><div class="line"></div><div class="line">    &#125;</div><div class="line">&#125;)</div></pre></td></tr></table></figure>
<h3 id="错误码"><a href="#错误码" class="headerlink" title="错误码"></a>错误码</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">KernelMessageConstants</span> </span>&#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> GENERIC_SYSTEM_ERROR = <span class="number">10010</span>;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> SERVER_REQUEST_FAILED = <span class="number">15</span>;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> SERVICE_NOT_AVAILABLE_ERROR = <span class="number">17</span>; </div><div class="line">&#125;</div><div class="line"></div><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">SystemMessageConstants</span> <span class="keyword">extends</span> <span class="title">KernelMessageConstants</span> </span>&#123;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> JS_BRIDGE_MODULE_NOT_FOUND = <span class="number">10000</span>;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> USER_CANCEL_CODE = <span class="number">10003</span>;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> H5_LOGIN_FAILURE = <span class="number">10101</span>;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TAOBAO_CANCEL_CODE = <span class="number">10004</span>;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> TAOBAO_ERROR_CODE = <span class="number">10005</span>;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> JS_BRIDGE_METHOD_NOT_FOUND = <span class="number">951</span>;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> JS_BRIDGE_ANNOTATION_NOT_PRESENT = <span class="number">952</span>;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> NET_WORK_ERROR = <span class="number">10099</span>;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">int</span> NPE_ERROR = <span class="number">10098</span>; </div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h2 id="一些坑"><a href="#一些坑" class="headerlink" title="一些坑"></a>一些坑</h2><p><strong>在Dialog中打开页面</strong></p>
<p>由于 dialog 会给 context 包上一层 ContextThemeWrapper, 而与 dialog 交互时 sdk 可能会从其中的 view 获取 context 然后转成 activity 这时就会出现异常导致崩溃。  </p>
<p>一个解决办法是使用 <code>LayoutInflater.from(activity)</code> 来 inflate 对话框的布局</p>
<p><strong>【bug】在授权或支付页面返回(failure)时会把传入的activity关闭(finish)</strong></p>
<p>打开页面时必需传入一个activity，传入的activity被关闭，这通常不是期望的效果</p>
<p>通过重载传入的activity.finish方法可以临时解决</p>
<p>目前官方文档上使用的sdk版本 3.1.0.7 有这个问题，更新到 3.1.1.20 已经没有此问题</p>
<p><strong>【bug】AlibcTrade 的默认 WebViewClient.shouldInterceptRequest 方法的逻辑错误</strong></p>
<p>alibc_trade_sdk 包的 <code>com.alibaba.baichuan.android.trade.c.b.b</code> 类<br>它的 shouldInterceptRequest 方法如下</p>
<p>打开页面时我们传入的WebViewClient会被这个类代理</p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> WebResourceResponse <span class="title">shouldInterceptRequest</span><span class="params">(WebView var1, String var2)</span> </span>&#123;</div><div class="line">  <span class="keyword">return</span> VERSION.SDK_INT &gt; <span class="number">23</span> &amp;&amp; <span class="keyword">this</span>.a != <span class="keyword">null</span> &amp;&amp; <span class="keyword">this</span>.a.get() != <span class="keyword">null</span>?((WebViewClient)<span class="keyword">this</span>.a.get()).shouldInterceptRequest(var1, var2):<span class="keyword">super</span>.shouldInterceptRequest(var1, var2);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>这个方法是用于API LEVEL &lt; 21 的，然而 VERSION.SDK_INT &gt; 23 这个错误的判断导致原本应该被执行的代码未执行</p>
<p>4.x 的设备都会因此bug产生各种问题</p>
<h2 id="参考"><a href="#参考" class="headerlink" title="参考"></a>参考</h2><p>阿里百川 SDK 官方文档<br><a href="http://baichuan.taobao.com/docs/doc.htm?spm=a3c0d.7629140.0.0.fZiJXS&amp;treeId=129&amp;articleId=105645&amp;docType=1" target="_blank" rel="external">http://baichuan.taobao.com/docs/doc.htm?spm=a3c0d.7629140.0.0.fZiJXS&amp;treeId=129&amp;articleId=105645&amp;docType=1</a></p>
<p>3.1SDK 常见问题补充<br><a href="https://baichuan.bbs.taobao.com/detail.html?spm=a3c0d.7971500.0.0.OkQc3n&amp;postId=7215938" target="_blank" rel="external">https://baichuan.bbs.taobao.com/detail.html?spm=a3c0d.7971500.0.0.OkQc3n&amp;postId=7215938</a></p>
<p>常见错误码<br><a href="http://baichuan.taobao.com/docs/doc.htm?spm=a3c0d.7629140.0.0.SjH1Xf&amp;treeId=129&amp;articleId=104308&amp;docType=1" target="_blank" rel="external">http://baichuan.taobao.com/docs/doc.htm?spm=a3c0d.7629140.0.0.SjH1Xf&amp;treeId=129&amp;articleId=104308&amp;docType=1</a></p>
<p>SG error:XXX错误码<br><a href="http://baichuan.taobao.com/docs/doc.htm?spm=a3c0d.7629140.0.0.AjAmY2&amp;treeId=129&amp;articleId=103222&amp;docType=1" target="_blank" rel="external">http://baichuan.taobao.com/docs/doc.htm?spm=a3c0d.7629140.0.0.AjAmY2&amp;treeId=129&amp;articleId=103222&amp;docType=1</a></p>
<p>客户端SDK常见问题<br><a href="http://baichuan.taobao.com/docs/doc.htm?spm=a3c0d.7629140.0.0.LQayyc&amp;treeId=129&amp;articleId=102553&amp;docType=1" target="_blank" rel="external">http://baichuan.taobao.com/docs/doc.htm?spm=a3c0d.7629140.0.0.LQayyc&amp;treeId=129&amp;articleId=102553&amp;docType=1</a></p>
]]></content>
      
        <categories>
            
            <category> 开发 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
            <tag> sdk </tag>
            
            <tag> 百川电商 </tag>
            
            <tag> sdk3rd </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[Rom 检测]]></title>
      <url>/p/20161111/android-rom-check/</url>
      <content type="html"><![CDATA[<p>由于 Android 机型繁多，存在着各种定制的ROM，所以在开发应用的过程中，时常需要针对不同的ROM进行适配。</p>
<p>对于深度定制的ROM通常检查<code>/system/build.prop</code>文件中的某些自定义字段(比如ROM版本名)是否存在来判断ROM类型。   </p>
<p>一些常见机型的 build.prop文件<br><a href="https://github.com/czy1121/settingscompat/tree/master/roms" target="_blank" rel="external">https://github.com/czy1121/settingscompat/tree/master/roms</a></p>
<p>对于未深度定制的系统，可能没有明显的自定义字段，这时直接用 <code>Build.MANUFACTURER</code> 来判断。</p>
<a id="more"></a>
<p>代码如下，检查是否某类型ROM，获取 ROM名称<code>RomUtil.getName()</code>，版本名<code>RomUtil.getVersion()</code></p>
<figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div><div class="line">52</div><div class="line">53</div><div class="line">54</div><div class="line">55</div><div class="line">56</div><div class="line">57</div><div class="line">58</div><div class="line">59</div><div class="line">60</div><div class="line">61</div><div class="line">62</div><div class="line">63</div><div class="line">64</div><div class="line">65</div><div class="line">66</div><div class="line">67</div><div class="line">68</div><div class="line">69</div><div class="line">70</div><div class="line">71</div><div class="line">72</div><div class="line">73</div><div class="line">74</div><div class="line">75</div><div class="line">76</div><div class="line">77</div><div class="line">78</div><div class="line">79</div><div class="line">80</div><div class="line">81</div><div class="line">82</div><div class="line">83</div><div class="line">84</div><div class="line">85</div><div class="line">86</div><div class="line">87</div><div class="line">88</div><div class="line">89</div><div class="line">90</div><div class="line">91</div><div class="line">92</div><div class="line">93</div><div class="line">94</div><div class="line">95</div><div class="line">96</div><div class="line">97</div><div class="line">98</div><div class="line">99</div><div class="line">100</div><div class="line">101</div><div class="line">102</div><div class="line">103</div><div class="line">104</div><div class="line">105</div><div class="line">106</div><div class="line">107</div><div class="line">108</div><div class="line">109</div><div class="line">110</div><div class="line">111</div><div class="line">112</div><div class="line">113</div><div class="line">114</div><div class="line">115</div><div class="line">116</div><div class="line">117</div><div class="line">118</div><div class="line">119</div><div class="line">120</div><div class="line">121</div><div class="line">122</div><div class="line">123</div><div class="line">124</div><div class="line">125</div><div class="line">126</div><div class="line">127</div><div class="line">128</div><div class="line">129</div><div class="line">130</div><div class="line">131</div><div class="line">132</div><div class="line">133</div><div class="line">134</div><div class="line">135</div><div class="line">136</div><div class="line">137</div><div class="line">138</div><div class="line">139</div><div class="line">140</div><div class="line">141</div><div class="line">142</div><div class="line">143</div><div class="line">144</div><div class="line">145</div><div class="line">146</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RomUtil</span> </span>&#123;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String TAG = <span class="string">"RomUtil"</span>;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String ROM_MIUI = <span class="string">"MIUI"</span>;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String ROM_EMUI = <span class="string">"EMUI"</span>;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String ROM_FLYME = <span class="string">"FLYME"</span>;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String ROM_OPPO = <span class="string">"OPPO"</span>;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String ROM_SMARTISAN = <span class="string">"SMARTISAN"</span>;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String ROM_VIVO = <span class="string">"VIVO"</span>;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String ROM_QIKU = <span class="string">"QIKU"</span>;</div><div class="line"></div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String ROM_LENOVO = <span class="string">"LENOVO"</span>;</div><div class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">final</span> String ROM_SAMSUNG = <span class="string">"SAMSUNG"</span>;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String KEY_VERSION_MIUI = <span class="string">"ro.miui.ui.version.name"</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String KEY_VERSION_EMUI = <span class="string">"ro.build.version.emui"</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String KEY_VERSION_OPPO = <span class="string">"ro.build.version.opporom"</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String KEY_VERSION_SMARTISAN = <span class="string">"ro.smartisan.version"</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String KEY_VERSION_VIVO = <span class="string">"ro.vivo.os.version"</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String KEY_VERSION_GIONEE = <span class="string">"ro.gn.sv.version"</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String KEY_VERSION_LENOVO = <span class="string">"ro.lenovo.lvp.version"</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String KEY_VERSION_FLYME = <span class="string">"ro.build.display.id"</span>;</div><div class="line"></div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String KEY_EMUI_VERSION_CODE = <span class="string">"ro.build.hw_emui_api_level"</span>;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String KEY_MIUI_VERSION_CODE = <span class="string">"ro.miui.ui.version.code"</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String KEY_MIUI_HANDY_MODE_SF = <span class="string">"ro.miui.has_handy_mode_sf"</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String KEY_MIUI_REAL_BLUR = <span class="string">"ro.miui.has_real_blur"</span>;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String KEY_FLYME_PUBLISHED = <span class="string">"ro.flyme.published"</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String KEY_FLYME_FLYME = <span class="string">"ro.meizu.setupwizard.flyme"</span>;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String KEY_FLYME_ICON_FALG = <span class="string">"persist.sys.use.flyme.icon"</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String KEY_FLYME_SETUP_FALG = <span class="string">"ro.meizu.setupwizard.flyme"</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String KEY_FLYME_PUBLISH_FALG = <span class="string">"ro.flyme.published"</span>;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String KEY_VIVO_OS_NAME = <span class="string">"ro.vivo.os.name"</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String KEY_VIVO_OS_VERSION = <span class="string">"ro.vivo.os.version"</span>;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">final</span> String KEY_VIVO_ROM_VERSION = <span class="string">"ro.vivo.rom.version"</span>;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isEmui</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> check(ROM_EMUI);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isMiui</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> check(ROM_MIUI);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isVivo</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> check(ROM_VIVO);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isOppo</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> check(ROM_OPPO);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isFlyme</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> check(ROM_FLYME);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isQiku</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> check(ROM_QIKU) || check(<span class="string">"360"</span>);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isSmartisan</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">return</span> check(ROM_SMARTISAN);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String sName;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getName</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (sName == <span class="keyword">null</span>) &#123;</div><div class="line">            check(<span class="string">""</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> sName;</div><div class="line">    &#125;</div><div class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String sVersion;</div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getVersion</span><span class="params">()</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (sVersion == <span class="keyword">null</span>) &#123;</div><div class="line">            check(<span class="string">""</span>);</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> sVersion;</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">check</span><span class="params">(String rom)</span> </span>&#123;</div><div class="line">        <span class="keyword">if</span> (sName != <span class="keyword">null</span>) &#123;</div><div class="line">            <span class="keyword">return</span> sName.equals(rom);</div><div class="line">        &#125;</div><div class="line"></div><div class="line">        <span class="keyword">if</span> (!TextUtils.isEmpty(sVersion = getProp(KEY_VERSION_MIUI))) &#123;</div><div class="line">            sName = ROM_MIUI;</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!TextUtils.isEmpty(sVersion = getProp(KEY_VERSION_EMUI)))&#123;</div><div class="line">            sName = ROM_EMUI;</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!TextUtils.isEmpty(sVersion = getProp(KEY_VERSION_OPPO)))&#123;</div><div class="line">            sName = ROM_OPPO;</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!TextUtils.isEmpty(sVersion = getProp(KEY_VERSION_VIVO)))&#123;</div><div class="line">            sName = ROM_VIVO;</div><div class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (!TextUtils.isEmpty(sVersion = getProp(KEY_VERSION_SMARTISAN)))&#123;</div><div class="line">            sName = ROM_SMARTISAN;</div><div class="line">        &#125; <span class="keyword">else</span> &#123;</div><div class="line">            sVersion = Build.DISPLAY;</div><div class="line">            <span class="keyword">if</span> (sVersion.toUpperCase().contains(ROM_FLYME)) &#123;</div><div class="line">                sName = ROM_FLYME;</div><div class="line">            &#125; <span class="keyword">else</span> &#123;</div><div class="line">                sVersion = Build.UNKNOWN;</div><div class="line">                sName = Build.MANUFACTURER.toUpperCase();</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> sName.equals(rom);</div><div class="line">    &#125;</div><div class="line"></div><div class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getProp</span><span class="params">(String name)</span> </span>&#123;</div><div class="line">        String line = <span class="keyword">null</span>;</div><div class="line">        BufferedReader input = <span class="keyword">null</span>;</div><div class="line">        <span class="keyword">try</span> &#123;</div><div class="line">            Process p = Runtime.getRuntime().exec(<span class="string">"getprop "</span> + name);</div><div class="line">            input = <span class="keyword">new</span> BufferedReader(<span class="keyword">new</span> InputStreamReader(p.getInputStream()), <span class="number">1024</span>);</div><div class="line">            line = input.readLine();</div><div class="line">            input.close();</div><div class="line">        &#125; <span class="keyword">catch</span> (IOException ex) &#123;</div><div class="line">            Log.e(TAG, <span class="string">"Unable to read prop "</span> + name, ex);</div><div class="line">            <span class="keyword">return</span> <span class="keyword">null</span>;</div><div class="line">        &#125; <span class="keyword">finally</span> &#123;</div><div class="line">            <span class="keyword">if</span> (input != <span class="keyword">null</span>) &#123;</div><div class="line">                <span class="keyword">try</span> &#123;</div><div class="line">                    input.close();</div><div class="line">                &#125; <span class="keyword">catch</span> (IOException e) &#123;</div><div class="line">                    e.printStackTrace();</div><div class="line">                &#125;</div><div class="line">            &#125;</div><div class="line">        &#125;</div><div class="line">        <span class="keyword">return</span> line;</div><div class="line">    &#125;</div><div class="line">    <span class="comment">//    private static Properties props = new Properties();</span></div><div class="line">    <span class="comment">//    static &#123;</span></div><div class="line">    <span class="comment">//        try &#123;</span></div><div class="line">    <span class="comment">//            props.load(new FileInputStream(new File("/system/build.prop")));</span></div><div class="line">    <span class="comment">//        &#125; catch (IOException e) &#123;</span></div><div class="line">    <span class="comment">//</span></div><div class="line">    <span class="comment">//        &#125;</span></div><div class="line">    <span class="comment">//    &#125;</span></div><div class="line">    <span class="comment">//    public static String getProp(String name) &#123;</span></div><div class="line">    <span class="comment">//        return props.getProperty(name, Build.UNKNOWN);</span></div><div class="line">    <span class="comment">//    &#125;</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 开发 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> 适配 </tag>
            
            <tag> android </tag>
            
            <tag> rom </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【翻译】Supporting Different Screens in Web Apps]]></title>
      <url>/p/20161012/supporting-different-screen-in-web-apps/</url>
      <content type="html"><![CDATA[<blockquote>
<p>原文： <a href="https://developer.android.com/guide/webapps/targeting.html" target="_blank" rel="external">https://developer.android.com/guide/webapps/targeting.html</a></p>
</blockquote>
<p>由于 Android 可用于多种屏幕尺寸与像素密度，在 web 设计时你应当考虑这些因素以便页面总是以适当的尺寸显示。</p>
<p>当你的 web 页面目标为 Android 设备时，有两个需要考虑的主要因素：</p>
<ul>
<li><p><strong>视口(viewport)</strong><br>视口是一个为 web 页面提供绘图区域的矩形。你可以指定数个视口属性，比如尺寸和初始缩放系数(initial scale)。最重要是视口宽度，它定义了网页水平方向的可用像素总数(可用的CSS像素数)。</p>
</li>
<li><p><strong>屏幕密度(screen density)</strong><br><code>WebView</code> 和大多数 Android 上的网页浏览器会将你的CSS像素值转换为密度无关像素值，因此你的网页与中密度屏幕(约160dpi)显示为相同感知的尺寸。<br>但是，如果图像是你的网页设计的重要元素，你应该重视它们在不同密度屏幕上发生的缩放，因为 300px 宽的图像在 320dpi 屏幕上会被放大(每CSS像素使用更多的物理像素)并失真(模糊和像素化)。</p>
</li>
</ul>
<a id="more"></a>
<h2 id="设置视口属性"><a href="#设置视口属性" class="headerlink" title="设置视口属性"></a>设置视口属性</h2><p>视口(viewport)是你的网页绘图的区域。<br>虽然视口的可见区域在缩放时总是适应屏幕尺寸，但视口有自己的像素尺寸供网页使用。<br>例如，即使一个设备物理宽度是 480px，它的视口宽度也能用 800px。<br>这使得为 800px 宽设计的网页在视口缩放系数为1的屏幕上完全可见。<br>大多数 Android 上的网页浏览器(包括 Chrome)设置默认视口为一个大尺寸(被称为”wide viewport mode”，宽约 980px)。<br>也有许多浏览器默认会尽可能缩放以显示完整的视口宽度(被称为”overview mode”)。</p>
<blockquote>
<p>注意：当你的页面在 WebView 中呈现，它默认会使用完全缩放(full zoom)而不是“wide viewport mode”，你可以使用<code>setUseWideViewPort()</code>启用“wide viewport mode”。 </p>
</blockquote>
<p>你可以通过在网页文档的<code>&lt;head&gt;</code>中使用<code>&lt;meta name=&quot;viewport&quot; ...&gt;</code>标签来为网页定义视口属性，比如 宽度(width)与初始缩放级别(initial zoom level)。 </p>
<p>以下语法展示视口支持的各种属性与其值接受的类型： </p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span></span></div><div class="line"><span class="tag">      <span class="attr">content</span>=<span class="string">"</span></span></div><div class="line"><span class="tag"><span class="string">          height = [pixel_value | "</span><span class="attr">device-height</span>"] ,</span></div><div class="line"><span class="tag">          <span class="attr">width</span> = <span class="string">[pixel_value</span> | "<span class="attr">device-width</span>"] ,</span></div><div class="line"><span class="tag">          <span class="attr">initial-scale</span> = <span class="string">float_value</span> ,</span></div><div class="line"><span class="tag">          <span class="attr">minimum-scale</span> = <span class="string">float_value</span> ,</span></div><div class="line"><span class="tag">          <span class="attr">maximum-scale</span> = <span class="string">float_value</span> ,</span></div><div class="line"><span class="tag">          <span class="attr">user-scalable</span> = <span class="string">[</span>"<span class="attr">yes</span>" | "<span class="attr">no</span>"]</span></div><div class="line"><span class="tag">          " /&gt;</span></div></pre></td></tr></table></figure>
<p>例如，下面的<code>&lt;meta&gt;</code>标签指定视口宽度精确匹配设备屏幕宽度同时禁用了缩放： </p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>Example<span class="tag">&lt;/<span class="name">title</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">"viewport"</span> <span class="attr">content</span>=<span class="string">"width=device-width, user-scalable=no"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></div></pre></td></tr></table></figure>
<p>当你为移动设备优化网站时，你应该设置宽度为”device-width”以便在所有设备上刚好合适，然后使用CSS媒体查询(media queries)来灵活地适配不同屏幕尺寸的布局。 </p>
<blockquote>
<p>注意：仅当你确定你的网页布局是足够灵活同时内容能适应小屏幕的宽度时你才可以禁用用户缩放。 </p>
</blockquote>
<h2 id="使用CSS适配设备密度"><a href="#使用CSS适配设备密度" class="headerlink" title="使用CSS适配设备密度"></a>使用CSS适配设备密度</h2><p>Android 浏览器与 WebView 支持的CSS媒体查询特性<code>-webkit-device-pixel-ratio</code>让你能为指定的屏幕密度创建样式。你可以为这个特性取值 “0.75”, “1”, “1.5”，分别指定样式用于低(low)、中(medum)、高(high)密度屏幕的设备。</p>
<p>例如，你可以为各个密度分别创建样式表： </p>
<figure class="highlight html"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">media</span>=<span class="string">"screen and (-webkit-device-pixel-ratio: 1.5)"</span> <span class="attr">href</span>=<span class="string">"hdpi.css"</span> /&gt;</span></div><div class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">media</span>=<span class="string">"screen and (-webkit-device-pixel-ratio: 1.0)"</span> <span class="attr">href</span>=<span class="string">"mdpi.css"</span> /&gt;</span></div></pre></td></tr></table></figure>
<p>或，在一个样式表中指定不同的样式： </p>
<figure class="highlight css"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div></pre></td><td class="code"><pre><div class="line"><span class="selector-id">#header</span> &#123;</div><div class="line">    <span class="attribute">background</span>:<span class="built_in">url</span>(medium-density-image.png);</div><div class="line">&#125;</div><div class="line"></div><div class="line">@<span class="keyword">media</span> screen and (-webkit-device-pixel-ratio: <span class="number">1.5</span>) &#123;</div><div class="line">    <span class="comment">/* CSS for high-density screens */</span></div><div class="line">    <span class="selector-id">#header</span> &#123;</div><div class="line">        <span class="attribute">background</span>:<span class="built_in">url</span>(high-density-image.png);</div><div class="line">    &#125;</div><div class="line">&#125;</div><div class="line"></div><div class="line">@<span class="keyword">media</span> screen and (-webkit-device-pixel-ratio: <span class="number">0.75</span>) &#123;</div><div class="line">    <span class="comment">/* CSS for low-density screens */</span></div><div class="line">    <span class="selector-id">#header</span> &#123;</div><div class="line">        <span class="attribute">background</span>:<span class="built_in">url</span>(low-density-image.png);</div><div class="line">    &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>关于处理不同屏幕密度(特别是图片)的更多信息，参考 <a href="http://www.html5rocks.com/en/mobile/high-dpi/" target="_blank" rel="external">DPI Images for Variable Pixel Densities</a> </p>
<h2 id="使用JavaScript适配设备密度"><a href="#使用JavaScript适配设备密度" class="headerlink" title="使用JavaScript适配设备密度"></a>使用JavaScript适配设备密度</h2><p>Android 浏览器与 WebView 支持的DOM属性<code>window.devicePixelRatio</code>使你能查询当前设备的密度。<br>这个属性的值表示当前设备的缩放系数。 </p>
<p>举个例子，<br>如果其值是”1.0”，那么设备将被识别为中密度(medium density)且默认没有缩放；<br>如果其值是”1.5”，那么设备将被识别为高密度(high density)且页面默认放大为1.5倍；<br>如果其值是”0.75”，那么设备将被识别为低密度(low density)且页面默认缩小为0.75倍； </p>
<p>当然，Android 浏览器与 WebView 的缩放是基于网页的目标密度。默认目标是中密度(medium density)，但是你可以修改目标以调整网页在不同屏幕密度的缩放。 </p>
<p>举个例子，这里为你展示如何用JavaScript查询设备密度：</p>
<figure class="highlight js"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">if</span> (<span class="built_in">window</span>.devicePixelRatio == <span class="number">1.5</span>) &#123;</div><div class="line">  alert(<span class="string">"This is a high-density screen"</span>);</div><div class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (<span class="built_in">window</span>.devicePixelRatio == <span class="number">0.75</span>) &#123;</div><div class="line">  alert(<span class="string">"This is a low-density screen"</span>);</div><div class="line">&#125;</div></pre></td></tr></table></figure>
]]></content>
      
        <categories>
            
            <category> 开发 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
            <tag> 翻译 </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[【翻译】Android Studio - 创建 Android Library]]></title>
      <url>/p/20160919/android-studio-create-android-library/</url>
      <content type="html"><![CDATA[<blockquote>
<p>原文：Create an Android Library<br><a href="https://developer.android.com/studio/projects/android-library.html" target="_blank" rel="external">https://developer.android.com/studio/projects/android-library.html</a></p>
</blockquote>
<p>Android library 结构上与 Android 应用模块(app module) 相同。它可以包含构建应用所必需的一切，包括源码(source code)、资源文件(resource files)和清单(Android manifest)。然而 Android library 可以被编译成 AAR(Android Archive) 文件被 Android 应用模块 依赖，却不能被编译成APK在设备上运行。</p>
<p>库模块(library module)在下列情况下有用:</p>
<ol>
<li>当你创建的多个应用使用了相同组件，比如 activities、services、UI layouts。</li>
<li>当你创建的一个应用存在多个需要相同核心组件的APK版本，比如免费版与付费版。</li>
</ol>
<p>这两种情况下，简单的移动你想重用的文件到一个库模块中然后添加这个库模块作为各个应用模块的依赖。本文将教你怎样做。</p>
<a id="more"></a>
<h2 id="创建一个库模块"><a href="#创建一个库模块" class="headerlink" title="创建一个库模块"></a>创建一个库模块</h2><ol>
<li>点击 <strong>File &gt; New &gt; New Module</strong>.</li>
<li>在 <strong>Create New Module</strong> 窗口中，点击 <strong>Android Library</strong>，然后点击 <strong>Next</strong>。<br>另一选择是创建一个 <strong>Java Library</strong> ，它会构建一个传统的 JAR 文件。<br>JAR 文件对许多项目有用，特别是当你想在不同的平台分享代码时，但它不能包含对 Android 项目代码重用有益的资源或清单(manifest)文件。<br>所以这个指南重点在创建 Android Libraries.</li>
<li>给你的 Library 命名并选择一个最小的 SDK 版本，然后点击 <strong>Finish</strong>。</li>
</ol>
<p>一旦 Gradle 项目同步完成，库模块将出现在左边的 <strong>Project</strong> 面板中。如果你没看到新模块文件夹，请确保 <a href="https://developer.android.com/studio/projects/index.html#ProjectFiles" target="_blank" rel="external">Android view</a> 已显示.</p>
<h2 id="将-应用模块-转换成-库模块"><a href="#将-应用模块-转换成-库模块" class="headerlink" title="将 应用模块 转换成 库模块"></a>将 应用模块 转换成 库模块</h2><p>如果你有想重用代码的应用模块，可以把它转换成一个库模块，如下所述： </p>
<ol>
<li><p>打开现有应用模块的 build.gradle 文件，在顶部，你可以看到：</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">apply <span class="string">plugin:</span><span class="string">'com.android.application'</span></div></pre></td></tr></table></figure>
</li>
<li><p>更改插件赋值为如下所示：</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div></pre></td><td class="code"><pre><div class="line">  apply <span class="string">plugin:</span><span class="string">'com.android.library'</span></div><div class="line">  ``` </div><div class="line"><span class="number">3.</span> 点击 **Sync Project with Gradle Files**.</div><div class="line"></div><div class="line">就这样，这个模块的整个结构保持不变，但它现在是作为一个 Android library 且构建将创建一个 AAR 文件而非 APK 文件.</div><div class="line"></div><div class="line">## 添加你的 Library 作为依赖</div><div class="line"></div><div class="line">在应用模块中使用 Android Library 代码，过程如下:</div><div class="line"></div><div class="line"><span class="number">1.</span> 将 Library 添加到项目中有<span class="number">2</span>种方法(如果创建的库模块在同一个项目中，可跳过这步)</div><div class="line"></div><div class="line">  - 添加已编译的AAR或JAR文件：</div><div class="line">    <span class="number">1.</span> 点击 **File &gt; New Module**</div><div class="line">    <span class="number">2.</span> 点击 **Import .JAR/.AAR Package**，然后点击 **Next**</div><div class="line">    <span class="number">3.</span> 输入 AAR 或者 JAR 文件的位置，然后点击 **Finish**</div><div class="line">    </div><div class="line">  - 导入库模块到项目中：</div><div class="line">    <span class="number">1.</span> 点击 **File &gt; New &gt; Import Module**</div><div class="line">    <span class="number">2.</span> 输入库模块文件的位置，然后点击 **Finish**    </div><div class="line">    </div><div class="line">    库模块已经复制到你的项目中，因此你能够编辑 Library 代码。如果你想保持 Library 代码的唯一版本，那么这可能不是你想要的，你应该导入编译好的 AAR 文件.</div><div class="line">    </div><div class="line"><span class="number">2.</span> 确保 Library 列在 settings.gradle 文件里，这里显示为一个名字为 <span class="string">"my-library-module"</span> 的 <span class="string">Library:</span></div><div class="line">  ``` groovy</div><div class="line">  include <span class="string">':app'</span>, <span class="string">':my-library-module'</span></div></pre></td></tr></table></figure>
</li>
</ol>
<ol>
<li>打开应用模块的<code>build.gradle</code>文件，在<code>dependencies</code>块中添加如下代码:<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">dependencies &#123; </div><div class="line">    compile project(<span class="string">":my-library-module"</span>) </div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<ol>
<li>点击 <strong>Sync Project with Gradle Files</strong></li>
</ol>
<p>在上面这个例子中，名为<code>my-library-module</code>的 Android Library 模块成为<code>build.gradle</code>文件所在模块的构建依赖.</p>
<p>现在可以在你的应用模块中访问任何 Android library 的代码和资源，并且库的 AAR 文件会在构建时打包到你的 APK。</p>
<p>然而，如果你想单独分享你的 AAR 文件，你可以在<code>project-name/module-name/build/outputs/aar/</code>找到它，也可以通过点击 <strong>Build &gt; Make Project</strong> 重新产生。</p>
<h2 id="选择资源公开"><a href="#选择资源公开" class="headerlink" title="选择资源公开"></a>选择资源公开</h2><p>库里的资源默认是公开的(public)。要让所有资源为隐式私有(private)，你必须定义至少一个具体的公开属性(attribute as public)。资源包括你的项目<code>res/</code>目录中的所有文件，比如图像。要阻止你的库用户访问仅供内部使用的资源，你应该使用这种声明一个以上公开资源的自动化私有指定机制。 </p>
<p>公开资源需要添加声明到你的库的<code>public.xml</code>文件。如果你之前没有添加过公开资源，那你需要在你的库的<code>/res/values</code>目录创建<code>public.xml</code>文件。 </p>
<p>以下示例代码创建了两个名为 <code>mylib_app_name</code> 和 <code>mylib_public_string</code> 的公开字符串资源： </p>
<figure class="highlight xml"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line"><span class="tag">&lt;<span class="name">resources</span>&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">public</span> <span class="attr">name</span>=<span class="string">"mylib_app_name"</span> <span class="attr">type</span>=<span class="string">"string"</span>/&gt;</span></div><div class="line">    <span class="tag">&lt;<span class="name">public</span> <span class="attr">name</span>=<span class="string">"mylib_public_string"</span> <span class="attr">type</span>=<span class="string">"string"</span>/&gt;</span></div><div class="line"><span class="tag">&lt;/<span class="name">resources</span>&gt;</span></div></pre></td></tr></table></figure>
<p>任何你希望对使用你的库的开发者可见的资源都应该公开。例如，虽然 <a href="https://developer.android.com/topic/libraries/support-library/features.html#v7-appcompat" target="_blank" rel="external">v7 appcompat library</a> 的大部分资源都是私有的，但控制 Toolbar 组件以支持 <a href="https://developer.android.com/design/material/index.html" target="_blank" rel="external">material design</a> 的属性是公开的。 </p>
<p>隐式地让属性私有不仅能阻止你的库的用户感知到内部库资源(通过代码完成推荐)，还允许你去重命名或移除私有资源的同时不破坏库的客户(clients of library)。私有资源可以被代码完成和 <a href="https://developer.android.com/studio/write/theme-editor.html" target="_blank" rel="external">theme editor</a> 筛选出来，<a href="https://developer.android.com/studio/write/lint.html" target="_blank" rel="external">Lint</a> 会在你尝试使用私有资源时警告你。  </p>
<h2 id="开发者需要考虑的内容"><a href="#开发者需要考虑的内容" class="headerlink" title="开发者需要考虑的内容"></a>开发者需要考虑的内容</h2><p>当你开发<code>library module</code>和<code>dependent apps</code>，你应该注意到下列行为和限制:</p>
<p>一旦你将<code>library module</code>的引用添加到<code>Android app module</code>，就可以设置它们的优先级(relative priority)。在构建时，所有库根据优先级从低到高依次与应用合并.</p>
<ol>
<li><p><strong>资源合并冲突</strong></p>
<p>构建工具合并库模块的资源到<code>dependent app module</code>。如果给定的资源ID在这两个模块中都有定义，使用 app 的资源。</p>
<p>如果冲突发生在多个 AAR library 中，则使用从依赖列表中先列出的库的资源。</p>
<p>为了避免相同ID资源的冲突，考虑用一个前缀或者其它一致性命名方案以在模块(或所有项目)中保持唯一。</p>
</li>
<li><p><strong>库模块可以包含 JAR library</strong></p>
<p>你可以开发包含 JAR library 的库模块，但是，你需要手动编辑 <code>dependent app module</code> 的构建路径，并添加 JAR 文件的路径。</p>
</li>
<li><p><strong>库模块可以依赖外部 JAR library</strong></p>
<p>你可以开发依赖外部 JAR library 的库模块(比如 <code>Maps</code> 库)。这种情况下，<code>dependent app</code>必须建立对应包含外部库的目标(比如 Google APIs Add-On)。 注意，库模块和 <code>dependent app</code> 必须在它们清单(manifest)文件的 <a href="https://developer.android.com/guide/topics/manifest/uses-library-element.html" target="_blank" rel="external">&lt;uses-library&gt;</a> 元素中中声明外部库。</p>
</li>
<li><p><strong>库模块不能包括 raw assets</strong></p>
<p>工具不支持在库模块中使用 <code>raw asset</code> 文件(保存在 <code>assets/</code> 目录中)。app 使用的任意 asset 资源必须存储在自身模块的 <code>assets/</code> 目录中.</p>
</li>
<li><p><strong>应用模块的<code>minSdkVersion</code>必须大于或等于其在库中的定义</strong></p>
<p>库被编译为 <code>dependent app module</code> 的一部分，所以库模块中使用的 APIs 必须与<code>app module</code>支持的平台版本兼容。  </p>
</li>
<li><p><strong>每个库模块都创建它自己的R类</strong></p>
<p>当你建立有依赖的应用模块，库模块被编译到 AAR 文件然后被添加到应用模块。因此，每个库都有根据自身包名命名的R类。由主模块与库模块生成的R类被创建于被需要的所有模块的包， </p>
</li>
<li><p><strong>库模块可以包含自己的 ProGuard 配置文件</strong></p>
<p>你可以对库启用代码压缩，通过添加一个包含 ProGuard 指令的 ProGuard 配置文件到你的库中。构建工具将这个文件嵌入库模块生成的 AAR 文件中。当你添加库到一个应用模块，库的 ProGuard 文件将被追加到应用模块的 ProGuard 配置文件中(proguard.txt)。 </p>
<p>将 ProGuard 文件嵌入库模块，使你能确保依赖你的库的应用模块就不需要手动更新它们的 ProGuard 文件就能使用你的库。当 Android 应用模块运行 ProGuard 时，它会同时使用应用模块与库模块的指令所以你不需要单独对库运行 ProGuard。 </p>
<p>在你的库的 <code>build.gradle</code> 文件的 <code>defaultConfig</code> 块内使用 <code>consumerProguardFiles</code> 方法指定配置文件名称。例如，以下代码片段设置 <code>lib-proguard-rules.txt</code> 为库的 ProGuard 配置文件： </p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div></pre></td><td class="code"><pre><div class="line">android &#123;</div><div class="line">    defaultConfig &#123;</div><div class="line">        consumerProguardFiles <span class="string">'lib-proguard-rules.txt'</span></div><div class="line">    &#125;</div><div class="line">    ...</div><div class="line">&#125;</div><div class="line">``` </div><div class="line"></div><div class="line">默认情况下，应用模块引用库使用 `release` 构建，即使应用模块使用 `debug` 构建类型。要对库使用不同的构建类型，你必须添加依赖到应用模块 `build.gradle` 文件的 `dependencies` 块同时在库模块的 `build.gradle` 文件中设置 `publishNonDefault` 为 `<span class="literal">true</span>` 。例如，下列代码段置于应用的 `build.gradle` 文件中使得应用在 `debug` 模式构建时库使用 `debug` 构建类型，应用在 `release` 模式构建时库使用 `release` 构建类型： </div><div class="line"></div><div class="line">``` groovy</div><div class="line">dependencies &#123;</div><div class="line">    debugCompile project(<span class="string">path:</span> <span class="string">':library'</span>, <span class="string">configuration:</span> <span class="string">'debug'</span>)</div><div class="line">    releaseCompile project(<span class="string">path:</span> <span class="string">':library'</span>, <span class="string">configuration:</span> <span class="string">'release'</span>)</div><div class="line">&#125;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>  你还须要在库的 <code>build.gradle</code> 文件添加下列代码，对使用它的项目暴露库的 <code>non-release</code> 配置： </p>
  <figure class="highlight groovy"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">android &#123;</div><div class="line">    ...</div><div class="line">    publishNonDefault <span class="literal">true</span></div><div class="line">&#125;</div></pre></td></tr></table></figure>
<p>  注意：publishNonDefault 会增加构建时间。 </p>
<p>  要确保你的库的 ProGuard 规则不对应用模块产生多余的压缩副作用，包含的规则需要禁用对你的库无用的 ProGuard 特性。这些规则帮助开发者处理与应用模块中现存代码的冲突。举个例子，你的库的 ProGuard 文件可以在应用模块压缩<a href="https://developer.android.com/studio/build/shrink-code.html#keep-code" target="_blank" rel="external">指定什么代码需要被保留</a>。</p>
<blockquote>
<p>注意: <a href="https://source.android.com/source/jack.html#shrinking_and_obfuscation" target="_blank" rel="external">Jack toolchain</a> 仅支持 ProGuard 的压缩(shrinking)和混淆(obfuscation)选项。</p>
</blockquote>
]]></content>
      
        <categories>
            
            <category> 工具 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
            <tag> 翻译 </tag>
            
            <tag> Android Studio </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[启动体验设计-闪屏，启动页，引导页]]></title>
      <url>/p/20160911/make-launch-page/</url>
      <content type="html"><![CDATA[<h3 id="冷启动-cold-start"><a href="#冷启动-cold-start" class="headerlink" title="冷启动(cold start)"></a>冷启动(cold start)</h3><ul>
<li>冷启动是指应用尚未运行，系统创建进程并初始化应用。 </li>
<li>热启动是指应用已经运行但是在后台被挂起，从后台恢复应用。</li>
</ul>
<p>冷启动时间稍微会长一点，在此期间可能会看到<strong>白屏或黑屏</strong>或感受到明显的启动延迟(背景设为透明)。<br>解决方法是优化初始化逻辑或使用闪屏。</p>
<a id="more"></a>
<h3 id="闪屏-splash"><a href="#闪屏-splash" class="headerlink" title="闪屏(splash)"></a>闪屏(splash)</h3><p>闪屏是应用<strong>每次冷启动过程中</strong>展示给用户的一个过渡页面。 </p>
<p>用于减缓用户在打开应用时等待的焦虑情绪(欺骗用户以掩盖启动慢的事实)。</p>
<p>由于闪屏通常是一张背景图片，<strong>无法拥有交互，也不能动态修改</strong>，无法承载营销需求，所以需要启动页。</p>
<h3 id="启动页-launch"><a href="#启动页-launch" class="headerlink" title="启动页(launch)"></a>启动页(launch)</h3><p>启动页(launch)是一个<strong>每次启动后</strong>展示的<strong>类似闪屏</strong>的页面，根据服务端展示不同的些营销活动广告图片并引导用户点击。</p>
<p>由于下载时间不确定，启动图通常会<strong>缓存并在下次启动时使用</strong>。 </p>
<h3 id="引导页-guide"><a href="#引导页-guide" class="headerlink" title="引导页(guide)"></a>引导页(guide)</h3><p>引导页是在用户<strong>安装或更新第一次启动后</strong>展示的数个页面。</p>
<p>通常用于介绍应用的 <strong>核心概念，功能玩法，使用场景，重大变更</strong>。</p>
<p>为了降低用户反感程度，引导页数通常<strong>越少越好(&lt; 5)，并提供“跳过”按钮</strong>。 </p>
<p>启动页可以算是形似闪屏且只有一个页面的引导页。 </p>
<h3 id="启动流程"><a href="#启动流程" class="headerlink" title="启动流程"></a>启动流程</h3><p><img src="http://ocrfm2xav.bkt.clouddn.com/16-9-14/58078651.jpg" alt="启动流程"> </p>
<p>虽然 Apple 也曾经在《iOS 人机交互手册》里建议尽量不要展示闪屏或其它启动体验。</p>
<blockquote>
<p>尽量避免展示闪屏或其它启动体验，让用户能立即使用是最好的。<br>As much as possible, avoid displaying a splash screen or other startup experience. It’s best when users can begin using your app immediately.</p>
</blockquote>
<p>然而，闪屏/启动页/引导页 现在已经成为应用标配，一起组成了现在常见的启动流程，同时用于<strong>展示品牌性格，广告营销入口</strong>。</p>
<h3 id="Android-实现闪屏"><a href="#Android-实现闪屏" class="headerlink" title="Android 实现闪屏"></a>Android 实现闪屏</h3><p>使用 android:windowBackground 实现闪屏</p>
<ol>
<li><p>定义背景图 <code>drawable/splash</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div></pre></td><td class="code"><pre><div class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;</div><div class="line">&lt;layer-list xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;&gt;</div><div class="line">    &lt;item</div><div class="line">        android:drawable=&quot;@color/gray&quot;/&gt;</div><div class="line">    &lt;item&gt;</div><div class="line">        &lt;bitmap</div><div class="line">            android:gravity=&quot;center&quot;</div><div class="line">            android:src=&quot;@mipmap/ic_launcher&quot;/&gt;</div><div class="line">    &lt;/item&gt;</div><div class="line">&lt;/layer-list&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>定义闪屏页主题 <code>ThemeSplash</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">&lt;resources&gt; </div><div class="line">    &lt;style name=&quot;ThemeSplash&quot; parent=&quot;Theme.AppCompat.NoActionBar&quot;&gt;</div><div class="line">        &lt;item name=&quot;android:windowBackground&quot;&gt;@drawable/splash&lt;/item&gt;</div><div class="line">    &lt;/style&gt; </div><div class="line">&lt;/resources&gt;</div></pre></td></tr></table></figure>
</li>
<li><p>在闪屏页使用主题 <code>ThemeSplash</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div></pre></td><td class="code"><pre><div class="line">&lt;activity</div><div class="line">    android:name=&quot;.SplashActivity&quot;</div><div class="line">    android:theme=&quot;@style/ThemeSplash&quot;&gt;</div><div class="line">    &lt;intent-filter&gt;</div><div class="line">        &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;</div><div class="line">        &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;</div><div class="line">    &lt;/intent-filter&gt;</div><div class="line">&lt;/activity&gt;</div></pre></td></tr></table></figure>
</li>
</ol>
<p>注意：在有虚拟按键的手机上，闪屏底部会会被虚拟按键挡信，这点在设计时需要考虑到。</p>
<h3 id="iOS-实现闪屏"><a href="#iOS-实现闪屏" class="headerlink" title="iOS 实现闪屏"></a>iOS 实现闪屏</h3><p>有两种方式 </p>
<ul>
<li><code>静态启动图集(static launch images)</code>，根据要支持的屏幕尺寸提供 Default.png 系列文件即可。</li>
<li><code>启动图布局文件(launch screen file)</code>，只需要一个布局文件就可适配各种屏幕。</li>
</ul>
<h3 id="参考链接"><a href="#参考链接" class="headerlink" title="参考链接"></a>参考链接</h3><p><a href="https://www.zhihu.com/question/21686690" target="_blank" rel="external">app为什么要有启动页(Splash screen)</a><br><a href="http://www.jianshu.com/p/dc692bbe7a69" target="_blank" rel="external">APP设计之一：启动页</a><br><a href="http://www.jianshu.com/p/8729c3c33fc2" target="_blank" rel="external">APP设计之二：引导页</a><br><a href="http://www.jianshu.com/p/77054dccafdb" target="_blank" rel="external">iOS开发时如何使用 Launch Screen Storyboard</a><br><a href="http://blog.nimbledroid.com/2016/02/17/cold-start-times-of-top-apps.html?top?=25&amp;category=MUSIC_STREAMING" target="_blank" rel="external">Cold Start Times: An Analysis of Top Apps</a><br><a href="http://saulmm.github.io/avoding-android-cold-starts" target="_blank" rel="external">Avoiding cold starts on Android</a><br><a href="http://www.cocoachina.com/ios/20160105/14870.html" target="_blank" rel="external">Facebook iOS App如何优化启动时间</a></p>
]]></content>
      
        <categories>
            
            <category> 产品 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
            <tag> 启动页 </tag>
            
            <tag> 闪屏 </tag>
            
            <tag> 引导页 </tag>
            
            <tag> ios </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[如何修改设备密度?]]></title>
      <url>/p/20160909/change-device-density/</url>
      <content type="html"><![CDATA[<p>设备密度值值保存在文件<code>/system/build.prop</code>的<code>ro.sf.lcd_density</code>中。</p>
<p>经过 ROOT 的设备，使用 RE 工具，进入 <code>/system</code> 目录用文本编辑器打开 <code>build.prop</code> 找到 <code>ro.sf.lcd_density</code>，就可以看到当前密度值了，修改成想要的密度值即可。</p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">ro.sf.lcd_density=320</div></pre></td></tr></table></figure>
<p>修改设备密度，其实就是修改缩放系数：</p>
<blockquote>
<p>scale = density / 160</p>
</blockquote>
<p>density 值越大，scale 越小，屏幕上显示的内容就越多。<br>density 值越小，scale 越大，屏幕上显示的内容就越少。</p>
]]></content>
      
        <categories>
            
            <category> 开发 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
        </tags>
        
    </entry>
    
    <entry>
      <title><![CDATA[为什么规定每英寸160点的显示器上 1dp = 1px]]></title>
      <url>/p/20160909/per-inch-160-dot-1dp-equals-1px/</url>
      <content type="html"><![CDATA[<p>先看 <a href="https://developer.android.com/guide/practices/screens_support.html#terms" target="_blank" rel="external">Google 的官方定义</a></p>
<blockquote>
<p>在 160dpi 的屏幕上 1dp = 1px，160dpi 是系统为 mdpi 屏设定的基准密度。<br>The density-independent pixel is equivalent to one physical pixel on a 160 dpi screen, which is the baseline density assumed by the system for a ″medium″ density screen.</p>
</blockquote>
<p><strong>160dpi 是系统为 mdpi 屏设定的基准密度。</strong><br>这个160dpi是<strong>系统定义的设备密度值，用于计算px与dp的换算系数(scale)，不是物理密度</strong>。<br>厂商甚至用户都可以修改这个设备密度。   </p>
<p>dp 与 px 的换算系数(scale)就是通过设备密度除以基准密度160dpi得来的，是<strong>与物理密度无关</strong>的。</p>
<blockquote>
<p>scale = density / 160<br>px = dp * scale </p>
</blockquote>
<p>再看 <a href="https://developer.android.com/guide/practices/screens_support.html#range" target="_blank" rel="external">基准密度mdpi</a>，mdpi基于第一款 Android 设备 ″T-Mobile G1″ 的<strong>屏幕配置(缩放系数scale=1)</strong>。</p>
<blockquote>
<p>广义尺寸和密度是以 尺寸normal 和 密度mdpi 为基准设定的。<br>这个基准(normal,mdpi)是来自第一款 Android 设备 ″T-Mobile G1″ 的屏幕配置，它是 HVGA 屏(在 Android 1.6 之前唯一支持的屏幕配置)。<br>The generalized sizes and densities are arranged around a baseline configuration that is a normal size and mdpi (medium) density. This baseline is based upon the screen configuration for the first Android-powered device, the T-Mobile G1, which has an HVGA screen (until Android 1.6, this was the only screen configuration that Android supported).</p>
</blockquote>
<p>在 Android 1.6 之前没有设备密度的概念，也没有dp的概念，只支持HVGA屏(320x480)，缩放系数为 1。  </p>
<p>在 Android 1.6(API LEVEL 4) 支持多屏适配时，将设备密度分成了3个级别(ldpi/120,mdpi/160,hdpi/240)。<br>因此基准为 <code>mdpi,160dpi,scale=1</code>。 </p>
]]></content>
      
        <categories>
            
            <category> 开发 </category>
            
        </categories>
        
        
        <tags>
            
            <tag> android </tag>
            
        </tags>
        
    </entry>
    
  
  
</search>
